"7adda44b58792f84360427f33f6776bce5a46b13"
[cl-struct-undo-tree [nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil (#33=[nil nil ((210 . 212)) nil (23394 8311 182526 0) 0 nil]) ((#("6" 0 1 (fontified t)) . -210) (undo-tree-id5710 . -1) (undo-tree-id5711 . -1) (undo-tree-id5712 . -1) (undo-tree-id5713 . 1) (undo-tree-id5714 . -1) (undo-tree-id5715 . -1) (undo-tree-id5716 . -1) (undo-tree-id5717 . -1) (#("0" 0 1 (fontified t)) . -211) (undo-tree-id5718 . -1) (undo-tree-id5719 . -1) (undo-tree-id5720 . -1) (undo-tree-id5721 . 1) (undo-tree-id5722 . -1) (undo-tree-id5723 . -1) 212 (t 23394 8299 182946 644000)) nil (23394 8311 182598 0) 0 nil]) ((210 . 212)) nil (23394 8299 157191 0) 0 nil]) ((#("2" 0 1 (fontified t)) . -210) (undo-tree-id5695 . -1) (undo-tree-id5696 . -1) (undo-tree-id5697 . -1) (undo-tree-id5698 . -1) (undo-tree-id5699 . -1) (undo-tree-id5700 . -1) (undo-tree-id5701 . -1) (undo-tree-id5702 . -1) (#("5" 0 1 (fontified t)) . -211) (undo-tree-id5703 . -1) (undo-tree-id5704 . -1) (undo-tree-id5705 . 1) (undo-tree-id5706 . 1) (undo-tree-id5707 . 1) (undo-tree-id5708 . 1) (undo-tree-id5709 . -1) 212 (t 23394 8236 864823 854000)) nil (23394 8299 157299 0) 0 nil]) ((1007 . 1008) (1011 . 1012)) nil (23394 8236 844076 0) 0 nil]) ((1004 . 1005)) nil (23394 8236 844082 0) 0 nil]) ((#("t" 0 1 (fontified t font-lock-face js2-object-property help-echo "missing `}' after expression" cursor-sensor-functions #1=(js2-echo-error))) . -1003) (undo-tree-id5668 . -1) (undo-tree-id5669 . -1) (undo-tree-id5670 . -1) (undo-tree-id5671 . 1) (undo-tree-id5672 . -1) 1004) nil (23394 8236 844129 0) 0 nil]) ((1003 . 1004)) nil (23394 8236 844132 0) 0 nil]) ((982 . 983)) nil (23394 8236 844133 0) 0 nil]) ((#("," 0 1 (fontified t help-echo "missing `}' after expression" cursor-sensor-functions #1#)) . -982) (undo-tree-id5673 . -1) (undo-tree-id5674 . -1) (undo-tree-id5675 . -1) (undo-tree-id5676 . 1) (undo-tree-id5677 . -1) (undo-tree-id5678 . -1) (undo-tree-id5679 . -1) (undo-tree-id5680 . -1) (undo-tree-id5681 . -1) (undo-tree-id5682 . -1) (#("n" 0 1 (fontified t font-lock-face js2-object-property help-echo "missing `}' after expression" cursor-sensor-functions #1#)) . -983) (undo-tree-id5683 . -1) (undo-tree-id5684 . -1) (undo-tree-id5685 . -1) (undo-tree-id5686 . 1) (undo-tree-id5687 . -1) (undo-tree-id5688 . -1) (undo-tree-id5689 . -1) (#("m" 0 1 (fontified t font-lock-face js2-object-property help-echo "missing `}' after expression" cursor-sensor-functions #1#)) . -984) (undo-tree-id5690 . -1) (undo-tree-id5691 . -1) (undo-tree-id5692 . -1) (undo-tree-id5693 . 1) (undo-tree-id5694 . -1) 985) nil (23394 8236 844193 0) 0 nil]) ((983 . 985) (t 23394 8219 429126 38000)) nil (23394 8236 844196 0) 0 nil]) ((982 . 983)) nil (23394 8219 406964 0) 0 nil]) ((999 . 1009)) nil (23394 8219 406973 0) 0 nil]) ((#("i" 0 1 (fontified t help-echo "missing } after property list" cursor-sensor-functions #1#)) . -999) (undo-tree-id5663 . -1) (undo-tree-id5664 . -1) (undo-tree-id5665 . -1) (undo-tree-id5666 . 1) (undo-tree-id5667 . -1) 1000) nil (23394 8219 407030 0) 0 nil]) ((998 . 1000)) nil (23394 8219 407033 0) 0 nil]) ((982 . 998) (t 23394 8081 748806 722000)) nil (23394 8219 407035 0) 0 nil] [nil nil ((#("               width: `${4*barWidth}rem`" 0 15 (fontified t) 15 20 (fontified t font-lock-face js2-object-property) 20 22 (fontified t) 22 24 (fontified t font-lock-face font-lock-string-face) 24 25 (fontified t font-lock-face font-lock-string-face) 25 27 (fontified t) 27 35 (fontified t) 35 39 (fontified t font-lock-face font-lock-string-face) 39 40 (fontified t font-lock-face font-lock-string-face)) . 942) (undo-tree-id5627 . 11) (undo-tree-id5628 . -29) (undo-tree-id5629 . 11) (undo-tree-id5630 . 11) (undo-tree-id5631 . -29) (undo-tree-id5632 . 11) (undo-tree-id5633 . 11) (undo-tree-id5634 . -29) (undo-tree-id5635 . 11) (undo-tree-id5636 . 11) (undo-tree-id5637 . -29) (undo-tree-id5638 . 11) (undo-tree-id5639 . 11) (undo-tree-id5640 . -29) (undo-tree-id5641 . 11) (undo-tree-id5642 . 11) (undo-tree-id5643 . -29) (undo-tree-id5644 . 11) (undo-tree-id5645 . 11) (undo-tree-id5646 . -29) (undo-tree-id5647 . 11) (undo-tree-id5648 . 11) (undo-tree-id5649 . -29) (undo-tree-id5650 . 11) (undo-tree-id5651 . 11) (undo-tree-id5652 . -29) (undo-tree-id5653 . 11) (undo-tree-id5654 . 11) (undo-tree-id5655 . -29) (undo-tree-id5656 . 11) (undo-tree-id5657 . 11) (undo-tree-id5658 . -29) (undo-tree-id5659 . 11) (undo-tree-id5660 . -40) (undo-tree-id5661 . 40) (undo-tree-id5662 . -40) (t 23394 8081 748806 722000)) ((942 . 982)) (23394 8209 571563 0) 0 nil]) ((1129 . 1137) (#("      " 0 6 (font-lock-face rjsx-text syntax-table #9=#^[nil #^[#3=(0) nil syntax-table #6=
#^^[3 0 #2=(1) #2# #2# #2# #2# #2# #2# #2# #2# #3# #3# #2# #3# #3# #2# #2# #2# #2# #2# #2# #2# #2# #2# #2# #2# #2# #2# #2# #2# #2# #2# #2# #3# #2# (7) #2# #4=(2) #4# #5=(3) #2# (4 . 41) (5 . 40) #5# #5# #2# #5# #2# #5# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #2# #2# #5# #5# #5# #2# #2# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# (4 . 93) (9) (5 . 91) #2# #5# #2# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# (4 . 125) #5# (5 . 123) #2# #2#] #^^[1 0 #^^[2 0 #6# 










#^^[3 8192 #3# #3# #3# #3# #3# #3# #3# #3# #3# #3# #3# #3# #2# #2# #2# #2# #5# #5# #5# #5# #5# #5# #5# #2# #2# #2# #2# #2# #2# #2# #2# #2# #5# #5# #5# #5# #5# #5# #5# #4# #2# #2# #2# #2# #2# #2# #2# #2# #2# #2# #2# #2# #2# #2# #2# #2# #2# #2# #2# #2# #2# #2# #2# #2# #2# #2# #2# #2# #2# (4 . 8262) (5 . 8261) #2# #2# #2# #2# #2# #2# #2# #2# #2# #2# #2# #2# #2# #2# #2# #2# #2# #2# #2# #2# #2# #2# #2# #2# #2# #2# #2# #2# #2# #2# #2# #2# #2# #2# #2# #2# #2# #2# #2# #2# #2# #4# #4# #4# #4# #5# #4# #4# #4# #4# #4# #4# #4# #4# (4 . 8318) (5 . 8317) #5#] 











#^^[3 10112 #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# (4 . 10215) (5 . 10214) (4 . 10217) (5 . 10216) (4 . 10219) (5 . 10218) #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4#] #4# #4# #4# 
#^^[3 10624 #4# #4# #4# (4 . 10628) (5 . 10627) (4 . 10630) (5 . 10629) (4 . 10632) (5 . 10631) (4 . 10634) (5 . 10633) (4 . 10636) (5 . 10635) (4 . 10638) (5 . 10637) (4 . 10640) (5 . 10639) (4 . 10642) (5 . 10641) (4 . 10644) (5 . 10643) (4 . 10646) (5 . 10645) (4 . 10648) (5 . 10647) #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# (4 . 10749) (5 . 10748) #4# #4#] #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4#] #^^[2 12288 
#^^[3 12288 #5# #5# #5# #5# #4# #4# #4# #4# (4 . 12297) (5 . 12296) (4 . 12299) (5 . 12298) (4 . 12301) (5 . 12300) (4 . 12303) (5 . 12302) (4 . 12305) (5 . 12304) #5# #5# (4 . 12309) (5 . 12308) (4 . 12311) (5 . 12310) (4 . 12313) (5 . 12312) (4 . 12315) (5 . 12314) #5# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4#] 





#^^[3 65024 #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# (4 . 65078) (5 . 65077) (4 . 65080) (5 . 65079) (4 . 65082) (5 . 65081) (4 . 65084) (5 . 65083) (4 . 65086) (5 . 65085) (4 . 65088) (5 . 65087) (4 . 65090) (5 . 65089) (4 . 65092) (5 . 65091) #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# (4 . 65114) (5 . 65113) (4 . 65116) (5 . 65115) (4 . 65118) (5 . 65117) #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4#] #4# 
#^^[3 65280 #4# #5# #4# #5# #5# #5# #5# #4# (4 . 65289) (5 . 65288) #5# #5# #5# #4# #5# #5# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #5# #5# #5# #5# #5# #5# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# (4 . 65341) #5# (5 . 65339) #5# #5# #5# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# (4 . 65373) #5# (5 . 65371) #5# (4 . 65376) (5 . 65375) #2# (4 . 65379) (5 . 65378) #2# #2# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4#] 







#^^[3 2596736 #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #4# #5# #5# #5# #5# #5# #5# #5# #5# #5# #5# #5# #5# #5# #5# #5# #5# #5# #5# #5# #5# #5# #5# #5# #5# #5# #5# #5# #5# #5# #5# #5# #5# #5# #5# #5# #5# #5# #5# #5# #5# #5# #5# #5# #5# #5# #5# #5# #5# #5# #5# #5# #5# #5# #5# #5# #5# #5# #5# #5# #5# #5# #5# #5# #5# #5# #5# #5# #5# #5# #5# #5# #5# #5# #5# #5# #5# #5# #5# #5# #5# #5# #5# #5# #5# #5# #5# #5# #5# #5# #5# #5# #5# #5# #5# #5# #5# #5# #5# #5# #5# #5# #5# #5# #5# #5# #5# #5# #5#]] #^^[2 2596864 



syntax-table #7=
#^^[3 0 nil nil nil nil nil nil nil nil nil nil #2# nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil] #^^[1 0 #^^[2 0 #7# nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil] nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil] nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil] fontified t)) . 1129) 1141) nil (23394 8209 573195 0) 0 nil]) ((1124 . 1127)) nil (23394 8081 729714 0) 0 nil]) ((#("/" 0 1 (fontified t font-lock-face font-lock-comment-face help-echo "missing `>' after `/' in self-closing tag" cursor-sensor-functions #1#)) . -1124) (undo-tree-id5625 . -1) (undo-tree-id5626 . -1) 1125) nil (23394 8081 729727 0) 0 nil]) ((1123 . 1124)) nil (23394 8081 729729 0) 0 nil]) ((nil fontified t 1122 . 1125) (nil font-lock-face rjsx-text 1122 . 1125) (nil help-echo "syntax error" 1122 . 1125) (nil cursor-sensor-functions #1# 1122 . 1125) (1122 . 1125)) nil (23394 8081 729733 0) 0 nil]) ((1116 . 1122) (1044 . 1046) (1113 . 1114) (t 23394 8067 652537 528000)) nil (23394 8081 729736 0) 0 nil]) ((#(" " 0 1 (fontified t help-echo "syntax error" cursor-sensor-functions #1#)) . -1034) (undo-tree-id5306 . -1) (undo-tree-id5307 . -1) (undo-tree-id5308 . 1) (undo-tree-id5309 . -1) (undo-tree-id5310 . -1) 1035) nil (23394 8067 619951 0) 0 nil]) ((1034 . 1035)) nil (23394 8067 619958 0) 0 nil]) ((#("/" 0 1 (rjsx-class self-closing-slash fontified t font-lock-face rjsx-tag-bracket-face)) . -1034) (undo-tree-id5311 . -1) (undo-tree-id5312 . -1) (undo-tree-id5313 . -1) (undo-tree-id5314 . 1) (undo-tree-id5315 . 1) (undo-tree-id5316 . 1) (undo-tree-id5317 . 1) (undo-tree-id5318 . 1) (undo-tree-id5319 . 1) (undo-tree-id5320 . 1) (undo-tree-id5321 . 1) (undo-tree-id5322 . 1) (undo-tree-id5323 . 1) (undo-tree-id5324 . 1) (undo-tree-id5325 . 1) (undo-tree-id5326 . 1) (undo-tree-id5327 . 1) (undo-tree-id5328 . 1) (undo-tree-id5329 . 1) (undo-tree-id5330 . 1) (undo-tree-id5331 . 1) (undo-tree-id5332 . 1) (undo-tree-id5333 . 1) (undo-tree-id5334 . 1) (undo-tree-id5335 . 1) (undo-tree-id5336 . 1) (undo-tree-id5337 . 1) (undo-tree-id5338 . 1) (undo-tree-id5339 . 1) (undo-tree-id5340 . 1) (undo-tree-id5341 . 1) (undo-tree-id5342 . 1) (undo-tree-id5343 . 1) (undo-tree-id5344 . 1) (undo-tree-id5345 . 1) (undo-tree-id5346 . 1) (undo-tree-id5347 . 1) (undo-tree-id5348 . 1) (undo-tree-id5349 . 1) (undo-tree-id5350 . 1) (undo-tree-id5351 . 1) (undo-tree-id5352 . 1) (undo-tree-id5353 . 1) (undo-tree-id5354 . 1) (undo-tree-id5355 . 1) (undo-tree-id5356 . 1) (undo-tree-id5357 . 1) (undo-tree-id5358 . 1) (undo-tree-id5359 . 1) (undo-tree-id5360 . 1) (undo-tree-id5361 . 1) (undo-tree-id5362 . 1) (undo-tree-id5363 . 1) (undo-tree-id5364 . 1) (undo-tree-id5365 . 1) (undo-tree-id5366 . 1) (undo-tree-id5367 . 1) (undo-tree-id5368 . 1) (undo-tree-id5369 . 1) (undo-tree-id5370 . 1) (undo-tree-id5371 . 1) (undo-tree-id5372 . 1) (undo-tree-id5373 . 1) (undo-tree-id5374 . 1) (undo-tree-id5375 . 1) (undo-tree-id5376 . 1) (undo-tree-id5377 . 1) (undo-tree-id5378 . 1) (undo-tree-id5379 . 1) (undo-tree-id5380 . 1) (undo-tree-id5381 . 1) (undo-tree-id5382 . 1) (undo-tree-id5383 . 1) (undo-tree-id5384 . 1) (undo-tree-id5385 . 1) (undo-tree-id5386 . 1) (undo-tree-id5387 . 1) (undo-tree-id5388 . 1) (undo-tree-id5389 . 1) (undo-tree-id5390 . 1) (undo-tree-id5391 . 1) (undo-tree-id5392 . 1) (undo-tree-id5393 . 1) (undo-tree-id5394 . 1) (undo-tree-id5395 . 1) (undo-tree-id5396 . 1) (undo-tree-id5397 . 1) (undo-tree-id5398 . 1) (undo-tree-id5399 . 1) (undo-tree-id5400 . 1) (undo-tree-id5401 . 1) (undo-tree-id5402 . 1) (undo-tree-id5403 . 1) (undo-tree-id5404 . 1) (undo-tree-id5405 . 1) (undo-tree-id5406 . 1) (undo-tree-id5407 . 1) (undo-tree-id5408 . 1) (undo-tree-id5409 . 1) (undo-tree-id5410 . 1) (undo-tree-id5411 . 1) (undo-tree-id5412 . 1) (undo-tree-id5413 . 1) (undo-tree-id5414 . 1) (undo-tree-id5415 . 1) (undo-tree-id5416 . 1) (undo-tree-id5417 . 1) (undo-tree-id5418 . 1) (undo-tree-id5419 . 1) (undo-tree-id5420 . 1) (undo-tree-id5421 . 1) (undo-tree-id5422 . 1) (undo-tree-id5423 . 1) (undo-tree-id5424 . 1) (undo-tree-id5425 . 1) (undo-tree-id5426 . 1) (undo-tree-id5427 . 1) (undo-tree-id5428 . 1) (undo-tree-id5429 . 1) (undo-tree-id5430 . 1) (undo-tree-id5431 . 1) (undo-tree-id5432 . 1) (undo-tree-id5433 . 1) (undo-tree-id5434 . 1) (undo-tree-id5435 . 1) (undo-tree-id5436 . 1) (undo-tree-id5437 . 1) (undo-tree-id5438 . 1) (undo-tree-id5439 . 1) (undo-tree-id5440 . 1) (undo-tree-id5441 . 1) (undo-tree-id5442 . 1) (undo-tree-id5443 . 1) (undo-tree-id5444 . 1) (undo-tree-id5445 . 1) (undo-tree-id5446 . 1) (undo-tree-id5447 . 1) (undo-tree-id5448 . 1) (undo-tree-id5449 . 1) (undo-tree-id5450 . 1) (undo-tree-id5451 . 1) (undo-tree-id5452 . 1) (undo-tree-id5453 . 1) (undo-tree-id5454 . 1) (undo-tree-id5455 . 1) (undo-tree-id5456 . 1) (undo-tree-id5457 . 1) (undo-tree-id5458 . 1) (undo-tree-id5459 . 1) (undo-tree-id5460 . 1) (undo-tree-id5461 . 1) (undo-tree-id5462 . 1) (undo-tree-id5463 . 1) (undo-tree-id5464 . 1) (undo-tree-id5465 . 1) (undo-tree-id5466 . 1) (undo-tree-id5467 . 1) (undo-tree-id5468 . 1) (undo-tree-id5469 . 1) (undo-tree-id5470 . 1) (undo-tree-id5471 . 1) (undo-tree-id5472 . 1) (undo-tree-id5473 . 1) (undo-tree-id5474 . 1) (undo-tree-id5475 . 1) (undo-tree-id5476 . 1) (undo-tree-id5477 . 1) (undo-tree-id5478 . 1) (undo-tree-id5479 . 1) (undo-tree-id5480 . 1) (undo-tree-id5481 . 1) (undo-tree-id5482 . 1) (undo-tree-id5483 . 1) (undo-tree-id5484 . 1) (undo-tree-id5485 . 1) (undo-tree-id5486 . 1) (undo-tree-id5487 . 1) (undo-tree-id5488 . 1) (undo-tree-id5489 . 1) (undo-tree-id5490 . 1) (undo-tree-id5491 . 1) (undo-tree-id5492 . 1) (undo-tree-id5493 . 1) (undo-tree-id5494 . 1) (undo-tree-id5495 . 1) (undo-tree-id5496 . 1) (undo-tree-id5497 . 1) (undo-tree-id5498 . 1) (undo-tree-id5499 . 1) (undo-tree-id5500 . 1) (undo-tree-id5501 . 1) (undo-tree-id5502 . 1) (undo-tree-id5503 . 1) (undo-tree-id5504 . 1) (undo-tree-id5505 . 1) (undo-tree-id5506 . 1) (undo-tree-id5507 . 1) (undo-tree-id5508 . 1) (undo-tree-id5509 . 1) (undo-tree-id5510 . 1) (undo-tree-id5511 . 1) (undo-tree-id5512 . 1) (undo-tree-id5513 . 1) (undo-tree-id5514 . 1) (undo-tree-id5515 . 1) (undo-tree-id5516 . 1) (undo-tree-id5517 . 1) (undo-tree-id5518 . 1) (undo-tree-id5519 . 1) (undo-tree-id5520 . 1) (undo-tree-id5521 . 1) (undo-tree-id5522 . 1) (undo-tree-id5523 . 1) (undo-tree-id5524 . 1) (undo-tree-id5525 . 1) (undo-tree-id5526 . 1) (undo-tree-id5527 . 1) (undo-tree-id5528 . 1) (undo-tree-id5529 . 1) (undo-tree-id5530 . 1) (undo-tree-id5531 . 1) (undo-tree-id5532 . 1) (undo-tree-id5533 . 1) (undo-tree-id5534 . 1) (undo-tree-id5535 . 1) (undo-tree-id5536 . 1) (undo-tree-id5537 . 1) (undo-tree-id5538 . 1) (undo-tree-id5539 . 1) (undo-tree-id5540 . 1) (undo-tree-id5541 . 1) (undo-tree-id5542 . 1) (undo-tree-id5543 . 1) (undo-tree-id5544 . 1) (undo-tree-id5545 . 1) (undo-tree-id5546 . 1) (undo-tree-id5547 . 1) (undo-tree-id5548 . 1) (undo-tree-id5549 . 1) (undo-tree-id5550 . 1) (undo-tree-id5551 . 1) (undo-tree-id5552 . 1) (undo-tree-id5553 . 1) (undo-tree-id5554 . 1) (undo-tree-id5555 . 1) (undo-tree-id5556 . 1) (undo-tree-id5557 . 1) (undo-tree-id5558 . 1) (undo-tree-id5559 . 1) (undo-tree-id5560 . 1) (undo-tree-id5561 . 1) (undo-tree-id5562 . 1) (undo-tree-id5563 . 1) (undo-tree-id5564 . 1) (undo-tree-id5565 . 1) (undo-tree-id5566 . 1) (undo-tree-id5567 . 1) (undo-tree-id5568 . 1) (undo-tree-id5569 . 1) (undo-tree-id5570 . 1) (undo-tree-id5571 . 1) (undo-tree-id5572 . 1) (undo-tree-id5573 . 1) (undo-tree-id5574 . 1) (undo-tree-id5575 . 1) (undo-tree-id5576 . 1) (undo-tree-id5577 . 1) (undo-tree-id5578 . 1) (undo-tree-id5579 . 1) (undo-tree-id5580 . 1) (undo-tree-id5581 . 1) (undo-tree-id5582 . 1) (undo-tree-id5583 . 1) (undo-tree-id5584 . 1) (undo-tree-id5585 . 1) (undo-tree-id5586 . 1) (undo-tree-id5587 . 1) (undo-tree-id5588 . 1) (undo-tree-id5589 . 1) (undo-tree-id5590 . 1) (undo-tree-id5591 . 1) (undo-tree-id5592 . 1) (undo-tree-id5593 . 1) (undo-tree-id5594 . 1) (undo-tree-id5595 . 1) (undo-tree-id5596 . 1) (undo-tree-id5597 . 1) (undo-tree-id5598 . 1) (undo-tree-id5599 . 1) (undo-tree-id5600 . 1) (undo-tree-id5601 . 1) (undo-tree-id5602 . 1) (undo-tree-id5603 . 1) (undo-tree-id5604 . 1) (undo-tree-id5605 . 1) (undo-tree-id5606 . 1) (undo-tree-id5607 . 1) (undo-tree-id5608 . 1) (undo-tree-id5609 . 1) (undo-tree-id5610 . 1) (undo-tree-id5611 . 1) (undo-tree-id5612 . 1) (undo-tree-id5613 . 1) (undo-tree-id5614 . 1) (undo-tree-id5615 . 1) (undo-tree-id5616 . 1) (undo-tree-id5617 . 1) (undo-tree-id5618 . 1) (undo-tree-id5619 . 1) (undo-tree-id5620 . 1) (undo-tree-id5621 . 1) (undo-tree-id5622 . -1) (undo-tree-id5623 . -1) (undo-tree-id5624 . -1) 1035 (t 23394 8044 551483 896000)) nil (23394 8067 620451 0) 0 nil]) ((998 . 999)) nil (23394 8044 521538 0) 0 nil]) ((#("f" 0 1 (fontified t help-echo "missing `}' after expression" cursor-sensor-functions #1#)) . -997) (undo-tree-id5300 . -1) (undo-tree-id5301 . -1) (undo-tree-id5302 . -1) (undo-tree-id5303 . -1) (undo-tree-id5304 . 1) (undo-tree-id5305 . -1) 998) nil (23394 8044 521582 0) 0 nil]) ((997 . 998) (t 23394 8041 820896 433000)) nil (23394 8044 521586 0) 0 nil]) ((983 . 996) (955 . 957) (980 . 981)) nil (23394 8041 792358 0) 0 nil]) ((941 . 955) (t 23394 8035 922941 372000)) nil (23394 8041 792369 0) 0 nil]) ((#(" " 0 1 (fontified t)) . -941) (undo-tree-id5291 . -1) (undo-tree-id5292 . -1) (undo-tree-id5293 . 1) (undo-tree-id5294 . -1) (undo-tree-id5295 . -1) 942) nil (23394 8035 895169 0) 0 nil]) ((#("   " 0 3 (fontified t)) . -942) (undo-tree-id5296 . -3) (undo-tree-id5297 . -3) (undo-tree-id5298 . -3) (undo-tree-id5299 . -3) 945) nil (23394 8035 895180 0) 0 nil]) ((941 . 970)) nil (23394 8035 895182 0) 0 nil] [nil nil ((#("    width: `${4*barWidth}rem`" 0 4 (fontified t) 4 9 (fontified t font-lock-face js2-object-property) 9 11 (fontified t) 11 13 (fontified t font-lock-face font-lock-string-face) 13 14 (fontified t font-lock-face font-lock-string-face) 14 16 (fontified t) 16 24 (fontified t) 24 28 (fontified t font-lock-face font-lock-string-face) 28 29 (fontified t font-lock-face font-lock-string-face)) . 298) (undo-tree-id5228 . -8) (undo-tree-id5229 . 21) (undo-tree-id5230 . -8) (undo-tree-id5231 . -8) (undo-tree-id5232 . 21) (undo-tree-id5233 . 21) (undo-tree-id5234 . -8) (undo-tree-id5235 . 29) (undo-tree-id5236 . 21) (undo-tree-id5237 . -29)) ((298 . 327)) (23394 8028 274233 0) 0 nil]) ((940 . 942) (#("{" 0 1 (fontified nil help-echo "empty `{}' expression" cursor-sensor-functions #1# face (rainbow-delimiters-depth-4-face))) . -940) (940 . 941) (939 . 941) (#("{" 0 1 (fontified nil help-echo "missing value after prop `style'" cursor-sensor-functions #1#)) . -939) (938 . 940)) nil (23394 8028 274826 0) 0 nil]) ((#("[" 0 1 (fontified nil help-echo "invalid JSX identifier" cursor-sensor-functions #1# face (rainbow-delimiters-depth-4-face))) . -938) (undo-tree-id5238 . -1) (undo-tree-id5239 . -1) (undo-tree-id5240 . -1) (undo-tree-id5241 . -1) (undo-tree-id5242 . -1) (undo-tree-id5243 . 1) (undo-tree-id5244 . -1) (#("]" 0 1 (fontified t help-echo "invalid JSX identifier" cursor-sensor-functions #1# face (rainbow-delimiters-depth-4-face))) . 939) (undo-tree-id5245 . -1) (undo-tree-id5246 . 1)) nil (23394 8028 274271 0) 0 nil]) ((938 . 940) (#("[" 0 1 (fontified nil font-lock-face rjsx-attr)) . -938) (938 . 939)) nil (23394 8028 274276 0) 0 nil]) ((#(":" 0 1 (fontified t font-lock-face rjsx-attr)) . -938) (undo-tree-id5247 . -1) (undo-tree-id5248 . -1) (undo-tree-id5249 . -1) (undo-tree-id5250 . 1) (undo-tree-id5251 . -1) (undo-tree-id5252 . -1) 939) nil (23394 8028 274305 0) 0 nil]) ((936 . 939)) nil (23394 8028 274309 0) 0 nil]) ((#("e" 0 1 (fontified t font-lock-face rjsx-attr)) . -936) (undo-tree-id5253 . -1) (undo-tree-id5254 . -1) (undo-tree-id5255 . 1) (undo-tree-id5256 . -1) (undo-tree-id5257 . -1) (undo-tree-id5258 . -1) (#("l" 0 1 (fontified t font-lock-face rjsx-attr)) . -937) (undo-tree-id5259 . -1) (undo-tree-id5260 . -1) (undo-tree-id5261 . 1) (undo-tree-id5262 . -1) 938) nil (23394 8028 274338 0) 0 nil]) ((935 . 938)) nil (23394 8028 274342 0) 0 nil]) ((#("u" 0 1 (fontified t font-lock-face rjsx-attr)) . -935) (undo-tree-id5263 . -1) (undo-tree-id5264 . -1) (undo-tree-id5265 . 1) (undo-tree-id5266 . -1) (undo-tree-id5267 . -1) (undo-tree-id5268 . -1) (#("e" 0 1 (fontified t font-lock-face rjsx-attr)) . -936) (undo-tree-id5269 . -1) (undo-tree-id5270 . -1) (undo-tree-id5271 . 1) (undo-tree-id5272 . -1) 937) nil (23394 8028 274390 0) 0 nil]) ((934 . 937)) nil (23394 8028 274394 0) 0 nil]) ((#("y" 0 1 (fontified t font-lock-face rjsx-attr)) . -934) (undo-tree-id5273 . -1) (undo-tree-id5274 . -1) (undo-tree-id5275 . 1) (undo-tree-id5276 . -1) (undo-tree-id5277 . -1) (undo-tree-id5278 . -1) (undo-tree-id5279 . -1) (undo-tree-id5280 . -1) (#("l" 0 1 (fontified t font-lock-face rjsx-attr)) . -935) (undo-tree-id5281 . -1) (undo-tree-id5282 . -1) (undo-tree-id5283 . 1) (undo-tree-id5284 . -1) (undo-tree-id5285 . -1) (undo-tree-id5286 . -1) (#("e" 0 1 (fontified t font-lock-face rjsx-attr)) . -936) (undo-tree-id5287 . -1) (undo-tree-id5288 . -1) (undo-tree-id5289 . 1) (undo-tree-id5290 . -1) 937) nil (23394 8028 274448 0) 0 nil]) ((933 . 937) (t 23394 7951 506737 984000)) nil (23394 8028 274453 0) 0 nil]) ((948 . 949)) nil (23394 7951 481420 0) 0 nil]) ((#("," 0 1 (fontified t help-echo "missing `}' after expression" cursor-sensor-functions #1#)) . -948) (undo-tree-id5217 . -1) (undo-tree-id5218 . -1) (undo-tree-id5219 . 1) (undo-tree-id5220 . -1) (undo-tree-id5221 . -1) (undo-tree-id5222 . -1) (undo-tree-id5223 . -1) (undo-tree-id5224 . 1) (undo-tree-id5225 . 1) (undo-tree-id5226 . -1) (undo-tree-id5227 . -1) 949 (t 23394 7942 829505 680000)) nil (23394 7951 481469 0) 0 nil]) ((943 . 944) (#("{" 0 1 (fontified nil help-echo "missing value after prop `className'" cursor-sensor-functions #1#)) . -943) (943 . 944)) nil (23394 7942 803490 0) 0 nil]) ((#("{" 0 1 (fontified t help-echo "missing `}' after expression" cursor-sensor-functions #1# face (rainbow-delimiters-depth-4-face))) . -943) (undo-tree-id5203 . -1) (undo-tree-id5204 . -1) (undo-tree-id5205 . 1) (undo-tree-id5206 . -1) (undo-tree-id5207 . 1) (undo-tree-id5208 . 1) (undo-tree-id5209 . -1) (undo-tree-id5210 . 1) (undo-tree-id5211 . 1) (undo-tree-id5212 . 1) (undo-tree-id5213 . 1) (undo-tree-id5214 . -1) (undo-tree-id5215 . -1) (undo-tree-id5216 . -1) 944 (t 23394 7929 830371 598000)) nil (23394 7942 803544 0) 0 nil]) ((967 . 968) (#("}" 0 1 (fontified nil)) . -967) (967 . 968)) nil (23394 7929 802717 0) 0 nil]) ((#("}" 0 1 (fontified t face (rainbow-delimiters-depth-4-face))) . 967) (undo-tree-id5153 . 1) (undo-tree-id5154 . 1) (undo-tree-id5155 . 1) (undo-tree-id5156 . 1) (undo-tree-id5157 . 1) (undo-tree-id5158 . 1) (undo-tree-id5159 . 1) (undo-tree-id5160 . 1) (undo-tree-id5161 . 1) (undo-tree-id5162 . 1) (undo-tree-id5163 . 1) (undo-tree-id5164 . 1) (undo-tree-id5165 . 1) (undo-tree-id5166 . 1) (undo-tree-id5167 . 1) (undo-tree-id5168 . 1) (undo-tree-id5169 . 1) (undo-tree-id5170 . 1) (undo-tree-id5171 . 1) (undo-tree-id5172 . 1) (undo-tree-id5173 . 1) (undo-tree-id5174 . 1) (undo-tree-id5175 . 1) (undo-tree-id5176 . 1) (undo-tree-id5177 . 1) (undo-tree-id5178 . 1) (undo-tree-id5179 . 1) (undo-tree-id5180 . 1)) nil (23394 7929 802799 0) 0 nil]) ((949 . 967)) nil (23394 7929 802805 0) 0 nil]) ((#("s" 0 1 (fontified t help-echo "missing `}' after expression" cursor-sensor-functions #1#)) . -949) (undo-tree-id5181 . -1) (undo-tree-id5182 . -1) (undo-tree-id5183 . -1) (undo-tree-id5184 . 1) (undo-tree-id5185 . -1) 950) nil (23394 7929 802816 0) 0 nil]) ((944 . 950) (943 . 945) (#("{" 0 1 (fontified nil help-echo "missing value after prop `className'" cursor-sensor-functions #1#)) . -943) (942 . 944)) nil (23394 7929 802820 0) 0 nil]) ((#("]" 0 1 (fontified t help-echo "invalid JSX identifier" cursor-sensor-functions #1# face (rainbow-delimiters-mismatched-face))) . -942) (undo-tree-id5186 . -1) (undo-tree-id5187 . -1) (undo-tree-id5188 . -1) (undo-tree-id5189 . -1) (undo-tree-id5190 . 1) (undo-tree-id5191 . 1) (undo-tree-id5192 . -1) (undo-tree-id5193 . -1) 943) nil (23394 7929 802833 0) 0 nil]) ((942 . 943) (#("]" 0 1 (fontified nil font-lock-face rjsx-attr)) . -942) (942 . 943)) nil (23394 7929 802836 0) 0 nil]) ((#("[" 0 1 (fontified nil help-echo "invalid JSX identifier" cursor-sensor-functions #1# face (rainbow-delimiters-depth-4-face))) . -942) (undo-tree-id5194 . -1) (undo-tree-id5195 . -1) (undo-tree-id5196 . -1) (undo-tree-id5197 . -1) (undo-tree-id5198 . -1) (undo-tree-id5199 . 1) (undo-tree-id5200 . -1) (#("]" 0 1 (fontified t help-echo "invalid JSX identifier" cursor-sensor-functions #1# face (rainbow-delimiters-depth-4-face))) . 943) (undo-tree-id5201 . -1) (undo-tree-id5202 . 1)) nil (23394 7929 802854 0) 0 nil]) ((942 . 944) (#("[" 0 1 (fontified nil font-lock-face rjsx-attr)) . -942) (933 . 943) (t 23394 7898 776227 233000)) nil (23394 7929 802858 0) 0 nil]) ((#("style=\"" 0 5 (fontified t font-lock-face rjsx-attr help-echo #8="missing `>' after `/' in self-closing tag" cursor-sensor-functions #1#) 5 6 (fontified t help-echo #8# cursor-sensor-functions #1#) 6 7 (fontified t font-lock-face font-lock-string-face help-echo "unterminated string literal" cursor-sensor-functions #1#)) . -933) (undo-tree-id4997 . -7) (undo-tree-id4998 . -7) (undo-tree-id4999 . -7) (undo-tree-id5000 . -6) (undo-tree-id5001 . -6) (undo-tree-id5002 . -6) (undo-tree-id5003 . -6) (undo-tree-id5004 . -6) (undo-tree-id5005 . -6) (undo-tree-id5006 . -6) (undo-tree-id5007 . -6) (undo-tree-id5008 . -6) (undo-tree-id5009 . -6) (undo-tree-id5010 . -6) (undo-tree-id5011 . -6) (undo-tree-id5012 . -6) (undo-tree-id5013 . -6) (undo-tree-id5014 . -6) (undo-tree-id5015 . -6) (undo-tree-id5016 . -6) (undo-tree-id5017 . -6) (undo-tree-id5018 . -6) (undo-tree-id5019 . -6) (undo-tree-id5020 . -6) (undo-tree-id5021 . -6) (undo-tree-id5022 . -6) (undo-tree-id5023 . -6) (undo-tree-id5024 . -6) (undo-tree-id5025 . -6) (undo-tree-id5026 . -6) (undo-tree-id5027 . -6) (undo-tree-id5028 . -6) (undo-tree-id5029 . -6) (undo-tree-id5030 . -6) (undo-tree-id5031 . -6) (undo-tree-id5032 . -6) (undo-tree-id5033 . -6) (undo-tree-id5034 . -6) (undo-tree-id5035 . 2) (undo-tree-id5036 . 2) (undo-tree-id5037 . 2) (undo-tree-id5038 . 2) (undo-tree-id5039 . 2) (undo-tree-id5040 . 2) (undo-tree-id5041 . 2) (undo-tree-id5042 . 2) (undo-tree-id5043 . 7) (undo-tree-id5044 . -1) (undo-tree-id5045 . 2) (undo-tree-id5046 . 6) (undo-tree-id5047 . -2) (undo-tree-id5048 . 2) (undo-tree-id5049 . 5) (undo-tree-id5050 . -3) (undo-tree-id5051 . 2) (undo-tree-id5052 . 4) (undo-tree-id5053 . -4) (undo-tree-id5054 . 2) (undo-tree-id5055 . 3) (undo-tree-id5056 . -5) (undo-tree-id5057 . 2) (undo-tree-id5058 . 2) (undo-tree-id5059 . -5) (undo-tree-id5060 . 2) (undo-tree-id5061 . -6) (undo-tree-id5062 . -6) (undo-tree-id5063 . -6) (undo-tree-id5064 . -6) (undo-tree-id5065 . -6) (undo-tree-id5066 . -6) (undo-tree-id5067 . -6) (undo-tree-id5068 . -6) (undo-tree-id5069 . -6) (undo-tree-id5070 . -6) (undo-tree-id5071 . -6) (undo-tree-id5072 . -6) (undo-tree-id5073 . -6) (undo-tree-id5074 . -6) (undo-tree-id5075 . -6) (undo-tree-id5076 . -6) (undo-tree-id5077 . -6) (undo-tree-id5078 . -6) (undo-tree-id5079 . -6) (undo-tree-id5080 . -6) (undo-tree-id5081 . -6) (undo-tree-id5082 . -6) (undo-tree-id5083 . -6) (undo-tree-id5084 . -6) (undo-tree-id5085 . -6) (undo-tree-id5086 . -6) (undo-tree-id5087 . -6) (undo-tree-id5088 . -6) (undo-tree-id5089 . -6) (undo-tree-id5090 . -6) (undo-tree-id5091 . -6) (undo-tree-id5092 . -6) (undo-tree-id5093 . -6) (undo-tree-id5094 . -6) (undo-tree-id5095 . -6) (undo-tree-id5096 . -6) (undo-tree-id5097 . -6) (undo-tree-id5098 . -6) (undo-tree-id5099 . -6) (undo-tree-id5100 . -6) (undo-tree-id5101 . -6) (undo-tree-id5102 . -6) (undo-tree-id5103 . -6) (undo-tree-id5104 . -6) (undo-tree-id5105 . -6) (undo-tree-id5106 . -6) (undo-tree-id5107 . -6) (undo-tree-id5108 . -6) (undo-tree-id5109 . -6) (undo-tree-id5110 . -6) (undo-tree-id5111 . -6) (undo-tree-id5112 . -6) (undo-tree-id5113 . -6) (undo-tree-id5114 . -6) (undo-tree-id5115 . -6) (undo-tree-id5116 . -6) (undo-tree-id5117 . -6) (undo-tree-id5118 . -6) (undo-tree-id5119 . -6) (undo-tree-id5120 . -6) (undo-tree-id5121 . -6) (undo-tree-id5122 . -6) (undo-tree-id5123 . -6) (undo-tree-id5124 . -6) (undo-tree-id5125 . -6) (undo-tree-id5126 . -6) (undo-tree-id5127 . -6) (undo-tree-id5128 . -6) (undo-tree-id5129 . -6) (undo-tree-id5130 . -6) (undo-tree-id5131 . -6) (undo-tree-id5132 . -6) (undo-tree-id5133 . -6) (undo-tree-id5134 . -6) (undo-tree-id5135 . -6) (undo-tree-id5136 . -6) (undo-tree-id5137 . -6) (undo-tree-id5138 . 1) (undo-tree-id5139 . -7) (undo-tree-id5140 . -7) (undo-tree-id5141 . -7) (undo-tree-id5142 . -6) (undo-tree-id5143 . -6) (undo-tree-id5144 . -7) (undo-tree-id5145 . -7) 940) nil (23394 7898 754966 0) 0 nil]) ((#("\"" 0 1 (fontified t font-lock-face font-lock-string-face)) . -940) (undo-tree-id5146 . -1) (undo-tree-id5147 . -1) (undo-tree-id5148 . -1) (undo-tree-id5149 . 1) (undo-tree-id5150 . 1) (undo-tree-id5151 . -1) (undo-tree-id5152 . -1) 941 (t 23394 7894 293861 322000)) nil (23394 7898 754991 0) 0 nil]) ((#("\"" 0 1 (fontified nil)) . -940) (940 . 941) (#("\"" 0 1 (fontified nil font-lock-face font-lock-string-face)) . -940) (940 . 941) (939 . 941) (#("\"" 0 1 (fontified nil)) . -939) (939 . 940) (#("\"" 0 1 (fontified nil help-echo "missing value after prop `style'" cursor-sensor-functions #1#)) . -939) (939 . 940) (t 23394 7892 806943 505000)) nil (23394 7894 269328 0) 0 nil]) ((#("{" 0 1 (fontified t help-echo "missing `}' after expression" cursor-sensor-functions #1# face (rainbow-delimiters-depth-4-face))) . -939) (undo-tree-id4668 . -1) (undo-tree-id4669 . -1) (undo-tree-id4670 . -1) (undo-tree-id4671 . -1) (undo-tree-id4672 . -1) (undo-tree-id4673 . -1) (undo-tree-id4674 . -1) (undo-tree-id4675 . -1) (undo-tree-id4676 . -1) (undo-tree-id4677 . -1) (undo-tree-id4678 . -1) (undo-tree-id4679 . -1) (undo-tree-id4680 . -1) (undo-tree-id4681 . -1) (undo-tree-id4682 . -1) (undo-tree-id4683 . -1) (undo-tree-id4684 . -1) (undo-tree-id4685 . -1) (undo-tree-id4686 . -1) (undo-tree-id4687 . -1) (undo-tree-id4688 . -1) (undo-tree-id4689 . -1) (undo-tree-id4690 . -1) (undo-tree-id4691 . -1) (undo-tree-id4692 . -1) (undo-tree-id4693 . -1) (undo-tree-id4694 . -1) (undo-tree-id4695 . -1) (undo-tree-id4696 . -1) (undo-tree-id4697 . -1) (undo-tree-id4698 . -1) (undo-tree-id4699 . -1) (undo-tree-id4700 . -1) (undo-tree-id4701 . -1) (undo-tree-id4702 . -1) (undo-tree-id4703 . -1) (undo-tree-id4704 . -1) (undo-tree-id4705 . -1) (undo-tree-id4706 . -1) (undo-tree-id4707 . -1) (undo-tree-id4708 . -1) (undo-tree-id4709 . -1) (undo-tree-id4710 . -1) (undo-tree-id4711 . -1) (undo-tree-id4712 . -1) (undo-tree-id4713 . -1) (undo-tree-id4714 . -1) (undo-tree-id4715 . -1) (undo-tree-id4716 . -1) (undo-tree-id4717 . -1) (undo-tree-id4718 . -1) (undo-tree-id4719 . -1) (undo-tree-id4720 . -1) (undo-tree-id4721 . -1) (undo-tree-id4722 . -1) (undo-tree-id4723 . -1) (undo-tree-id4724 . -1) (undo-tree-id4725 . -1) (undo-tree-id4726 . -1) (undo-tree-id4727 . -1) (undo-tree-id4728 . -1) (undo-tree-id4729 . -1) (undo-tree-id4730 . -1) (undo-tree-id4731 . -1) (undo-tree-id4732 . -1) (undo-tree-id4733 . -1) (undo-tree-id4734 . -1) (undo-tree-id4735 . -1) (undo-tree-id4736 . -1) (undo-tree-id4737 . -1) (undo-tree-id4738 . -1) (undo-tree-id4739 . -1) (undo-tree-id4740 . -1) (undo-tree-id4741 . -1) (undo-tree-id4742 . -1) (undo-tree-id4743 . -1) (undo-tree-id4744 . -1) (undo-tree-id4745 . -1) (undo-tree-id4746 . -1) (undo-tree-id4747 . -1) (undo-tree-id4748 . -1) (undo-tree-id4749 . -1) (undo-tree-id4750 . -1) (undo-tree-id4751 . -1) (undo-tree-id4752 . -1) (undo-tree-id4753 . -1) (undo-tree-id4754 . -1) (undo-tree-id4755 . -1) (undo-tree-id4756 . -1) (undo-tree-id4757 . -1) (undo-tree-id4758 . -1) (undo-tree-id4759 . -1) (undo-tree-id4760 . -1) (undo-tree-id4761 . -1) (undo-tree-id4762 . -1) (undo-tree-id4763 . -1) (undo-tree-id4764 . -1) (undo-tree-id4765 . -1) (undo-tree-id4766 . -1) (undo-tree-id4767 . -1) (undo-tree-id4768 . -1) (undo-tree-id4769 . -1) (undo-tree-id4770 . -1) (undo-tree-id4771 . -1) (undo-tree-id4772 . -1) (undo-tree-id4773 . -1) (undo-tree-id4774 . -1) (undo-tree-id4775 . -1) (undo-tree-id4776 . -1) (undo-tree-id4777 . 1) (undo-tree-id4778 . 1) (undo-tree-id4779 . -1) (undo-tree-id4780 . -1) (undo-tree-id4781 . -1) (#("}" 0 1 (fontified t help-echo "empty `{}' expression" cursor-sensor-functions #1# face (rainbow-delimiters-depth-4-face))) . -940) (undo-tree-id4782 . -1) (undo-tree-id4783 . -1) (undo-tree-id4784 . 1) (undo-tree-id4785 . 1) (undo-tree-id4786 . 1) (undo-tree-id4787 . 1) (undo-tree-id4788 . 1) (undo-tree-id4789 . 1) (undo-tree-id4790 . 1) (undo-tree-id4791 . 1) (undo-tree-id4792 . 1) (undo-tree-id4793 . 1) (undo-tree-id4794 . 1) (undo-tree-id4795 . 1) (undo-tree-id4796 . 1) (undo-tree-id4797 . 1) (undo-tree-id4798 . 1) (undo-tree-id4799 . 1) (undo-tree-id4800 . 1) (undo-tree-id4801 . 1) (undo-tree-id4802 . 1) (undo-tree-id4803 . 1) (undo-tree-id4804 . 1) (undo-tree-id4805 . 1) (undo-tree-id4806 . 1) (undo-tree-id4807 . 1) (undo-tree-id4808 . 1) (undo-tree-id4809 . 1) (undo-tree-id4810 . 1) (undo-tree-id4811 . 1) (undo-tree-id4812 . 1) (undo-tree-id4813 . 1) (undo-tree-id4814 . 1) (undo-tree-id4815 . 1) (undo-tree-id4816 . 1) (undo-tree-id4817 . 1) (undo-tree-id4818 . 1) (undo-tree-id4819 . 1) (undo-tree-id4820 . 1) (undo-tree-id4821 . 1) (undo-tree-id4822 . 1) (undo-tree-id4823 . 1) (undo-tree-id4824 . 1) (undo-tree-id4825 . 1) (undo-tree-id4826 . 1) (undo-tree-id4827 . 1) (undo-tree-id4828 . 1) (undo-tree-id4829 . 1) (undo-tree-id4830 . 1) (undo-tree-id4831 . 1) (undo-tree-id4832 . 1) (undo-tree-id4833 . 1) (undo-tree-id4834 . 1) (undo-tree-id4835 . 1) (undo-tree-id4836 . 1) (undo-tree-id4837 . 1) (undo-tree-id4838 . 1) (undo-tree-id4839 . 1) (undo-tree-id4840 . 1) (undo-tree-id4841 . 1) (undo-tree-id4842 . 1) (undo-tree-id4843 . 1) (undo-tree-id4844 . 1) (undo-tree-id4845 . 1) (undo-tree-id4846 . 1) (undo-tree-id4847 . 1) (undo-tree-id4848 . 1) (undo-tree-id4849 . 1) (undo-tree-id4850 . 1) (undo-tree-id4851 . 1) (undo-tree-id4852 . 1) (undo-tree-id4853 . 1) (undo-tree-id4854 . 1) (undo-tree-id4855 . 1) (undo-tree-id4856 . 1) (undo-tree-id4857 . 1) (undo-tree-id4858 . 1) (undo-tree-id4859 . 1) (undo-tree-id4860 . 1) (undo-tree-id4861 . 1) (undo-tree-id4862 . 1) (undo-tree-id4863 . 1) (undo-tree-id4864 . 1) (undo-tree-id4865 . 1) (undo-tree-id4866 . 1) (undo-tree-id4867 . 1) (undo-tree-id4868 . 1) (undo-tree-id4869 . 1) (undo-tree-id4870 . 1) (undo-tree-id4871 . 1) (undo-tree-id4872 . 1) (undo-tree-id4873 . 1) (undo-tree-id4874 . 1) (undo-tree-id4875 . 1) (undo-tree-id4876 . 1) (undo-tree-id4877 . 1) (undo-tree-id4878 . 1) (undo-tree-id4879 . 1) (undo-tree-id4880 . 1) (undo-tree-id4881 . 1) (undo-tree-id4882 . 1) (undo-tree-id4883 . 1) (undo-tree-id4884 . 1) (undo-tree-id4885 . 1) (undo-tree-id4886 . 1) (undo-tree-id4887 . 1) (undo-tree-id4888 . 1) (undo-tree-id4889 . 1) (undo-tree-id4890 . 1) (undo-tree-id4891 . 1) (undo-tree-id4892 . 1) (undo-tree-id4893 . 1) (undo-tree-id4894 . 1) (undo-tree-id4895 . 1) (undo-tree-id4896 . 1) (undo-tree-id4897 . 1) (undo-tree-id4898 . 1) (undo-tree-id4899 . 1) (undo-tree-id4900 . 1) (undo-tree-id4901 . 1) (undo-tree-id4902 . 1) (undo-tree-id4903 . 1) (undo-tree-id4904 . 1) (undo-tree-id4905 . 1) (undo-tree-id4906 . 1) (undo-tree-id4907 . 1) (undo-tree-id4908 . 1) (undo-tree-id4909 . 1) (undo-tree-id4910 . 1) (undo-tree-id4911 . 1) (undo-tree-id4912 . 1) (undo-tree-id4913 . 1) (undo-tree-id4914 . 1) (undo-tree-id4915 . 1) (undo-tree-id4916 . 1) (undo-tree-id4917 . 1) (undo-tree-id4918 . 1) (undo-tree-id4919 . 1) (undo-tree-id4920 . 1) (undo-tree-id4921 . 1) (undo-tree-id4922 . 1) (undo-tree-id4923 . 1) (undo-tree-id4924 . 1) (undo-tree-id4925 . 1) (undo-tree-id4926 . 1) (undo-tree-id4927 . 1) (undo-tree-id4928 . 1) (undo-tree-id4929 . 1) (undo-tree-id4930 . 1) (undo-tree-id4931 . 1) (undo-tree-id4932 . 1) (undo-tree-id4933 . 1) (undo-tree-id4934 . 1) (undo-tree-id4935 . 1) (undo-tree-id4936 . 1) (undo-tree-id4937 . 1) (undo-tree-id4938 . 1) (undo-tree-id4939 . 1) (undo-tree-id4940 . 1) (undo-tree-id4941 . 1) (undo-tree-id4942 . 1) (undo-tree-id4943 . 1) (undo-tree-id4944 . 1) (undo-tree-id4945 . 1) (undo-tree-id4946 . 1) (undo-tree-id4947 . 1) (undo-tree-id4948 . 1) (undo-tree-id4949 . 1) (undo-tree-id4950 . 1) (undo-tree-id4951 . 1) (undo-tree-id4952 . 1) (undo-tree-id4953 . 1) (undo-tree-id4954 . 1) (undo-tree-id4955 . 1) (undo-tree-id4956 . 1) (undo-tree-id4957 . 1) (undo-tree-id4958 . 1) (undo-tree-id4959 . 1) (undo-tree-id4960 . 1) (undo-tree-id4961 . 1) (undo-tree-id4962 . 1) (undo-tree-id4963 . 1) (undo-tree-id4964 . 1) (undo-tree-id4965 . 1) (undo-tree-id4966 . 1) (undo-tree-id4967 . 1) (undo-tree-id4968 . 1) (undo-tree-id4969 . 1) (undo-tree-id4970 . 1) (undo-tree-id4971 . 1) (undo-tree-id4972 . 1) (undo-tree-id4973 . 1) (undo-tree-id4974 . 1) (undo-tree-id4975 . 1) (undo-tree-id4976 . 1) (undo-tree-id4977 . 1) (undo-tree-id4978 . 1) (undo-tree-id4979 . 1) (undo-tree-id4980 . 1) (undo-tree-id4981 . 1) (undo-tree-id4982 . 1) (undo-tree-id4983 . 1) (undo-tree-id4984 . -1) (undo-tree-id4985 . 1) (undo-tree-id4986 . 1) (undo-tree-id4987 . 1) (undo-tree-id4988 . -1) (undo-tree-id4989 . -1) (undo-tree-id4990 . 1) (undo-tree-id4991 . 1) (undo-tree-id4992 . 1) (undo-tree-id4993 . 1) (undo-tree-id4994 . 1) (undo-tree-id4995 . -1) (undo-tree-id4996 . -1) 941 (t 23394 7885 115749 134000)) nil (23394 7892 782427 0) 0 nil]) ((#("cla" 0 3 (help-echo "Undeclared variable or function 'cla'" cursor-sensor-functions #1# fontified t)) . -940) (undo-tree-id4651 . -3) (undo-tree-id4652 . -3) (undo-tree-id4653 . -3) (undo-tree-id4654 . 3) (undo-tree-id4655 . -1) (undo-tree-id4656 . 2) (undo-tree-id4657 . -2) (undo-tree-id4658 . 1) (undo-tree-id4659 . -3) (undo-tree-id4660 . -3) (undo-tree-id4661 . -3) (undo-tree-id4662 . -3) (undo-tree-id4663 . -3) (undo-tree-id4664 . -3) (undo-tree-id4665 . -3) (undo-tree-id4666 . -3) (undo-tree-id4667 . -3) 943 (t 23394 7877 549999 200000)) nil (23394 7885 92218 0) 0 nil]) ((906 . 910)) nil (23394 7877 524527 0) 0 nil]) ((899 . 906) (t 23394 7873 99595 226000)) nil (23394 7877 524539 0) 0 nil]) ((902 . 906)) nil (23394 7873 72807 0) 0 nil]) ((#("s" 0 1 (fontified t help-echo "Undeclared variable or function 'clas'" cursor-sensor-functions #1#)) . -902) (undo-tree-id4056 . -1) (undo-tree-id4057 . -1) (undo-tree-id4058 . -1) (undo-tree-id4059 . -1) (undo-tree-id4060 . 1) (undo-tree-id4061 . -1) (undo-tree-id4062 . -1) 903) nil (23394 7873 72877 0) 0 nil]) ((899 . 903)) nil (23394 7873 72881 0) 0 nil]) ((#("styles" 0 6 (fontified t)) . -899) (undo-tree-id4063 . -6) (undo-tree-id4064 . -5) (undo-tree-id4065 . -6) (undo-tree-id4066 . 6) (undo-tree-id4067 . -1) (undo-tree-id4068 . 5) (undo-tree-id4069 . -2) (undo-tree-id4070 . 4) (undo-tree-id4071 . -3) (undo-tree-id4072 . 3) (undo-tree-id4073 . -4) (undo-tree-id4074 . 2) (undo-tree-id4075 . -5) (undo-tree-id4076 . 1) (undo-tree-id4077 . -6) (undo-tree-id4078 . -6) (undo-tree-id4079 . -6) (undo-tree-id4080 . -6) (undo-tree-id4081 . -6) (undo-tree-id4082 . 1) (undo-tree-id4083 . -5) (undo-tree-id4084 . 1) (undo-tree-id4085 . -6) 905) nil (23394 7873 72934 0) 0 nil]) ((#("s" 0 1 (fontified t help-echo "Undeclared variable or function 'clas'" cursor-sensor-functions #1#)) . -931) (undo-tree-id4086 . -1) (undo-tree-id4087 . -1) (undo-tree-id4088 . -1) (undo-tree-id4089 . -1) (undo-tree-id4090 . 1) (undo-tree-id4091 . -1) (undo-tree-id4092 . -1) 932) nil (23394 7873 72954 0) 0 nil]) ((928 . 932)) nil (23394 7873 72957 0) 0 nil]) ((#("s" 0 1 (fontified t help-echo "Undeclared variable or function 's'" cursor-sensor-functions #1#)) . -928) (undo-tree-id4093 . -1) (undo-tree-id4094 . -1) (undo-tree-id4095 . -1) (undo-tree-id4096 . -1) (undo-tree-id4097 . -1) (undo-tree-id4098 . -1) (undo-tree-id4099 . -1) (undo-tree-id4100 . 1) (undo-tree-id4101 . -1) (undo-tree-id4102 . -1) (undo-tree-id4103 . -1) (undo-tree-id4104 . -1) (undo-tree-id4105 . -1) (undo-tree-id4106 . -1) (undo-tree-id4107 . -1) (undo-tree-id4108 . -1) (undo-tree-id4109 . -1) (undo-tree-id4110 . -1) (undo-tree-id4111 . -1) (undo-tree-id4112 . -1) (undo-tree-id4113 . -1) (undo-tree-id4114 . -1) (undo-tree-id4115 . -1) (undo-tree-id4116 . -1) (undo-tree-id4117 . -1) (undo-tree-id4118 . -1) (undo-tree-id4119 . -1) (undo-tree-id4120 . -1) (undo-tree-id4121 . -1) (undo-tree-id4122 . -1) (undo-tree-id4123 . -1) (undo-tree-id4124 . -1) (undo-tree-id4125 . -1) (undo-tree-id4126 . -1) (undo-tree-id4127 . -1) (undo-tree-id4128 . -1) (undo-tree-id4129 . -1) (undo-tree-id4130 . -1) (undo-tree-id4131 . -1) (undo-tree-id4132 . -1) (undo-tree-id4133 . -1) (undo-tree-id4134 . -1) (undo-tree-id4135 . -1) (undo-tree-id4136 . -1) (undo-tree-id4137 . -1) (undo-tree-id4138 . -1) (undo-tree-id4139 . -1) (undo-tree-id4140 . -1) (undo-tree-id4141 . -1) (undo-tree-id4142 . -1) (undo-tree-id4143 . -1) (undo-tree-id4144 . -1) (undo-tree-id4145 . -1) (undo-tree-id4146 . -1) (undo-tree-id4147 . -1) (#("t" 0 1 (fontified t help-echo "Undeclared variable or function 'st'" cursor-sensor-functions #1#)) . -929) (undo-tree-id4148 . -1) (undo-tree-id4149 . -1) (undo-tree-id4150 . -1) (undo-tree-id4151 . -1) (undo-tree-id4152 . -1) (undo-tree-id4153 . -1) (undo-tree-id4154 . -1) (undo-tree-id4155 . 1) (undo-tree-id4156 . -1) (undo-tree-id4157 . -1) (undo-tree-id4158 . -1) (undo-tree-id4159 . -1) (undo-tree-id4160 . -1) (undo-tree-id4161 . -1) (undo-tree-id4162 . -1) (undo-tree-id4163 . -1) (undo-tree-id4164 . -1) (undo-tree-id4165 . -1) (undo-tree-id4166 . -1) (undo-tree-id4167 . -1) (undo-tree-id4168 . -1) (undo-tree-id4169 . -1) (undo-tree-id4170 . -1) (undo-tree-id4171 . -1) (undo-tree-id4172 . -1) (undo-tree-id4173 . -1) (undo-tree-id4174 . -1) (undo-tree-id4175 . -1) (undo-tree-id4176 . -1) (undo-tree-id4177 . -1) (undo-tree-id4178 . -1) (undo-tree-id4179 . -1) (undo-tree-id4180 . -1) (undo-tree-id4181 . -1) (undo-tree-id4182 . -1) (undo-tree-id4183 . -1) (undo-tree-id4184 . -1) (undo-tree-id4185 . -1) (undo-tree-id4186 . -1) (undo-tree-id4187 . -1) (undo-tree-id4188 . -1) (undo-tree-id4189 . -1) (undo-tree-id4190 . -1) (undo-tree-id4191 . -1) (undo-tree-id4192 . -1) (undo-tree-id4193 . -1) (undo-tree-id4194 . -1) (undo-tree-id4195 . -1) (undo-tree-id4196 . -1) (undo-tree-id4197 . -1) (undo-tree-id4198 . -1) (undo-tree-id4199 . -1) (undo-tree-id4200 . -1) (#("y" 0 1 (fontified t help-echo "Undeclared variable or function 'sty'" cursor-sensor-functions #1#)) . -930) (undo-tree-id4201 . -1) (undo-tree-id4202 . -1) (undo-tree-id4203 . -1) (undo-tree-id4204 . -1) (undo-tree-id4205 . -1) (undo-tree-id4206 . -1) (undo-tree-id4207 . -1) (undo-tree-id4208 . 1) (undo-tree-id4209 . -1) (undo-tree-id4210 . -1) (undo-tree-id4211 . -1) (undo-tree-id4212 . -1) (undo-tree-id4213 . -1) (undo-tree-id4214 . -1) (undo-tree-id4215 . -1) (undo-tree-id4216 . -1) (undo-tree-id4217 . -1) (undo-tree-id4218 . -1) (undo-tree-id4219 . -1) (undo-tree-id4220 . -1) (undo-tree-id4221 . -1) (undo-tree-id4222 . -1) (undo-tree-id4223 . -1) (undo-tree-id4224 . -1) (undo-tree-id4225 . -1) (undo-tree-id4226 . -1) (undo-tree-id4227 . -1) (undo-tree-id4228 . -1) (undo-tree-id4229 . -1) (undo-tree-id4230 . -1) (undo-tree-id4231 . -1) (undo-tree-id4232 . -1) (undo-tree-id4233 . -1) (undo-tree-id4234 . -1) (undo-tree-id4235 . -1) (undo-tree-id4236 . -1) (undo-tree-id4237 . -1) (undo-tree-id4238 . -1) (undo-tree-id4239 . -1) (undo-tree-id4240 . -1) (undo-tree-id4241 . -1) (undo-tree-id4242 . -1) (undo-tree-id4243 . -1) (undo-tree-id4244 . -1) (undo-tree-id4245 . -1) (undo-tree-id4246 . -1) (undo-tree-id4247 . -1) (undo-tree-id4248 . -1) (undo-tree-id4249 . -1) (undo-tree-id4250 . -1) (undo-tree-id4251 . -1) 931) nil (23394 7873 73229 0) 0 nil]) ((#("l" 0 1 (fontified t help-echo "Undeclared variable or function 'styl'" cursor-sensor-functions #1#)) . -931) (undo-tree-id4252 . -1) (undo-tree-id4253 . -1) (undo-tree-id4254 . -1) (undo-tree-id4255 . -1) (undo-tree-id4256 . -1) (undo-tree-id4257 . -1) (undo-tree-id4258 . -1) (undo-tree-id4259 . 1) (undo-tree-id4260 . -1) (undo-tree-id4261 . -1) (undo-tree-id4262 . -1) (undo-tree-id4263 . -1) (undo-tree-id4264 . -1) (undo-tree-id4265 . -1) (undo-tree-id4266 . -1) (undo-tree-id4267 . -1) (undo-tree-id4268 . -1) (undo-tree-id4269 . -1) (undo-tree-id4270 . -1) (undo-tree-id4271 . -1) (undo-tree-id4272 . -1) (undo-tree-id4273 . -1) (undo-tree-id4274 . -1) (undo-tree-id4275 . -1) (undo-tree-id4276 . -1) (undo-tree-id4277 . -1) (undo-tree-id4278 . -1) (undo-tree-id4279 . -1) (undo-tree-id4280 . -1) (undo-tree-id4281 . -1) (undo-tree-id4282 . -1) (undo-tree-id4283 . -1) (undo-tree-id4284 . -1) (undo-tree-id4285 . -1) (undo-tree-id4286 . -1) (undo-tree-id4287 . -1) (undo-tree-id4288 . -1) (undo-tree-id4289 . -1) (undo-tree-id4290 . -1) (undo-tree-id4291 . -1) (undo-tree-id4292 . -1) (undo-tree-id4293 . -1) (undo-tree-id4294 . -1) (#("e" 0 1 (fontified t help-echo "Undeclared variable or function 'style'" cursor-sensor-functions #1#)) . -932) (undo-tree-id4295 . -1) (undo-tree-id4296 . -1) (undo-tree-id4297 . -1) (undo-tree-id4298 . -1) (undo-tree-id4299 . -1) (undo-tree-id4300 . -1) (undo-tree-id4301 . -1) (undo-tree-id4302 . 1) (undo-tree-id4303 . -1) (undo-tree-id4304 . -1) (undo-tree-id4305 . -1) (undo-tree-id4306 . -1) (undo-tree-id4307 . -1) (undo-tree-id4308 . -1) (undo-tree-id4309 . -1) (undo-tree-id4310 . -1) (undo-tree-id4311 . -1) (undo-tree-id4312 . -1) (undo-tree-id4313 . -1) (undo-tree-id4314 . -1) (undo-tree-id4315 . -1) (undo-tree-id4316 . -1) (undo-tree-id4317 . -1) (undo-tree-id4318 . -1) (undo-tree-id4319 . -1) (undo-tree-id4320 . -1) (undo-tree-id4321 . -1) (undo-tree-id4322 . -1) (undo-tree-id4323 . -1) (undo-tree-id4324 . -1) (undo-tree-id4325 . -1) (undo-tree-id4326 . -1) (undo-tree-id4327 . -1) (undo-tree-id4328 . -1) (undo-tree-id4329 . -1) (undo-tree-id4330 . -1) (undo-tree-id4331 . -1) (undo-tree-id4332 . -1) (undo-tree-id4333 . -1) (undo-tree-id4334 . -1) (undo-tree-id4335 . -1) (#("s" 0 1 (fontified t)) . -933) (undo-tree-id4336 . -1) (undo-tree-id4337 . -1) (undo-tree-id4338 . -1) (undo-tree-id4339 . -1) (undo-tree-id4340 . -1) (undo-tree-id4341 . -1) (undo-tree-id4342 . -1) (undo-tree-id4343 . -1) (undo-tree-id4344 . -1) (undo-tree-id4345 . 1) (undo-tree-id4346 . -1) (undo-tree-id4347 . -1) (undo-tree-id4348 . -1) (undo-tree-id4349 . -1) (undo-tree-id4350 . -1) (undo-tree-id4351 . -1) (undo-tree-id4352 . -1) (undo-tree-id4353 . -1) (undo-tree-id4354 . -1) (undo-tree-id4355 . -1) (undo-tree-id4356 . -1) (undo-tree-id4357 . -1) (undo-tree-id4358 . -1) (undo-tree-id4359 . -1) (undo-tree-id4360 . -1) (undo-tree-id4361 . -1) (undo-tree-id4362 . -1) (undo-tree-id4363 . -1) (undo-tree-id4364 . -1) (undo-tree-id4365 . -1) (undo-tree-id4366 . -1) (undo-tree-id4367 . -1) (undo-tree-id4368 . -1) (undo-tree-id4369 . -1) (undo-tree-id4370 . -1) (#("(" 0 1 (fontified t help-echo "missing `}' after expression" cursor-sensor-functions #1# face (rainbow-delimiters-depth-5-face))) . -934) (undo-tree-id4371 . -1) (undo-tree-id4372 . -1) (undo-tree-id4373 . -1) (undo-tree-id4374 . -1) (undo-tree-id4375 . -1) (undo-tree-id4376 . -1) (undo-tree-id4377 . -1) (undo-tree-id4378 . -1) (undo-tree-id4379 . -1) (undo-tree-id4380 . 1) (undo-tree-id4381 . -1) (undo-tree-id4382 . -1) (undo-tree-id4383 . -1) (undo-tree-id4384 . -1) (undo-tree-id4385 . -1) (undo-tree-id4386 . -1) (undo-tree-id4387 . -1) (undo-tree-id4388 . -1) (undo-tree-id4389 . -1) (undo-tree-id4390 . -1) (undo-tree-id4391 . -1) (undo-tree-id4392 . -1) (undo-tree-id4393 . -1) (undo-tree-id4394 . -1) (undo-tree-id4395 . -1) (undo-tree-id4396 . -1) (undo-tree-id4397 . -1) (undo-tree-id4398 . -1) (undo-tree-id4399 . -1) (undo-tree-id4400 . -1) (undo-tree-id4401 . -1) (#(")" 0 1 (fontified t face (rainbow-delimiters-depth-5-face))) . -935) (undo-tree-id4402 . -1) (undo-tree-id4403 . -1) (undo-tree-id4404 . -1) (undo-tree-id4405 . -1) (undo-tree-id4406 . -1) (undo-tree-id4407 . -1) (undo-tree-id4408 . -1) (undo-tree-id4409 . -1) (undo-tree-id4410 . -1) (undo-tree-id4411 . 1) (undo-tree-id4412 . 1) (undo-tree-id4413 . -1) (undo-tree-id4414 . -1) (undo-tree-id4415 . -1) (undo-tree-id4416 . -1) (undo-tree-id4417 . -1) (undo-tree-id4418 . -1) (undo-tree-id4419 . -1) (undo-tree-id4420 . -1) (undo-tree-id4421 . -1) (undo-tree-id4422 . -1) (undo-tree-id4423 . -1) (undo-tree-id4424 . -1) (undo-tree-id4425 . -1) (undo-tree-id4426 . -1) (undo-tree-id4427 . -1) (undo-tree-id4428 . -1) (undo-tree-id4429 . -1) (undo-tree-id4430 . -1) (#("." 0 1 (fontified t help-echo "missing name after . operator" cursor-sensor-functions #1#)) . -936) (undo-tree-id4431 . -1) (undo-tree-id4432 . -1) (undo-tree-id4433 . -1) (undo-tree-id4434 . -1) (undo-tree-id4435 . -1) (undo-tree-id4436 . -1) (undo-tree-id4437 . -1) (undo-tree-id4438 . 1) (undo-tree-id4439 . -1) (undo-tree-id4440 . -1) (undo-tree-id4441 . 1) (undo-tree-id4442 . 1) (undo-tree-id4443 . 1) (undo-tree-id4444 . 1) (undo-tree-id4445 . 1) (undo-tree-id4446 . 1) (undo-tree-id4447 . 1) (undo-tree-id4448 . 1) (undo-tree-id4449 . 1) (undo-tree-id4450 . 1) (undo-tree-id4451 . 1) (undo-tree-id4452 . 1) (undo-tree-id4453 . -1) (undo-tree-id4454 . -1) (undo-tree-id4455 . -1) (undo-tree-id4456 . -1) (undo-tree-id4457 . -1) (undo-tree-id4458 . -1) (undo-tree-id4459 . -1) (undo-tree-id4460 . -1) (undo-tree-id4461 . -1) (undo-tree-id4462 . -1) (undo-tree-id4463 . -1) (undo-tree-id4464 . -1) (undo-tree-id4465 . -1) (undo-tree-id4466 . -1) (undo-tree-id4467 . -1) (undo-tree-id4468 . -1) (#("p" 0 1 (fontified t font-lock-face js2-object-property-access)) . -937) (undo-tree-id4469 . -1) (undo-tree-id4470 . -1) (undo-tree-id4471 . -1) (undo-tree-id4472 . 1) (undo-tree-id4473 . 1) (undo-tree-id4474 . 1) (undo-tree-id4475 . 1) (undo-tree-id4476 . 1) (undo-tree-id4477 . 1) (undo-tree-id4478 . 1) (undo-tree-id4479 . 1) (undo-tree-id4480 . 1) (undo-tree-id4481 . 1) (undo-tree-id4482 . 1) (undo-tree-id4483 . 1) (undo-tree-id4484 . 1) (undo-tree-id4485 . -1) (undo-tree-id4486 . -1) (undo-tree-id4487 . -1) (undo-tree-id4488 . -1) (undo-tree-id4489 . 1) (undo-tree-id4490 . 1) (undo-tree-id4491 . 1) (undo-tree-id4492 . 1) (undo-tree-id4493 . 1) (undo-tree-id4494 . 1) (undo-tree-id4495 . 1) (undo-tree-id4496 . 1) (undo-tree-id4497 . 1) (undo-tree-id4498 . 1) (undo-tree-id4499 . 1) (undo-tree-id4500 . 1) (undo-tree-id4501 . 1) (undo-tree-id4502 . 1) (undo-tree-id4503 . 1) (undo-tree-id4504 . 1) (undo-tree-id4505 . 1) (undo-tree-id4506 . 1) (undo-tree-id4507 . 1) (undo-tree-id4508 . 1) (undo-tree-id4509 . 1) (undo-tree-id4510 . 1) (undo-tree-id4511 . 1) (undo-tree-id4512 . 1) (undo-tree-id4513 . 1) (undo-tree-id4514 . 1) (undo-tree-id4515 . 1) (undo-tree-id4516 . 1) (undo-tree-id4517 . 1) (undo-tree-id4518 . 1) (undo-tree-id4519 . 1) (undo-tree-id4520 . 1) (undo-tree-id4521 . 1) (undo-tree-id4522 . 1) (undo-tree-id4523 . 1) (undo-tree-id4524 . 1) (undo-tree-id4525 . 1) (undo-tree-id4526 . 1) (undo-tree-id4527 . 1) (undo-tree-id4528 . 1) (undo-tree-id4529 . -1) (undo-tree-id4530 . -1) (undo-tree-id4531 . -1) (undo-tree-id4532 . -1) (undo-tree-id4533 . -1) (undo-tree-id4534 . -1) (undo-tree-id4535 . -1) (undo-tree-id4536 . -1) (undo-tree-id4537 . -1) (undo-tree-id4538 . -1) (undo-tree-id4539 . -1) (undo-tree-id4540 . -1) (undo-tree-id4541 . -1) (undo-tree-id4542 . -1) (#("a" 0 1 (fontified t font-lock-face js2-object-property-access)) . -938) (undo-tree-id4543 . -1) (undo-tree-id4544 . -1) (undo-tree-id4545 . -1) (undo-tree-id4546 . 1) (undo-tree-id4547 . 1) (undo-tree-id4548 . 1) (undo-tree-id4549 . 1) (undo-tree-id4550 . 1) (undo-tree-id4551 . 1) (undo-tree-id4552 . 1) (undo-tree-id4553 . 1) (undo-tree-id4554 . 1) (undo-tree-id4555 . 1) (undo-tree-id4556 . 1) (undo-tree-id4557 . 1) (undo-tree-id4558 . 1) (undo-tree-id4559 . 1) (undo-tree-id4560 . 1) (undo-tree-id4561 . 1) (undo-tree-id4562 . 1) (undo-tree-id4563 . 1) (undo-tree-id4564 . 1) (undo-tree-id4565 . 1) (undo-tree-id4566 . 1) (undo-tree-id4567 . 1) (undo-tree-id4568 . 1) (undo-tree-id4569 . 1) (undo-tree-id4570 . 1) (undo-tree-id4571 . 1) (undo-tree-id4572 . 1) (undo-tree-id4573 . 1) (undo-tree-id4574 . 1) (undo-tree-id4575 . 1) (undo-tree-id4576 . 1) (undo-tree-id4577 . 1) (undo-tree-id4578 . 1) (undo-tree-id4579 . 1) (undo-tree-id4580 . 1) (undo-tree-id4581 . 1) (undo-tree-id4582 . 1) (undo-tree-id4583 . 1) (undo-tree-id4584 . 1) (undo-tree-id4585 . 1) (undo-tree-id4586 . 1) (undo-tree-id4587 . 1) (undo-tree-id4588 . 1) (undo-tree-id4589 . 1) (undo-tree-id4590 . 1) (undo-tree-id4591 . 1) (undo-tree-id4592 . 1) (undo-tree-id4593 . 1) (undo-tree-id4594 . 1) (undo-tree-id4595 . 1) (undo-tree-id4596 . 1) (undo-tree-id4597 . 1) (undo-tree-id4598 . 1) (undo-tree-id4599 . 1) (undo-tree-id4600 . 1) (undo-tree-id4601 . 1) (undo-tree-id4602 . 1) (undo-tree-id4603 . 1) (undo-tree-id4604 . -1) (undo-tree-id4605 . -1) (undo-tree-id4606 . -1) (undo-tree-id4607 . -1) (undo-tree-id4608 . -1) (undo-tree-id4609 . -1) (undo-tree-id4610 . -1) (undo-tree-id4611 . -1) (undo-tree-id4612 . -1) (undo-tree-id4613 . 1) (undo-tree-id4614 . 1) (undo-tree-id4615 . -1) (undo-tree-id4616 . -1) (undo-tree-id4617 . -1) (undo-tree-id4618 . -1) (undo-tree-id4619 . -1) (#("g" 0 1 (fontified t font-lock-face js2-object-property-access)) . -939) (undo-tree-id4620 . -1) (undo-tree-id4621 . -1) (undo-tree-id4622 . 1) (undo-tree-id4623 . 1) (undo-tree-id4624 . 1) (undo-tree-id4625 . 1) (undo-tree-id4626 . 1) (undo-tree-id4627 . 1) (undo-tree-id4628 . 1) (undo-tree-id4629 . 1) (undo-tree-id4630 . -1) (undo-tree-id4631 . -1) (undo-tree-id4632 . -1) (undo-tree-id4633 . 1) (undo-tree-id4634 . 1) (undo-tree-id4635 . 1) (undo-tree-id4636 . 1) (undo-tree-id4637 . -1) (undo-tree-id4638 . -1) (undo-tree-id4639 . -1) (#("e" 0 1 (fontified t font-lock-face js2-object-property-access)) . -940) (undo-tree-id4640 . -1) (undo-tree-id4641 . -1) (undo-tree-id4642 . 1) (undo-tree-id4643 . 1) (undo-tree-id4644 . -1) (undo-tree-id4645 . 1) (undo-tree-id4646 . 1) (undo-tree-id4647 . 1) (undo-tree-id4648 . 1) (undo-tree-id4649 . -1) (undo-tree-id4650 . -1) 941 (t 23394 7597 46762 56000)) nil (23394 7873 73882 0) 0 nil]) ((#(")" 0 1 (fontified nil)) . -935) (935 . 936) (#(")" 0 1 (fontified nil face (rainbow-delimiters-depth-5-face))) . -935) (935 . 936) (934 . 936) (#("(" 0 1 (fontified nil)) . -934) (934 . 935) (t 23394 7572 537021 530000)) nil (23394 7597 28062 0) 0 nil]) ((899 . 905)) nil (23394 7572 516957 0) 0 nil]) ((#("this." 0 4 (fontified t font-lock-face font-lock-builtin-face) 4 5 (fontified t help-echo "missing name after . operator" cursor-sensor-functions #1#)) . -899) (undo-tree-id4001 . -5) (undo-tree-id4002 . -5) (undo-tree-id4003 . 5) (undo-tree-id4004 . -1) (undo-tree-id4005 . 4) (undo-tree-id4006 . -2) (undo-tree-id4007 . -2) (undo-tree-id4008 . -2) (undo-tree-id4009 . -2) (undo-tree-id4010 . -2) (undo-tree-id4011 . -2) (undo-tree-id4012 . -2) (undo-tree-id4013 . 3) (undo-tree-id4014 . -3) (undo-tree-id4015 . 2) (undo-tree-id4016 . -4) (undo-tree-id4017 . 1) (undo-tree-id4018 . -5) (undo-tree-id4019 . -5) (undo-tree-id4020 . -5) (undo-tree-id4021 . -5) (undo-tree-id4022 . -5) (undo-tree-id4023 . -5) (undo-tree-id4024 . -5) (undo-tree-id4025 . -5) (undo-tree-id4026 . -5) (undo-tree-id4027 . -5) (undo-tree-id4028 . -5) (undo-tree-id4029 . -5) (undo-tree-id4030 . -4) (undo-tree-id4031 . -5) (undo-tree-id4032 . -5) 904) nil (23394 7572 517079 0) 0 nil]) ((#("clas" 0 4 (fontified t font-lock-face js2-object-property-access)) . -904) (undo-tree-id4033 . -4) (undo-tree-id4034 . -4) (undo-tree-id4035 . 4) (undo-tree-id4036 . -1) (undo-tree-id4037 . -1) (undo-tree-id4038 . -1) (undo-tree-id4039 . 3) (undo-tree-id4040 . -2) (undo-tree-id4041 . 2) (undo-tree-id4042 . -3) (undo-tree-id4043 . 1) (undo-tree-id4044 . -4) (undo-tree-id4045 . -4) (undo-tree-id4046 . -4) (undo-tree-id4047 . -4) (undo-tree-id4048 . 4) (undo-tree-id4049 . 4) (undo-tree-id4050 . -4) 908) nil (23394 7572 517110 0) 0 nil]) ((#("/" 0 1 (fontified t font-lock-face rjsx-text syntax-table #9#)) . -878) (undo-tree-id4051 . -1) (undo-tree-id4052 . -1) (undo-tree-id4053 . -1) (undo-tree-id4054 . 1) (undo-tree-id4055 . -1) 879) nil (23394 7572 517121 0) 0 nil]) ((878 . 879) (t 23394 7556 87821 401000)) nil (23394 7572 517124 0) 0 nil]) ((936 . 937) (t 23394 7553 967735 342000)) nil (23394 7556 69674 0) 0 nil]) ((936 . 937)) nil (23394 7553 949585 0) 0 nil]) ((#("s" 0 1 (fontified t help-echo "Undeclared variable or function 'stylespage'" cursor-sensor-functions #1#)) . -936) (undo-tree-id3871 . -1) (undo-tree-id3872 . -1) (undo-tree-id3873 . 1) (undo-tree-id3874 . -1) 937) nil (23394 7553 949634 0) 0 nil]) ((934 . 937)) nil (23394 7553 949640 0) 0 nil]) ((#("k" 0 1 (fontified t help-echo "Undeclared variable or function 'stykpage'" cursor-sensor-functions #1#)) . -934) (undo-tree-id3875 . -1) (undo-tree-id3876 . -1) (undo-tree-id3877 . -1) (undo-tree-id3878 . 1) (undo-tree-id3879 . -1) (undo-tree-id3880 . -1) (undo-tree-id3881 . -1) (undo-tree-id3882 . -1) (undo-tree-id3883 . -1) (#("l" 0 1 (fontified nil help-echo "Undeclared variable or function 'stykpage'" cursor-sensor-functions #1#)) . -935) (undo-tree-id3884 . 1) (undo-tree-id3885 . -1) 936) nil (23394 7553 949677 0) 0 nil]) ((935 . 936)) nil (23394 7553 949680 0) 0 nil]) ((#("e" 0 1 (fontified t help-echo "Undeclared variable or function 'stykepage'" cursor-sensor-functions #1#)) . -935) (undo-tree-id3886 . -1) (undo-tree-id3887 . -1) (undo-tree-id3888 . 1) (undo-tree-id3889 . -1) 936) nil (23394 7553 949693 0) 0 nil]) ((931 . 936)) nil (23394 7553 949696 0) 0 nil]) ((#("this." 0 4 (fontified t font-lock-face font-lock-builtin-face) 4 5 (fontified t)) . -931) (undo-tree-id3890 . -5) (undo-tree-id3891 . -5) (undo-tree-id3892 . -5) (undo-tree-id3893 . -5) (undo-tree-id3894 . 5) (undo-tree-id3895 . -1) (undo-tree-id3896 . 4) (undo-tree-id3897 . -2) (undo-tree-id3898 . 3) (undo-tree-id3899 . -3) (undo-tree-id3900 . 2) (undo-tree-id3901 . -4) (undo-tree-id3902 . 1) (undo-tree-id3903 . -5) (undo-tree-id3904 . -5) (undo-tree-id3905 . -5) (undo-tree-id3906 . -5) (undo-tree-id3907 . -5) (undo-tree-id3908 . -5) (undo-tree-id3909 . -5) (undo-tree-id3910 . -5) (undo-tree-id3911 . -5) (undo-tree-id3912 . -5) (undo-tree-id3913 . -5) (undo-tree-id3914 . -5) (undo-tree-id3915 . -5) (undo-tree-id3916 . -5) (undo-tree-id3917 . -5) (undo-tree-id3918 . -5) (undo-tree-id3919 . -5) (undo-tree-id3920 . -5) (undo-tree-id3921 . -5) (undo-tree-id3922 . -5) (undo-tree-id3923 . -5) (undo-tree-id3924 . -5) (undo-tree-id3925 . -5) (undo-tree-id3926 . -5) (undo-tree-id3927 . -5) (undo-tree-id3928 . -5) (undo-tree-id3929 . -5) (undo-tree-id3930 . -5) (undo-tree-id3931 . -5) (undo-tree-id3932 . -5) (undo-tree-id3933 . -5) 936) nil (23394 7553 949781 0) 0 nil]) ((#("st" 0 2 (fontified t font-lock-face js2-object-property-access)) . -936) (undo-tree-id3934 . -2) (undo-tree-id3935 . -2) (undo-tree-id3936 . -2) (undo-tree-id3937 . 2) (undo-tree-id3938 . -1) (undo-tree-id3939 . 1) (undo-tree-id3940 . -2) 938) nil (23394 7553 949796 0) 0 nil]) ((936 . 938)) nil (23394 7553 949804 0) 0 nil]) ((#("props." 0 5 (fontified t font-lock-face js2-object-property-access) 5 6 (fontified t)) . -936) (undo-tree-id3941 . -6) (undo-tree-id3942 . -6) (undo-tree-id3943 . -6) (undo-tree-id3944 . -6) (undo-tree-id3945 . 6) (undo-tree-id3946 . -1) (undo-tree-id3947 . 5) (undo-tree-id3948 . -2) (undo-tree-id3949 . 4) (undo-tree-id3950 . -3) (undo-tree-id3951 . 3) (undo-tree-id3952 . -4) (undo-tree-id3953 . 2) (undo-tree-id3954 . -5) (undo-tree-id3955 . 1) (undo-tree-id3956 . -6) (undo-tree-id3957 . -6) (undo-tree-id3958 . -6) (undo-tree-id3959 . -6) (undo-tree-id3960 . -6) (undo-tree-id3961 . -6) 942) nil (23394 7553 949842 0) 0 nil]) ((#("classes." 0 7 (font-lock-face js2-object-property-access fontified t) 7 8 (fontified t)) . -942) (undo-tree-id3962 . -8) (undo-tree-id3963 . -8) (undo-tree-id3964 . -8) (undo-tree-id3965 . 8) (undo-tree-id3966 . -8) (undo-tree-id3967 . -8) (undo-tree-id3968 . -8) (undo-tree-id3969 . -8) (undo-tree-id3970 . -8) 950) nil (23394 7553 949857 0) 0 nil]) ((905 . 908)) nil (23394 7553 949861 0) 0 nil]) ((#("a" 0 1 (fontified t font-lock-face js2-object-property-access)) . -905) (undo-tree-id3971 . -1) (undo-tree-id3972 . -1) (undo-tree-id3973 . 1) (undo-tree-id3974 . -1) 906) nil (23394 7553 949872 0) 0 nil]) ((901 . 906)) nil (23394 7553 949875 0) 0 nil]) ((#("o" 0 1 (fontified t help-echo "Undeclared variable or function 'tho'" cursor-sensor-functions #1#)) . -901) (undo-tree-id3975 . -1) (undo-tree-id3976 . -1) (undo-tree-id3977 . 1) (undo-tree-id3978 . -1) (undo-tree-id3979 . -1) (undo-tree-id3980 . -1) (undo-tree-id3981 . -1) (undo-tree-id3982 . -1) (undo-tree-id3983 . -1) (#("s" 0 1 (fontified t help-echo "Undeclared variable or function 'thos'" cursor-sensor-functions #1#)) . -902) (undo-tree-id3984 . -1) (undo-tree-id3985 . -1) (undo-tree-id3986 . 1) (undo-tree-id3987 . -1) (undo-tree-id3988 . -1) (undo-tree-id3989 . -1) (undo-tree-id3990 . -1) (#("." 0 1 (fontified t help-echo "missing name after . operator" cursor-sensor-functions #1#)) . -903) (undo-tree-id3991 . -1) (undo-tree-id3992 . -1) (undo-tree-id3993 . -1) (undo-tree-id3994 . 1) (undo-tree-id3995 . -1) 904) nil (23394 7553 949914 0) 0 nil]) ((899 . 904) (898 . 900) (#("(" 0 1 (fontified nil font-lock-face js2-object-property-access)) . -898) (887 . 899) (887 . 888) (nil fontified nil 886 . 887) (nil font-lock-face rjsx-text 886 . 887) (886 . 887) (#("{" 0 1 (fontified nil font-lock-face rjsx-text)) . -886) (886 . 887)) nil (23394 7553 949923 0) 0 nil]) ((#("c" 0 1 (fontified t font-lock-face rjsx-text syntax-table #9#)) . -886) (undo-tree-id3996 . -1) (undo-tree-id3997 . -1) (undo-tree-id3998 . -1) (undo-tree-id3999 . 1) (undo-tree-id4000 . -1) 887) nil (23394 7553 949937 0) 0 nil]) ((886 . 887)) nil (23394 7553 949939 0) 0 nil]) ((877 . 886) (t 23394 7473 321080 711000)) nil (23394 7553 949941 0) 0 nil]) ((891 . 896)) nil (23394 7473 303866 0) 0 nil]) ((#("className" 0 9 (fontified t font-lock-face rjsx-attr)) . -891) (undo-tree-id3860 . -9) (undo-tree-id3861 . -8) (undo-tree-id3862 . -9) (undo-tree-id3863 . 1) (undo-tree-id3864 . -8) (undo-tree-id3865 . -8) (undo-tree-id3866 . 1) (undo-tree-id3867 . 1) (undo-tree-id3868 . -8) (undo-tree-id3869 . 1) (undo-tree-id3870 . -9) 900 (t 23394 7460 619172 359000)) nil (23394 7473 303923 0) 0 nil]) ((921 . 922)) nil (23394 7460 601291 0) 0 nil]) ((913 . 921)) nil (23394 7460 601300 0) 0 nil]) ((907 . 913)) nil (23394 7460 601303 0) 0 nil]) ((#("classes." 0 7 (fontified t font-lock-face js2-object-property-access) 7 8 (fontified t)) . -907) (undo-tree-id3799 . -8) (undo-tree-id3800 . -8) (undo-tree-id3801 . 8) (undo-tree-id3802 . -1) (undo-tree-id3803 . 7) (undo-tree-id3804 . -2) (undo-tree-id3805 . 6) (undo-tree-id3806 . -3) (undo-tree-id3807 . 5) (undo-tree-id3808 . -4) (undo-tree-id3809 . -4) (undo-tree-id3810 . -4) (undo-tree-id3811 . 4) (undo-tree-id3812 . -5) (undo-tree-id3813 . 3) (undo-tree-id3814 . -6) (undo-tree-id3815 . 2) (undo-tree-id3816 . -7) (undo-tree-id3817 . -7) (undo-tree-id3818 . -7) (undo-tree-id3819 . 1) (undo-tree-id3820 . -8) 915) nil (23394 7460 601411 0) 0 nil]) ((914 . 915)) nil (23394 7460 601415 0) 0 nil]) ((#("/" 0 1 (fontified t)) . -914) (undo-tree-id3821 . -1) (undo-tree-id3822 . -1) (undo-tree-id3823 . -1) (undo-tree-id3824 . 1) (undo-tree-id3825 . -1) 915) nil (23394 7460 601437 0) 0 nil]) ((911 . 915)) nil (23394 7460 601440 0) 0 nil]) ((#("e" 0 1 (fontified t font-lock-face js2-object-property-access)) . -911) (undo-tree-id3826 . -1) (undo-tree-id3827 . -1) (undo-tree-id3828 . 1) (undo-tree-id3829 . -1) 912) nil (23394 7460 601453 0) 0 nil]) ((908 . 912)) nil (23394 7460 601456 0) 0 nil]) ((907 . 908)) nil (23394 7460 601457 0) 0 nil]) ((#("s" 0 1 (fontified t font-lock-face js2-object-property-access)) . -907) (undo-tree-id3830 . -1) (undo-tree-id3831 . -1) (undo-tree-id3832 . 1) (undo-tree-id3833 . -1) 908) nil (23394 7460 601467 0) 0 nil]) ((902 . 908)) nil (23394 7460 601469 0) 0 nil]) ((#("p" 0 1 (fontified t help-echo "Undeclared variable or function 'page'" cursor-sensor-functions #1#)) . -902) (undo-tree-id3834 . -1) (undo-tree-id3835 . -1) (undo-tree-id3836 . -1) (undo-tree-id3837 . -1) (undo-tree-id3838 . -1) (undo-tree-id3839 . -1) (undo-tree-id3840 . -1) (undo-tree-id3841 . -1) (undo-tree-id3842 . -1) (#("t" 0 1 (fontified nil help-echo "Undeclared variable or function 'ptage'" cursor-sensor-functions #1#)) . -903) (undo-tree-id3843 . -1) (undo-tree-id3844 . -1) (undo-tree-id3845 . -1) (undo-tree-id3846 . -1) (undo-tree-id3847 . -1) (undo-tree-id3848 . -1) (#("t" 0 1 (fontified nil help-echo "Undeclared variable or function 'ptage'" cursor-sensor-functions #1#)) . -904) (undo-tree-id3849 . 1) (undo-tree-id3850 . -1) 905) nil (23394 7460 601512 0) 0 nil]) ((904 . 905)) nil (23394 7460 601516 0) 0 nil]) ((#("h" 0 1 (fontified t help-echo "Undeclared variable or function 'pthage'" cursor-sensor-functions #1#)) . -904) (undo-tree-id3851 . -1) (undo-tree-id3852 . -1) (undo-tree-id3853 . -1) (#("i" 0 1 (fontified t help-echo "Undeclared variable or function 'pthiage'" cursor-sensor-functions #1#)) . -905) (undo-tree-id3854 . -1) (undo-tree-id3855 . -1) (#("s" 0 1 (fontified t help-echo "Undeclared variable or function 'pthisage'" cursor-sensor-functions #1#)) . -906) (undo-tree-id3856 . -1) (undo-tree-id3857 . -1) (#("." 0 1 (fontified t)) . -907) (undo-tree-id3858 . -1) (undo-tree-id3859 . -1) 908) nil (23394 7460 601546 0) 0 nil]) ((903 . 908) (t 23394 7445 117064 481000)) nil (23394 7460 601549 0) 0 nil]) ((317 . 318)) nil (23394 7445 86290 0) 0 nil]) ((#("w" 0 1 (fontified t help-echo "Undeclared variable or function 'barwidth'" cursor-sensor-functions #1#)) . -317) (undo-tree-id3791 . -1) (undo-tree-id3792 . -1) (undo-tree-id3793 . -1) (undo-tree-id3794 . 1) (undo-tree-id3795 . -1) (undo-tree-id3796 . -1) (undo-tree-id3797 . -1) (undo-tree-id3798 . -1) 318 (t 23394 7438 150924 440000)) nil (23394 7445 86349 0) 0 nil]) ((904 . 906)) nil (23394 7438 122776 0) 0 nil]) ((#("e" 0 1 (fontified t help-echo "Undeclared variable or function 'pae'" cursor-sensor-functions #1#)) . -904) (undo-tree-id3763 . -1) (undo-tree-id3764 . -1) (undo-tree-id3765 . -1) (undo-tree-id3766 . 1) (undo-tree-id3767 . -1) 905) nil (23394 7438 122818 0) 0 nil]) ((902 . 905)) nil (23394 7438 122820 0) 0 nil]) ((#("p" 0 1 (fontified t help-echo "Undeclared variable or function 'p'" cursor-sensor-functions #1#)) . -902) (undo-tree-id3768 . -1) (undo-tree-id3769 . -1) (undo-tree-id3770 . -1) (undo-tree-id3771 . 1) (undo-tree-id3772 . -1) (undo-tree-id3773 . -1) (undo-tree-id3774 . -1) (undo-tree-id3775 . -1) (#("a" 0 1 (fontified t help-echo "Undeclared variable or function 'pa'" cursor-sensor-functions #1#)) . -903) (undo-tree-id3776 . -1) (undo-tree-id3777 . -1) (undo-tree-id3778 . -1) (undo-tree-id3779 . -1) (undo-tree-id3780 . 1) (undo-tree-id3781 . -1) 904) nil (23394 7438 122852 0) 0 nil]) ((902 . 904) (901 . 903) (#("{" 0 1 (fontified nil help-echo "missing value after prop `className'" cursor-sensor-functions #1#)) . -901) (900 . 902)) nil (23394 7438 122855 0) 0 nil]) ((#("=" 0 1 (fontified t help-echo "missing value after prop `className'" cursor-sensor-functions #1#)) . -900) (undo-tree-id3782 . -1) (undo-tree-id3783 . -1) (undo-tree-id3784 . -1) (undo-tree-id3785 . 1) (undo-tree-id3786 . -1) 901) nil (23394 7438 122870 0) 0 nil]) ((896 . 901)) nil (23394 7438 122872 0) 0 nil]) ((#("n" 0 1 (fontified t font-lock-face rjsx-attr)) . -896) (undo-tree-id3787 . -1) (undo-tree-id3788 . -1) (undo-tree-id3789 . 1) (undo-tree-id3790 . -1) 897) nil (23394 7438 122880 0) 0 nil]) ((896 . 897) (t 23394 7420 83698 109000)) nil (23394 7438 122882 0) 0 nil]) ((323 . 326)) nil (23394 7420 55526 0) 0 nil]) ((316 . 322)) nil (23394 7420 55536 0) 0 nil]) ((#("t" 0 1 (fontified t help-echo "Undeclared variable or function 'bat'" cursor-sensor-functions #1#)) . -316) (undo-tree-id3752 . -1) (undo-tree-id3753 . -1) (undo-tree-id3754 . -1) (undo-tree-id3755 . 1) (undo-tree-id3756 . -1) 317) nil (23394 7420 55598 0) 0 nil]) ((314 . 317)) nil (23394 7420 55602 0) 0 nil]) ((312 . 314) (311 . 313) (#("{" 0 1 (fontified nil font-lock-face font-lock-string-face)) . -311) (310 . 312)) nil (23394 7420 55605 0) 0 nil]) ((#("4" 0 1 (fontified t font-lock-face font-lock-string-face)) . -310) (undo-tree-id3757 . -1) (undo-tree-id3758 . -1) (undo-tree-id3759 . -1) (undo-tree-id3760 . 1) (undo-tree-id3761 . -1) (undo-tree-id3762 . -1) 311) nil (23394 7420 55625 0) 0 nil]) ((310 . 311) (309 . 311) (#("`" 0 1 (fontified nil)) . -309) (309 . 310) (#("`" 0 1 (fontified nil)) . -309) (309 . 310)) nil (23394 7420 55630 0) 0 nil]) ((307 . 309) (t 23394 7396 746833 641000)) nil (23394 7420 55632 0) 0 nil]) ((#("  " 0 2 (fontified t)) . -241) (undo-tree-id3528 . -2) (undo-tree-id3529 . -2) 283) nil (23394 7396 720826 0) 0 nil]) ((282 . 283) (#("`" 0 1 (fontified nil)) . -282) (282 . 283) (#("`" 0 1 (fontified nil font-lock-face font-lock-string-face)) . -282) (282 . 283)) nil (23394 7396 720835 0) 0 nil]) ((278 . 279) (#("}" 0 1 (fontified nil help-echo "Undeclared variable or function 'barWidthrem'" cursor-sensor-functions #1#)) . -278) (278 . 279)) nil (23394 7396 720838 0) 0 nil]) ((#("`" 0 1 (fontified t font-lock-face font-lock-string-face help-echo "unterminated string literal" cursor-sensor-functions #1#)) . -278) (undo-tree-id3530 . -1) (undo-tree-id3531 . -1) (undo-tree-id3532 . 1) (undo-tree-id3533 . 1) (undo-tree-id3534 . 1) (undo-tree-id3535 . 1) (undo-tree-id3536 . 1) (undo-tree-id3537 . 1) (undo-tree-id3538 . 1) (undo-tree-id3539 . 1) (undo-tree-id3540 . 1) (undo-tree-id3541 . 1) (undo-tree-id3542 . 1) (undo-tree-id3543 . 1) (undo-tree-id3544 . 1) (undo-tree-id3545 . 1) (undo-tree-id3546 . 1) (undo-tree-id3547 . 1) (undo-tree-id3548 . -1) (undo-tree-id3549 . -1) (undo-tree-id3550 . -1) (undo-tree-id3551 . -1) (undo-tree-id3552 . -1) (undo-tree-id3553 . -1) (undo-tree-id3554 . -1) 279) nil (23394 7396 720889 0) 0 nil]) ((#("'" 0 1 (fontified t font-lock-face font-lock-string-face)) . 282) (undo-tree-id3555 . -1) (undo-tree-id3556 . 1) (undo-tree-id3557 . 1) (undo-tree-id3558 . 1)) nil (23394 7396 720896 0) 0 nil]) ((#("r" 0 1 (fontified t font-lock-face font-lock-string-face)) . -279) (undo-tree-id3559 . -1) (undo-tree-id3560 . -1) (undo-tree-id3561 . 1) (undo-tree-id3562 . -1) (undo-tree-id3563 . -1) (undo-tree-id3564 . -1) (#("e" 0 1 (fontified t font-lock-face font-lock-string-face)) . -280) (undo-tree-id3565 . -1) (undo-tree-id3566 . -1) (undo-tree-id3567 . 1) (undo-tree-id3568 . -1) 281) nil (23394 7396 720911 0) 0 nil]) ((279 . 281) (#("`" 0 1 (fontified nil)) . -278) (278 . 279) (#("`" 0 1 (fontified nil)) . -278) (278 . 279)) nil (23394 7396 720914 0) 0 nil]) ((275 . 278)) nil (23394 7396 720916 0) 0 nil]) ((272 . 275)) nil (23394 7396 720917 0) 0 nil]) ((270 . 272)) nil (23394 7396 720918 0) 0 nil]) ((#("w" 0 1 (fontified t help-echo "Undeclared variable or function 'w'" cursor-sensor-functions #1#)) . -270) (undo-tree-id3569 . -1) (undo-tree-id3570 . -1) (undo-tree-id3571 . -1) (undo-tree-id3572 . -1) (undo-tree-id3573 . -1) (undo-tree-id3574 . 1) (undo-tree-id3575 . -1) 271) nil (23394 7396 720927 0) 0 nil]) ((269 . 271) (#("{" 0 1 (fontified nil font-lock-face font-lock-string-face)) . -269) (268 . 270) (267 . 269) (#("`" 0 1 (fontified nil)) . -267) (267 . 268) (#("`" 0 1 (fontified nil)) . -267) (267 . 268)) nil (23394 7396 720931 0) 0 nil]) ((#("'" 0 1 (fontified t font-lock-face font-lock-string-face)) . -267) (undo-tree-id3576 . -1) (undo-tree-id3577 . -1) (undo-tree-id3578 . -1) (undo-tree-id3579 . -1) (undo-tree-id3580 . 1) (undo-tree-id3581 . 1) (undo-tree-id3582 . 1) (undo-tree-id3583 . 1) (undo-tree-id3584 . 1) (undo-tree-id3585 . 1) (undo-tree-id3586 . -1) (undo-tree-id3587 . -1) (undo-tree-id3588 . -1) (#("2" 0 1 (fontified t font-lock-face font-lock-string-face)) . -268) (undo-tree-id3589 . -1) (undo-tree-id3590 . -1) (undo-tree-id3591 . -1) (undo-tree-id3592 . -1) (undo-tree-id3593 . -1) (#("5" 0 1 (font-lock-face font-lock-string-face fontified t)) . -269) (undo-tree-id3594 . -1) (undo-tree-id3595 . -1) (undo-tree-id3596 . -1) 270) nil (23394 7396 720961 0) 0 nil]) ((211 . 213)) nil (23394 7396 720964 0) 0 nil]) ((207 . 211)) nil (23394 7396 720965 0) 0 nil]) ((#(":" 0 1 (fontified t help-echo "missing ; before statement" cursor-sensor-functions #1#)) . -207) (undo-tree-id3597 . -1) (undo-tree-id3598 . -1) (undo-tree-id3599 . -1) (undo-tree-id3600 . 1) (undo-tree-id3601 . -1) (undo-tree-id3602 . -1) (undo-tree-id3603 . -1) (undo-tree-id3604 . -1) 208) nil (23394 7396 720980 0) 0 nil]) ((199 . 208)) nil (23394 7396 720982 0) 0 nil]) ((#("bar" 0 3 (fontified t font-lock-face font-lock-variable-name-face help-echo "missing ; after statement" cursor-sensor-functions #1#)) . -199) (undo-tree-id3605 . -3) (undo-tree-id3606 . -3) (undo-tree-id3607 . -3) (undo-tree-id3608 . 3) (undo-tree-id3609 . -1) (undo-tree-id3610 . 2) (undo-tree-id3611 . -2) (undo-tree-id3612 . 1) (undo-tree-id3613 . -3) (undo-tree-id3614 . 3) (undo-tree-id3615 . 3) (undo-tree-id3616 . 3) (undo-tree-id3617 . 3) (undo-tree-id3618 . 3) (undo-tree-id3619 . 3) (undo-tree-id3620 . 3) (undo-tree-id3621 . 3) (undo-tree-id3622 . 3) (undo-tree-id3623 . 3) (undo-tree-id3624 . 3) (undo-tree-id3625 . 3) (undo-tree-id3626 . 3) (undo-tree-id3627 . 3) (undo-tree-id3628 . 3) (undo-tree-id3629 . 3) (undo-tree-id3630 . 3) (undo-tree-id3631 . 3) (undo-tree-id3632 . 3) (undo-tree-id3633 . -3) (undo-tree-id3634 . 3) (undo-tree-id3635 . -3) (undo-tree-id3636 . -3) 202) nil (23394 7396 721020 0) 0 nil]) ((193 . 199)) nil (23394 7396 721024 0) 0 nil]) ((#("v" 0 1 (fontified t help-echo #10="missing ; after statement" cursor-sensor-functions #1#)) . -193) (undo-tree-id3637 . -1) (undo-tree-id3638 . -1) (undo-tree-id3639 . 1) (undo-tree-id3640 . -1) (undo-tree-id3641 . -1) (undo-tree-id3642 . -1) (undo-tree-id3643 . -1) (undo-tree-id3644 . -1) (#("o" 0 1 (fontified t help-echo #10# cursor-sensor-functions #1#)) . -194) (undo-tree-id3645 . -1) (undo-tree-id3646 . -1) (undo-tree-id3647 . 1) (undo-tree-id3648 . -1) (undo-tree-id3649 . -1) (undo-tree-id3650 . -1) (#("n" 0 1 (fontified t help-echo #10# cursor-sensor-functions #1#)) . -195) (undo-tree-id3651 . -1) (undo-tree-id3652 . -1) (undo-tree-id3653 . 1) (undo-tree-id3654 . -1) 196) nil (23394 7396 721046 0) 0 nil]) ((193 . 196)) nil (23394 7396 721049 0) 0 nil]) ((195 . 196)) nil (23394 7396 721052 0) 0 nil]) ((193 . 195)) nil (23394 7396 721053 0) 0 nil]) ((192 . 193)) nil (23394 7396 721054 0) 0 nil]) ((219 . 222)) nil (23394 7396 721055 0) 0 nil]) ((274 . 276)) nil (23394 7396 721057 0) 0 nil]) ((#("t" 0 1 (fontified t font-lock-face js2-object-property help-echo "Undeclared variable or function 'widt'" cursor-sensor-functions #1#)) . -274) (undo-tree-id3655 . -1) (undo-tree-id3656 . -1) (undo-tree-id3657 . 1) (undo-tree-id3658 . -1) (undo-tree-id3659 . -1) (undo-tree-id3660 . -1) (undo-tree-id3661 . -1) (#("h" 0 1 (fontified t font-lock-face js2-object-property help-echo "Undeclared variable or function 'width'" cursor-sensor-functions #1#)) . -275) (undo-tree-id3662 . -1) (undo-tree-id3663 . -1) (undo-tree-id3664 . -1) (undo-tree-id3665 . 1) (undo-tree-id3666 . -1) 276) nil (23394 7396 721069 0) 0 nil]) ((274 . 276)) nil (23394 7396 721072 0) 0 nil]) ((#("i" 0 1 (fontified t font-lock-face js2-object-property help-echo "Undeclared variable or function 'widi'" cursor-sensor-functions #1#)) . -274) (undo-tree-id3667 . -1) (undo-tree-id3668 . -1) (undo-tree-id3669 . 1) (undo-tree-id3670 . -1) (undo-tree-id3671 . -1) (undo-tree-id3672 . -1) (undo-tree-id3673 . -1) (undo-tree-id3674 . -1) (undo-tree-id3675 . -1) (#("t" 0 1 (fontified t font-lock-face js2-object-property help-echo "Undeclared variable or function 'widit'" cursor-sensor-functions #1#)) . -275) (undo-tree-id3676 . -1) (undo-tree-id3677 . -1) (undo-tree-id3678 . 1) (undo-tree-id3679 . -1) (undo-tree-id3680 . -1) (undo-tree-id3681 . -1) (undo-tree-id3682 . -1) (#("h" 0 1 (fontified t font-lock-face js2-object-property help-echo "Undeclared variable or function 'widith'" cursor-sensor-functions #1#)) . -276) (undo-tree-id3683 . -1) (undo-tree-id3684 . -1) (undo-tree-id3685 . -1) (undo-tree-id3686 . 1) (undo-tree-id3687 . -1) 277) nil (23394 7396 721101 0) 0 nil]) ((273 . 277)) nil (23394 7396 721104 0) 0 nil]) ((#("t" 0 1 (fontified t font-lock-face js2-object-property help-echo "Undeclared variable or function 'wit'" cursor-sensor-functions #1#)) . -273) (undo-tree-id3688 . -1) (undo-tree-id3689 . -1) (undo-tree-id3690 . 1) (undo-tree-id3691 . -1) (undo-tree-id3692 . -1) (undo-tree-id3693 . -1) (undo-tree-id3694 . -1) (#("h" 0 1 (fontified t font-lock-face js2-object-property help-echo "Undeclared variable or function 'with'" cursor-sensor-functions #1#)) . -274) (undo-tree-id3695 . -1) (undo-tree-id3696 . -1) (undo-tree-id3697 . -1) (undo-tree-id3698 . 1) (undo-tree-id3699 . -1) 275) nil (23394 7396 721119 0) 0 nil]) ((272 . 275)) nil (23394 7396 721122 0) 0 nil]) ((271 . 272)) nil (23394 7396 721123 0) 0 nil]) ((#("s" 0 1 (fontified t font-lock-face js2-object-property help-echo "Undeclared variable or function 's'" cursor-sensor-functions #1#)) . -271) (undo-tree-id3700 . -1) (undo-tree-id3701 . -1) (undo-tree-id3702 . -1) (undo-tree-id3703 . 1) (undo-tree-id3704 . -1) 272) nil (23394 7396 721130 0) 0 nil]) ((271 . 272)) nil (23394 7396 721132 0) 0 nil]) ((255 . 256)) nil (23394 7396 721133 0) 0 nil]) ((266 . 270) (267 . 269) (#("    " 0 4 (fontified nil face (rainbow-delimiters-depth-3-face))) . 266) (266 . 270) (265 . 267)) nil (23394 7396 721136 0) 0 nil]) ((264 . 266) (#("{" 0 1 (fontified nil)) . -264) (258 . 265)) nil (23394 7396 721138 0) 0 nil]) ((#("t" 0 1 (fontified t help-echo "missing } after property list" cursor-sensor-functions #1#)) . -258) (undo-tree-id3705 . -1) (undo-tree-id3706 . -1) (undo-tree-id3707 . -1) (undo-tree-id3708 . 1) (undo-tree-id3709 . -1) (undo-tree-id3710 . -1) (undo-tree-id3711 . -1) (undo-tree-id3712 . -1) (undo-tree-id3713 . -1) (undo-tree-id3714 . -1) (undo-tree-id3715 . -1) (undo-tree-id3716 . -1) (undo-tree-id3717 . -1) (undo-tree-id3718 . -1) (#("a" 0 1 (fontified t help-echo "missing } after property list" cursor-sensor-functions #1#)) . -259) (undo-tree-id3719 . -1) (undo-tree-id3720 . -1) (undo-tree-id3721 . -1) (undo-tree-id3722 . 1) (undo-tree-id3723 . -1) (undo-tree-id3724 . -1) (undo-tree-id3725 . -1) (undo-tree-id3726 . -1) (undo-tree-id3727 . -1) (undo-tree-id3728 . -1) (undo-tree-id3729 . -1) (undo-tree-id3730 . -1) (#("b" 0 1 (fontified t help-echo "missing } after property list" cursor-sensor-functions #1#)) . -260) (undo-tree-id3731 . -1) (undo-tree-id3732 . -1) (undo-tree-id3733 . -1) (undo-tree-id3734 . -1) (undo-tree-id3735 . -1) (undo-tree-id3736 . -1) (undo-tree-id3737 . -1) (undo-tree-id3738 . 1) (undo-tree-id3739 . -1) (undo-tree-id3740 . -1) (undo-tree-id3741 . -1) 261) nil (23394 7396 721189 0) 0 nil]) ((258 . 261)) nil (23394 7396 721194 0) 0 nil]) ((255 . 258)) nil (23394 7396 721195 0) 0 nil]) ((814 . 820)) nil (23394 7396 721196 0) 0 nil]) ((#(" " 0 1 (fontified t)) . -814) (undo-tree-id3742 . -1) (undo-tree-id3743 . -1) (undo-tree-id3744 . -1) (undo-tree-id3745 . 1) (undo-tree-id3746 . -1) 815) nil (23394 7396 721203 0) 0 nil]) ((813 . 815)) nil (23394 7396 721205 0) 0 nil]) ((#("c" 0 1 (fontified t font-lock-face rjsx-tag)) . -813) (undo-tree-id3747 . -1) (undo-tree-id3748 . -1) (undo-tree-id3749 . -1) (undo-tree-id3750 . 1) (undo-tree-id3751 . -1) 814) nil (23394 7396 721215 0) 0 nil]) ((811 . 814)) nil (23394 7396 721217 0) 0 nil]) ((nil fontified t 810 . 813) (nil font-lock-face rjsx-text 810 . 813) (810 . 813)) nil (23394 7396 721219 0) 0 nil]) ((801 . 810) (t 23394 6959 888474 700000)) nil (23394 7396 721221 0) 0 nil]) ((#(";" 0 1 (fontified t help-echo "missing } after property list" cursor-sensor-functions #1#)) . -378) (undo-tree-id3516 . -1) (undo-tree-id3517 . -1) (undo-tree-id3518 . -1) (undo-tree-id3519 . 1) (undo-tree-id3520 . -1) (undo-tree-id3521 . -1) (undo-tree-id3522 . 1) (undo-tree-id3523 . 1) (undo-tree-id3524 . -1) (undo-tree-id3525 . -1) (undo-tree-id3526 . -1) (undo-tree-id3527 . -1) 379 (t 23394 6956 558789 764000)) nil (23394 6959 868089 0) 0 nil]) ((#("
" 0 1 (font-lock-face rjsx-text syntax-table #9# fontified t)) . 881) (undo-tree-id3485 . 1) (undo-tree-id3486 . 1) (undo-tree-id3487 . 1) (undo-tree-id3488 . 1) (undo-tree-id3489 . 1) (undo-tree-id3490 . 1) (undo-tree-id3491 . 1) (undo-tree-id3492 . 1) (undo-tree-id3493 . 1) (undo-tree-id3494 . 1) (undo-tree-id3495 . 1) (undo-tree-id3496 . 1) (undo-tree-id3497 . 1) (undo-tree-id3498 . 1) (undo-tree-id3499 . 1) (undo-tree-id3500 . 1) (undo-tree-id3501 . 1) (undo-tree-id3502 . 1) (undo-tree-id3503 . 1) (undo-tree-id3504 . 1) (undo-tree-id3505 . 1) (undo-tree-id3506 . 1) (undo-tree-id3507 . 1) (undo-tree-id3508 . 1) (undo-tree-id3509 . 1) (undo-tree-id3510 . 1) (undo-tree-id3511 . 1) (undo-tree-id3512 . 1) (undo-tree-id3513 . 1) (undo-tree-id3514 . 1) (undo-tree-id3515 . -1) (t 23394 6953 467313 386000)) nil (23394 6956 540632 0) 0 nil]) ((878 . 879) (#(")" 0 1 (fontified nil face (rainbow-delimiters-depth-6-face))) . -878) (878 . 879)) nil (23394 6953 450103 0) 0 nil]) ((#("_" 0 1 (fontified t help-echo "missing ) after argument list" cursor-sensor-functions #1#)) . -878) (undo-tree-id3478 . -1) (undo-tree-id3479 . -1) (undo-tree-id3480 . -1) (undo-tree-id3481 . 1) (undo-tree-id3482 . -1) 879) nil (23394 6953 450150 0) 0 nil]) ((878 . 879)) nil (23394 6953 450153 0) 0 nil]) ((#(")" 0 1 (fontified t help-echo "syntax error" cursor-sensor-functions #1# face (rainbow-delimiters-depth-6-face))) . 841) (undo-tree-id3483 . -1) (undo-tree-id3484 . 1)) nil (23394 6953 450159 0) 0 nil]) ((840 . 842) (#("(" 0 1 (fontified nil)) . -840) (840 . 841) (t 23394 6945 230403 875000)) nil (23394 6953 450162 0) 0 nil]) ((#("                                            " 0 44 (fontified t font-lock-face rjsx-text syntax-table #9#)) . -879) (undo-tree-id3436 . -44) (undo-tree-id3437 . -44) (undo-tree-id3438 . -44) (undo-tree-id3439 . -44) (undo-tree-id3440 . -44) (undo-tree-id3441 . -44) (undo-tree-id3442 . -44) (undo-tree-id3443 . -44) (undo-tree-id3444 . -44) (undo-tree-id3445 . -44) (undo-tree-id3446 . -44) (undo-tree-id3447 . -44) (undo-tree-id3448 . -44) (undo-tree-id3449 . -44) 923) nil (23394 6945 213902 0) 0 nil]) ((#("/" 0 1 (rjsx-class self-closing-slash fontified t font-lock-face rjsx-text syntax-table #9#)) . -923) (undo-tree-id3450 . -1) (undo-tree-id3451 . -1) (undo-tree-id3452 . -1) (undo-tree-id3453 . -1) (undo-tree-id3454 . -1) (undo-tree-id3455 . 1) (undo-tree-id3456 . 1) (undo-tree-id3457 . 1) (undo-tree-id3458 . 1) (undo-tree-id3459 . 1) (undo-tree-id3460 . 1) (undo-tree-id3461 . 1) (undo-tree-id3462 . 1) (undo-tree-id3463 . 1) (undo-tree-id3464 . 1) (undo-tree-id3465 . 1) (undo-tree-id3466 . -1) (undo-tree-id3467 . -1) (undo-tree-id3468 . -1) (#(">" 0 1 (help-echo "syntax error" cursor-sensor-functions #1# fontified t)) . -924) (undo-tree-id3469 . -1) (undo-tree-id3470 . -1) (undo-tree-id3471 . -1) (undo-tree-id3472 . -1) (undo-tree-id3473 . 1) (undo-tree-id3474 . 1) (undo-tree-id3475 . -1) (undo-tree-id3476 . -1) (undo-tree-id3477 . -1) 925 (t 23394 6943 245818 217000)) nil (23394 6945 213972 0) 0 nil]) ((875 . 876)) nil (23394 6943 228688 0) 0 nil]) ((874 . 875)) nil (23394 6943 228700 0) 0 nil]) ((#("
" 0 1 (fontified t help-echo "missing `}' after expression" cursor-sensor-functions #1#)) . -874) (undo-tree-id3404 . -1) (undo-tree-id3405 . -1) (undo-tree-id3406 . -1) (undo-tree-id3407 . 1) (undo-tree-id3408 . 1) (undo-tree-id3409 . -1) (undo-tree-id3410 . -1) (undo-tree-id3411 . -1) (undo-tree-id3412 . -1) (undo-tree-id3413 . -1) (undo-tree-id3414 . 1) (undo-tree-id3415 . 1) (undo-tree-id3416 . -1) (undo-tree-id3417 . -1) (undo-tree-id3418 . -1) (undo-tree-id3419 . -1) (#(" " 0 1 (fontified t help-echo "missing `}' after expression" cursor-sensor-functions #1#)) . -875) (undo-tree-id3420 . -1) (undo-tree-id3421 . -1) (undo-tree-id3422 . -1) (undo-tree-id3423 . -1) (undo-tree-id3424 . -1) (undo-tree-id3425 . -1) (undo-tree-id3426 . -1) (undo-tree-id3427 . -1) (undo-tree-id3428 . -1) 876) nil (23394 6943 228812 0) 0 nil]) ((#("                                           " 0 43 (fontified t help-echo "missing `}' after expression" cursor-sensor-functions #1#)) . -876) (undo-tree-id3429 . -43) (undo-tree-id3430 . -43) (undo-tree-id3431 . -43) (undo-tree-id3432 . -43) (undo-tree-id3433 . -43) (undo-tree-id3434 . -43) (undo-tree-id3435 . -43) 919 (t 23394 6925 910338 676000)) nil (23394 6943 228841 0) 0 nil]) ((921 . 966)) nil (23394 6925 894078 0) 0 nil]) ((#("  " 0 2 (help-echo #11="missing `}' after expression" cursor-sensor-functions #1# fontified nil)) . -919) (undo-tree-id3388 . -2) (undo-tree-id3389 . -2) (undo-tree-id3390 . -2) (undo-tree-id3391 . -2) (undo-tree-id3392 . -2) (921 . 922) (#(")" 0 1 (help-echo #11# cursor-sensor-functions #1# fontified nil)) . -921) (921 . 922)) nil (23394 6925 894108 0) 0 nil]) ((921 . 922) (#("}" 0 1 (fontified nil help-echo "missing `}' after expression" cursor-sensor-functions #1#)) . -921) (921 . 922)) nil (23394 6925 894113 0) 0 nil]) ((874 . 921)) nil (23394 6925 894115 0) 0 nil]) ((#("{" 0 1 (fontified t help-echo "syntax error" cursor-sensor-functions #1# face (rainbow-delimiters-depth-6-face))) . -839) (undo-tree-id3393 . -1) (undo-tree-id3394 . -1) (undo-tree-id3395 . -1) (undo-tree-id3396 . 1) (undo-tree-id3397 . -1) (undo-tree-id3398 . -1) (undo-tree-id3399 . -1) (undo-tree-id3400 . -1) (undo-tree-id3401 . -1) (undo-tree-id3402 . -1) (undo-tree-id3403 . -1) 840) nil (23394 6925 894137 0) 0 nil] [nil nil ((841 . 853) (#(" " 0 1 (fontified nil help-echo "syntax error" cursor-sensor-functions #1#)) . 841) (undo-tree-id3312 . 1) (undo-tree-id3313 . -1) (undo-tree-id3314 . 1) (undo-tree-id3315 . 1) (undo-tree-id3316 . 1) (undo-tree-id3317 . 1) (undo-tree-id3318 . 1) (undo-tree-id3319 . 1) (undo-tree-id3320 . 1) (undo-tree-id3321 . 1) (undo-tree-id3322 . 1) (undo-tree-id3323 . 1) (undo-tree-id3324 . 1) (840 . 841)) ((#("
" 0 1 (fontified t help-echo #12="syntax error" cursor-sensor-functions #1#)) . 840) (undo-tree-id3378 . -1) (undo-tree-id3379 . -1) (undo-tree-id3380 . -1) (undo-tree-id3381 . 1) (undo-tree-id3382 . 1) (undo-tree-id3383 . -1) (841 . 842) (#("            " 0 12 (fontified t help-echo #12# cursor-sensor-functions #1#)) . 841) (undo-tree-id3384 . -12) (undo-tree-id3385 . -12) (undo-tree-id3386 . -12) (undo-tree-id3387 . -12)) (23394 6913 385970 0) 0 nil]) ((#("}" 0 1 (fontified t help-echo "missing `}' after expression" cursor-sensor-functions #1# face (rainbow-delimiters-depth-6-face))) . 840) (undo-tree-id3325 . 1) (undo-tree-id3326 . 1) (undo-tree-id3327 . 1) (undo-tree-id3328 . 1) (undo-tree-id3329 . 1) (undo-tree-id3330 . 1) (undo-tree-id3331 . 1)) nil (23394 6913 386808 0) 0 nil]) ((#("[" 0 1 (fontified t help-echo "missing ] after element list" cursor-sensor-functions #1# face (rainbow-delimiters-depth-7-face))) . -840) (undo-tree-id3332 . -1) (undo-tree-id3333 . -1) (undo-tree-id3334 . 1) (undo-tree-id3335 . -1) (undo-tree-id3336 . -1) (undo-tree-id3337 . -1) (undo-tree-id3338 . -1) 841) nil (23394 6913 386028 0) 0 nil]) ((#("]" 0 1 (fontified t help-echo "missing `}' after expression" cursor-sensor-functions #1# face (rainbow-delimiters-depth-7-face))) . 841) (undo-tree-id3339 . -1) (undo-tree-id3340 . -1) (undo-tree-id3341 . 1)) nil (23394 6913 386037 0) 0 nil]) ((840 . 842) (#("[" 0 1 (fontified nil help-echo "missing `}' after expression" cursor-sensor-functions #1# face (rainbow-delimiters-depth-6-face))) . -840) (840 . 841) (840 . 841) (nil prettify-symbols-start 837 839 . 840) (nil prettify-symbols-end 839 839 . 840) (nil fontified nil 839 . 840) (nil help-echo #13="missing `}' after expression" 839 . 840) (nil cursor-sensor-functions #1# 839 . 840) (839 . 840) (#("{" 0 1 (prettify-symbols-start 837 prettify-symbols-end 839 fontified nil help-echo #13# cursor-sensor-functions #1#)) . -839) (839 . 840)) nil (23394 6913 386046 0) 0 nil]) ((836 . 837)) nil (23394 6913 386050 0) 0 nil]) ((838 . 839)) nil (23394 6913 386052 0) 0 nil]) ((837 . 838)) nil (23394 6913 386056 0) 0 nil]) ((836 . 837)) nil (23394 6913 386058 0) 0 nil]) ((#("," 0 1 (fontified t help-echo "missing `}' after expression" cursor-sensor-functions #1#)) . -835) (undo-tree-id3342 . -1) (undo-tree-id3343 . -1) (undo-tree-id3344 . -1) (undo-tree-id3345 . -1) (undo-tree-id3346 . 1) (undo-tree-id3347 . -1) 836) nil (23394 6913 386081 0) 0 nil]) ((834 . 836)) nil (23394 6913 386085 0) 0 nil]) ((832 . 834) (831 . 833) (#("(" 0 1 (fontified nil help-echo "missing `}' after expression" cursor-sensor-functions #1# face (rainbow-delimiters-depth-5-face))) . -831) (830 . 832) (#("(" 0 1 (fontified nil font-lock-face js2-object-property-access help-echo "missing `}' after expression" cursor-sensor-functions #1#)) . -830) (829 . 831)) nil (23394 6913 386090 0) 0 nil]) ((827 . 829)) nil (23394 6913 386094 0) 0 nil]) ((#("n" 0 1 (fontified t font-lock-face js2-object-property-access help-echo "missing `}' after expression" cursor-sensor-functions #1#)) . -827) (undo-tree-id3348 . -1) (undo-tree-id3349 . -1) (undo-tree-id3350 . -1) (undo-tree-id3351 . 1) (undo-tree-id3352 . -1) (undo-tree-id3353 . -1) (undo-tree-id3354 . -1) (undo-tree-id3355 . -1) (undo-tree-id3356 . -1) (undo-tree-id3357 . -1) (undo-tree-id3358 . -1) (#("m" 0 1 (fontified t font-lock-face js2-object-property-access help-echo "missing `}' after expression" cursor-sensor-functions #1#)) . -828) (undo-tree-id3359 . -1) (undo-tree-id3360 . -1) (undo-tree-id3361 . -1) (undo-tree-id3362 . 1) (undo-tree-id3363 . -1) 829) nil (23394 6913 386140 0) 0 nil]) ((828 . 829)) nil (23394 6913 386146 0) 0 nil]) ((#("m" 0 1 (fontified t font-lock-face js2-object-property-access help-echo "missing `}' after expression" cursor-sensor-functions #1#)) . -828) (undo-tree-id3364 . -1) (undo-tree-id3365 . -1) (undo-tree-id3366 . -1) (undo-tree-id3367 . 1) (undo-tree-id3368 . -1) (undo-tree-id3369 . -1) (undo-tree-id3370 . -1) (#("a" 0 1 (fontified t font-lock-face js2-object-property-access help-echo "missing `}' after expression" cursor-sensor-functions #1#)) . -829) (undo-tree-id3371 . -1) (undo-tree-id3372 . -1) (undo-tree-id3373 . -1) (undo-tree-id3374 . 1) (undo-tree-id3375 . -1) 830) nil (23394 6913 386174 0) 0 nil]) ((812 . 830)) nil (23394 6913 386178 0) 0 nil]) ((#("}" 0 1 (fontified t help-echo "empty `{}' expression" cursor-sensor-functions #1# face (rainbow-delimiters-depth-4-face))) . 812) (undo-tree-id3376 . -1) (undo-tree-id3377 . 1)) nil (23394 6913 386188 0) 0 nil]) ((812 . 813) (nil font-lock-face rjsx-text 811 . 812) (nil fontified nil 811 . 812) (811 . 812) (#("{" 0 1 (font-lock-face rjsx-text fontified nil)) . -811) (811 . 812) (t 23394 6871 442898 155000)) nil (23394 6913 386194 0) 0 nil]) ((#("," 0 1 (fontified t)) . -377) (undo-tree-id3300 . -1) (undo-tree-id3301 . -1) (undo-tree-id3302 . 1) (undo-tree-id3303 . -1) (undo-tree-id3304 . -1) (undo-tree-id3305 . -1) (undo-tree-id3306 . -1) (#("8" 0 1 (fontified t)) . -378) (undo-tree-id3307 . -1) (undo-tree-id3308 . -1) (undo-tree-id3309 . 1) (undo-tree-id3310 . -1) (undo-tree-id3311 . -1) 379 (t 23394 6869 591312 988000)) nil (23394 6871 429184 0) 0 nil]) ((#("  " 0 2 (fontified t)) . -417) (undo-tree-id3133 . -2) 381) nil (23394 6869 574531 0) 0 nil]) ((380 . 381)) nil (23394 6869 574536 0) 0 nil]) ((376 . 379)) nil (23394 6869 574538 0) 0 nil]) ((362 . 376)) nil (23394 6869 574549 0) 0 nil]) ((#("1" 0 1 (fontified t)) . -362) (undo-tree-id3134 . -1) (undo-tree-id3135 . -1) (undo-tree-id3136 . -1) (undo-tree-id3137 . 1) (undo-tree-id3138 . -1) (undo-tree-id3139 . -1) (undo-tree-id3140 . -1) (undo-tree-id3141 . -1) (undo-tree-id3142 . -1) (#("," 0 1 (fontified t)) . -363) (undo-tree-id3143 . -1) (undo-tree-id3144 . -1) (undo-tree-id3145 . -1) (undo-tree-id3146 . 1) (undo-tree-id3147 . -1) (undo-tree-id3148 . -1) (undo-tree-id3149 . -1) (#("3" 0 1 (fontified t)) . -364) (undo-tree-id3150 . -1) (undo-tree-id3151 . -1) (undo-tree-id3152 . -1) (undo-tree-id3153 . 1) (undo-tree-id3154 . -1) 365) nil (23394 6869 574624 0) 0 nil]) ((362 . 365) (361 . 363) (#("[" 0 1 (fontified nil)) . -361) (361 . 362)) nil (23394 6869 574631 0) 0 nil]) ((#("{" 0 1 (fontified nil face (rainbow-delimiters-depth-4-face))) . -361) (undo-tree-id3155 . -1) (undo-tree-id3156 . -1) (undo-tree-id3157 . 1) (undo-tree-id3158 . -1) (#("}" 0 1 (fontified t face (rainbow-delimiters-depth-4-face))) . 362) (undo-tree-id3159 . 1)) nil (23394 6869 574641 0) 0 nil]) ((361 . 363) (#("{" 0 1 (fontified nil)) . -361) (360 . 362)) nil (23394 6869 574645 0) 0 nil]) ((359 . 360)) nil (23394 6869 574647 0) 0 nil]) ((#("[" 0 1 (fontified nil help-echo "missing : after property id" cursor-sensor-functions #1# face (rainbow-delimiters-depth-4-face))) . -359) (undo-tree-id3160 . -1) (undo-tree-id3161 . -1) (undo-tree-id3162 . -1) (undo-tree-id3163 . -1) (undo-tree-id3164 . -1) (undo-tree-id3165 . -1) (undo-tree-id3166 . -1) (undo-tree-id3167 . -1) (undo-tree-id3168 . -1) (undo-tree-id3169 . -1) (undo-tree-id3170 . -1) (undo-tree-id3171 . -1) (undo-tree-id3172 . -1) (undo-tree-id3173 . -1) (undo-tree-id3174 . 1) (undo-tree-id3175 . -1) (#("]" 0 1 (fontified t help-echo "missing } after property list" cursor-sensor-functions #1# face (rainbow-delimiters-depth-4-face))) . 360) (undo-tree-id3176 . -1) (undo-tree-id3177 . -1) (undo-tree-id3178 . -1) (undo-tree-id3179 . -1) (undo-tree-id3180 . -1) (undo-tree-id3181 . 1)) nil (23394 6869 574702 0) 0 nil]) ((359 . 361) (#("[" 0 1 (fontified nil font-lock-face js2-object-property help-echo "Undeclared variable or function 'tab'" cursor-sensor-functions #1#)) . -359) (356 . 360)) nil (23394 6869 574707 0) 0 nil]) ((#("song" 0 4 (fontified t font-lock-face js2-object-property help-echo "Undeclared variable or function 'song'" cursor-sensor-functions #1#)) . -356) (undo-tree-id3182 . -4) (undo-tree-id3183 . -4) (undo-tree-id3184 . -4) (undo-tree-id3185 . 4) (undo-tree-id3186 . -1) (undo-tree-id3187 . 3) (undo-tree-id3188 . -2) (undo-tree-id3189 . 2) (undo-tree-id3190 . -3) (undo-tree-id3191 . 1) (undo-tree-id3192 . -4) (undo-tree-id3193 . -4) (undo-tree-id3194 . -4) (undo-tree-id3195 . -4) (undo-tree-id3196 . -4) (undo-tree-id3197 . -4) 360) nil (23394 6869 574732 0) 0 nil]) ((#("[" 0 1 (fontified nil help-echo "missing : after property id" cursor-sensor-functions #1# face (rainbow-delimiters-depth-4-face))) . -360) (undo-tree-id3198 . -1) (undo-tree-id3199 . -1) (undo-tree-id3200 . -1) (undo-tree-id3201 . -1) (undo-tree-id3202 . -1) (undo-tree-id3203 . -1) (undo-tree-id3204 . -1) (undo-tree-id3205 . -1) (undo-tree-id3206 . -1) (undo-tree-id3207 . -1) (undo-tree-id3208 . -1) (undo-tree-id3209 . -1) (undo-tree-id3210 . -1) (undo-tree-id3211 . -1) (undo-tree-id3212 . 1) (undo-tree-id3213 . -1) (#("]" 0 1 (fontified t help-echo "missing } after property list" cursor-sensor-functions #1# face (rainbow-delimiters-depth-4-face))) . 361) (undo-tree-id3214 . -1) (undo-tree-id3215 . -1) (undo-tree-id3216 . -1) (undo-tree-id3217 . -1) (undo-tree-id3218 . -1) (undo-tree-id3219 . 1)) nil (23394 6869 574781 0) 0 nil]) ((360 . 362) (#("[" 0 1 (fontified nil font-lock-face js2-object-property help-echo "Undeclared variable or function 'song'" cursor-sensor-functions #1#)) . -360) (360 . 361)) nil (23394 6869 574786 0) 0 nil]) ((#("{" 0 1 (fontified nil help-echo "missing : after property id" cursor-sensor-functions #1# face (rainbow-delimiters-depth-4-face))) . -360) (undo-tree-id3220 . -1) (undo-tree-id3221 . -1) (undo-tree-id3222 . -1) (undo-tree-id3223 . -1) (undo-tree-id3224 . -1) (undo-tree-id3225 . 1) (undo-tree-id3226 . -1) (#("}" 0 1 (fontified t help-echo "missing ; after statement" cursor-sensor-functions #1# face (rainbow-delimiters-depth-4-face))) . 361) (undo-tree-id3227 . -1) (undo-tree-id3228 . 1)) nil (23394 6869 574808 0) 0 nil]) ((360 . 362) (#("{" 0 1 (fontified nil font-lock-face js2-object-property help-echo "Undeclared variable or function 'song'" cursor-sensor-functions #1#)) . -360) (356 . 361)) nil (23394 6869 574812 0) 0 nil]) ((#("t" 0 1 (fontified t font-lock-face js2-object-property help-echo "Undeclared variable or function 't'" cursor-sensor-functions #1#)) . -356) (undo-tree-id3229 . -1) (undo-tree-id3230 . -1) (undo-tree-id3231 . -1) (undo-tree-id3232 . 1) (undo-tree-id3233 . -1) (undo-tree-id3234 . -1) (undo-tree-id3235 . -1) (undo-tree-id3236 . -1) (undo-tree-id3237 . -1) (undo-tree-id3238 . -1) (undo-tree-id3239 . -1) (undo-tree-id3240 . -1) (#("h" 0 1 (fontified t font-lock-face js2-object-property help-echo "Undeclared variable or function 'th'" cursor-sensor-functions #1#)) . -357) (undo-tree-id3241 . -1) (undo-tree-id3242 . -1) (undo-tree-id3243 . -1) (undo-tree-id3244 . 1) (undo-tree-id3245 . -1) (undo-tree-id3246 . -1) (undo-tree-id3247 . -1) (undo-tree-id3248 . -1) (undo-tree-id3249 . -1) (undo-tree-id3250 . -1) (#("i" 0 1 (fontified t font-lock-face js2-object-property help-echo "Undeclared variable or function 'thi'" cursor-sensor-functions #1#)) . -358) (undo-tree-id3251 . -1) (undo-tree-id3252 . -1) (undo-tree-id3253 . -1) (undo-tree-id3254 . 1) (undo-tree-id3255 . -1) (undo-tree-id3256 . -1) (undo-tree-id3257 . -1) (undo-tree-id3258 . -1) (#("s" 0 1 (fontified t font-lock-face js2-object-property help-echo "Undeclared variable or function 'this'" cursor-sensor-functions #1#)) . -359) (undo-tree-id3259 . -1) (undo-tree-id3260 . -1) (undo-tree-id3261 . -1) (undo-tree-id3262 . -1) (undo-tree-id3263 . 1) (undo-tree-id3264 . -1) (undo-tree-id3265 . -1) 360) nil (23394 6869 574872 0) 0 nil]) ((356 . 360)) nil (23394 6869 574879 0) 0 nil]) ((350 . 356)) nil (23394 6869 574881 0) 0 nil]) ((#("      stringPositions: this.initStrings(0.1)" 0 6 (fontified t) 6 21 (fontified t font-lock-face js2-object-property) 21 22 (fontified t) 22 23 (fontified t) 23 27 (fontified t font-lock-face font-lock-builtin-face) 27 28 (fontified t) 28 39 (fontified t font-lock-face js2-function-call) 39 40 (fontified t face (rainbow-delimiters-depth-4-face)) 40 43 (fontified t) 43 44 (fontified t face (rainbow-delimiters-depth-4-face))) . 350) (undo-tree-id3266 . 42) (undo-tree-id3267 . -2) (undo-tree-id3268 . 42) (undo-tree-id3269 . 42) (undo-tree-id3270 . -2) (undo-tree-id3271 . 42) (undo-tree-id3272 . 44) (undo-tree-id3273 . -44)) nil (23394 6869 574901 0) 0 nil]) ((#("    console.log(this.state.stringPositions);" 0 4 (fontified t) 4 5 (fontified t) 5 6 (fontified t) 6 11 (fontified t) 11 12 (fontified t) 12 15 (fontified t font-lock-face js2-function-call) 15 16 (fontified t face (rainbow-delimiters-depth-3-face)) 16 20 (fontified t font-lock-face font-lock-builtin-face) 20 21 (fontified t) 21 26 (fontified t font-lock-face js2-object-property-access) 26 27 (fontified t) 27 42 (fontified t font-lock-face js2-object-property-access) 42 43 (fontified t face (rainbow-delimiters-depth-3-face)) 43 44 (fontified t)) . 402) (undo-tree-id3274 . 42) (undo-tree-id3275 . -2) (undo-tree-id3276 . 44) (undo-tree-id3277 . 42) (undo-tree-id3278 . 44) (undo-tree-id3279 . 44) (undo-tree-id3280 . 44) (undo-tree-id3281 . 44) (undo-tree-id3282 . -44)) nil (23394 6869 574918 0) 0 nil]) ((#("
" 0 1 (fontified t)) . 402) (undo-tree-id3283 . 1) (undo-tree-id3284 . 1) (undo-tree-id3285 . 1) (undo-tree-id3286 . -1)) nil (23394 6869 574930 0) 0 nil]) ((474 . 477)) nil (23394 6869 574936 0) 0 nil]) ((nil rear-nonsticky nil 473 . 474) (290 . 474)) nil (23394 6869 574938 0) 0 nil]) ((#("
" 0 1 (fontified t font-lock-face rjsx-text syntax-table #9#)) . 678) (undo-tree-id3287 . 1) (undo-tree-id3288 . 1) (undo-tree-id3289 . 1) (undo-tree-id3290 . 1) (undo-tree-id3291 . 1) (undo-tree-id3292 . 1) (undo-tree-id3293 . 1) (undo-tree-id3294 . 1) (undo-tree-id3295 . -1)) nil (23394 6869 574962 0) 0 nil]) ((#("        " 0 8 (fontified t font-lock-face rjsx-text syntax-table #9#)) . 678) (undo-tree-id3296 . -8) (undo-tree-id3297 . -8) (undo-tree-id3298 . 8) (undo-tree-id3299 . -8)) nil (23394 6869 574978 0) 0 nil]) ((677 . 686) (t 23394 6488 240843 536000)) nil (23394 6869 574980 0) 0 nil]) ((#("
" 0 1 (fontified t)) . 252) (undo-tree-id3066 . 1) (undo-tree-id3067 . 1) (undo-tree-id3068 . 1) (undo-tree-id3069 . 1) (undo-tree-id3070 . 1) (undo-tree-id3071 . 1) (undo-tree-id3072 . 1) (undo-tree-id3073 . 1) (undo-tree-id3074 . 1) (undo-tree-id3075 . 1) (undo-tree-id3076 . 1) (undo-tree-id3077 . 1) (undo-tree-id3078 . 1) (undo-tree-id3079 . 1) (undo-tree-id3080 . 1) (undo-tree-id3081 . 1) (undo-tree-id3082 . 1) (undo-tree-id3083 . -1)) nil (23394 6488 228212 0) 0 nil]) ((#("    margin: \"5rem\"" 0 4 (fontified t) 4 10 (fontified t font-lock-face js2-object-property) 10 12 (fontified t) 12 18 (fontified t font-lock-face font-lock-string-face)) . 252) (undo-tree-id3084 . 18) (undo-tree-id3085 . 18) (undo-tree-id3086 . 18) (undo-tree-id3087 . 18) (undo-tree-id3088 . 18) (undo-tree-id3089 . 18) (undo-tree-id3090 . 18) (undo-tree-id3091 . 18) (undo-tree-id3092 . 18) (undo-tree-id3093 . 18) (undo-tree-id3094 . 18) (undo-tree-id3095 . 18) (undo-tree-id3096 . 18) (undo-tree-id3097 . 18) (undo-tree-id3098 . 18) (undo-tree-id3099 . -18)) nil (23394 6488 228250 0) 0 nil]) ((#("
" 0 1 (fontified t)) . 252) (undo-tree-id3100 . 1) (undo-tree-id3101 . 1) (undo-tree-id3102 . 1) (undo-tree-id3103 . 1) (undo-tree-id3104 . 1) (undo-tree-id3105 . 1) (undo-tree-id3106 . 1) (undo-tree-id3107 . 1) (undo-tree-id3108 . 1) (undo-tree-id3109 . 1) (undo-tree-id3110 . 1) (undo-tree-id3111 . 1) (undo-tree-id3112 . 1) (undo-tree-id3113 . -1)) nil (23394 6488 228277 0) 0 nil]) ((#("    height: '2rem'," 0 4 (fontified t) 4 10 (fontified t font-lock-face js2-object-property) 10 11 (fontified t) 11 12 (fontified t) 12 17 (fontified t font-lock-face font-lock-string-face) 17 18 (fontified t font-lock-face font-lock-string-face) 18 19 (fontified t)) . 252) (undo-tree-id3114 . -11) (undo-tree-id3115 . -4) (undo-tree-id3116 . -13) (undo-tree-id3117 . -19) (undo-tree-id3118 . 8) (undo-tree-id3119 . -11) (undo-tree-id3120 . -11) (undo-tree-id3121 . 8) (undo-tree-id3122 . 8) (undo-tree-id3123 . -11) (undo-tree-id3124 . 19) (undo-tree-id3125 . 8) (undo-tree-id3126 . 19) (undo-tree-id3127 . 19) (undo-tree-id3128 . 19) (undo-tree-id3129 . 19) (undo-tree-id3130 . 19) (undo-tree-id3131 . 19) (undo-tree-id3132 . -19) (t 23394 5352 478634 693000)) nil (23394 6488 228307 0) 0 nil]) ((285 . 286)) nil (23394 5352 462324 0) 0 nil]) ((#("1" 0 1 (fontified t font-lock-face font-lock-string-face)) . -285) (undo-tree-id3047 . -1) (undo-tree-id3048 . -1) (undo-tree-id3049 . -1) (undo-tree-id3050 . 1) (undo-tree-id3051 . -1) 286) nil (23394 5352 462380 0) 0 nil]) ((285 . 286)) nil (23394 5352 462383 0) 0 nil]) ((#("5" 0 1 (fontified t font-lock-face font-lock-string-face)) . -285) (undo-tree-id3052 . -1) (undo-tree-id3053 . -1) (undo-tree-id3054 . -1) (undo-tree-id3055 . 1) (undo-tree-id3056 . -1) (undo-tree-id3057 . -1) (undo-tree-id3058 . -1) (undo-tree-id3059 . -1) (#("0" 0 1 (fontified t font-lock-face font-lock-string-face)) . -286) (undo-tree-id3060 . -1) (undo-tree-id3061 . -1) (undo-tree-id3062 . -1) (undo-tree-id3063 . 1) (undo-tree-id3064 . -1) (undo-tree-id3065 . -1) 287 (t 23394 5344 877543 384000)) nil (23394 5352 462408 0) 0 nil]) ((285 . 287)) nil (23394 5344 860510 0) 0 nil]) ((#("1" 0 1 (fontified t font-lock-face font-lock-string-face)) . -285) (undo-tree-id3041 . -1) (undo-tree-id3042 . -1) (undo-tree-id3043 . -1) (undo-tree-id3044 . 1) (undo-tree-id3045 . -1) (undo-tree-id3046 . -1) 286 (t 23394 5340 752900 116000)) nil (23394 5344 860563 0) 0 nil]) ((285 . 286)) nil (23394 5340 733704 0) 0 nil]) ((#("5" 0 1 (fontified t font-lock-face font-lock-string-face)) . -285) (undo-tree-id2986 . -1) (undo-tree-id2987 . -1) (undo-tree-id2988 . -1) (undo-tree-id2989 . 1) (undo-tree-id2990 . 1) (undo-tree-id2991 . 1) (undo-tree-id2992 . 1) (undo-tree-id2993 . -1) (undo-tree-id2994 . 1) (undo-tree-id2995 . 1) (undo-tree-id2996 . 1) (undo-tree-id2997 . 1) (undo-tree-id2998 . 1) (undo-tree-id2999 . 1) (undo-tree-id3000 . 1) (undo-tree-id3001 . 1) (undo-tree-id3002 . -1) (undo-tree-id3003 . -1) (undo-tree-id3004 . 1) (undo-tree-id3005 . 1) (undo-tree-id3006 . 1) (undo-tree-id3007 . 1) (undo-tree-id3008 . 1) (undo-tree-id3009 . 1) (undo-tree-id3010 . 1) (undo-tree-id3011 . 1) (undo-tree-id3012 . -1) 286) nil (23394 5340 733802 0) 0 nil]) ((#("0" 0 1 (fontified t font-lock-face font-lock-string-face)) . -285) (undo-tree-id3013 . -1) (undo-tree-id3014 . -1) (undo-tree-id3015 . -1) (undo-tree-id3016 . 1) (undo-tree-id3017 . -1) (undo-tree-id3018 . -1) (undo-tree-id3019 . -1) (undo-tree-id3020 . -1) (undo-tree-id3021 . -1) (undo-tree-id3022 . -1) (undo-tree-id3023 . -1) (undo-tree-id3024 . -1) (undo-tree-id3025 . -1) (undo-tree-id3026 . -1) (undo-tree-id3027 . -1) (#("." 0 1 (fontified t font-lock-face font-lock-string-face)) . -286) (undo-tree-id3028 . -1) (undo-tree-id3029 . -1) (undo-tree-id3030 . -1) (undo-tree-id3031 . 1) (undo-tree-id3032 . -1) (undo-tree-id3033 . -1) (undo-tree-id3034 . -1) (undo-tree-id3035 . -1) (undo-tree-id3036 . -1) (undo-tree-id3037 . -1) (undo-tree-id3038 . -1) (undo-tree-id3039 . -1) (undo-tree-id3040 . -1) 287 (t 23394 5332 311126 35000)) nil (23394 5340 733852 0) 0 nil]) ((#("0" 0 1 (fontified t font-lock-face font-lock-string-face)) . -287) (undo-tree-id2978 . -1) (undo-tree-id2979 . -1) (undo-tree-id2980 . -1) (undo-tree-id2981 . 1) (undo-tree-id2982 . -1) (undo-tree-id2983 . -1) (undo-tree-id2984 . -1) (undo-tree-id2985 . -1) 288 (t 23394 5325 813551 115000)) nil (23394 5332 292898 0) 0 nil]) ((285 . 292)) nil (23394 5325 797471 0) 0 nil]) ((284 . 286) (#("\"" 0 1 (fontified nil)) . -284) (284 . 285) (#("\"" 0 1 (fontified nil)) . -284) (284 . 285)) nil (23394 5325 797481 0) 0 nil]) ((#("'" 0 1 (fontified t font-lock-face font-lock-string-face help-echo "unterminated string literal" cursor-sensor-functions #1#)) . -284) (undo-tree-id2895 . -1) (undo-tree-id2896 . -1) (undo-tree-id2897 . -1) (undo-tree-id2898 . 1) (undo-tree-id2899 . -1) (undo-tree-id2900 . -1) (undo-tree-id2901 . -1) (undo-tree-id2902 . -1) (undo-tree-id2903 . -1) (undo-tree-id2904 . -1) (undo-tree-id2905 . -1) (undo-tree-id2906 . -1) (undo-tree-id2907 . -1) (undo-tree-id2908 . -1) (undo-tree-id2909 . -1) (undo-tree-id2910 . -1) (undo-tree-id2911 . -1) (undo-tree-id2912 . -1) (undo-tree-id2913 . -1) (undo-tree-id2914 . -1) (undo-tree-id2915 . -1) (undo-tree-id2916 . -1) (undo-tree-id2917 . -1) (undo-tree-id2918 . -1) (undo-tree-id2919 . -1) (undo-tree-id2920 . -1) (undo-tree-id2921 . -1) 285) nil (23394 5325 797585 0) 0 nil]) ((#("1px'" 0 4 (fontified t font-lock-face font-lock-string-face)) . -285) (undo-tree-id2922 . -4) (undo-tree-id2923 . -1) (undo-tree-id2924 . -4) (undo-tree-id2925 . 1) (undo-tree-id2926 . 1) (undo-tree-id2927 . 1) (undo-tree-id2928 . 1) (undo-tree-id2929 . 1) (undo-tree-id2930 . 1) (undo-tree-id2931 . 1) (undo-tree-id2932 . 1) (undo-tree-id2933 . 1) (undo-tree-id2934 . 1) (undo-tree-id2935 . 1) (undo-tree-id2936 . 1) (undo-tree-id2937 . 1) (undo-tree-id2938 . 1) (undo-tree-id2939 . 1) (undo-tree-id2940 . 1) (undo-tree-id2941 . 1) (undo-tree-id2942 . 1) (undo-tree-id2943 . 4) (undo-tree-id2944 . -1) (undo-tree-id2945 . 1) (undo-tree-id2946 . 3) (undo-tree-id2947 . -1) (undo-tree-id2948 . 1) (undo-tree-id2949 . 3) (undo-tree-id2950 . -2) (undo-tree-id2951 . 1) (undo-tree-id2952 . 2) (undo-tree-id2953 . -3) (undo-tree-id2954 . 1) (undo-tree-id2955 . 1) (undo-tree-id2956 . -3) (undo-tree-id2957 . 1) (undo-tree-id2958 . -4) (undo-tree-id2959 . -4) (undo-tree-id2960 . 1) (undo-tree-id2961 . -3) (undo-tree-id2962 . 2) (undo-tree-id2963 . 1) (undo-tree-id2964 . -2) (undo-tree-id2965 . 3) (undo-tree-id2966 . 2) (undo-tree-id2967 . -1) (undo-tree-id2968 . 3) (undo-tree-id2969 . 3) (undo-tree-id2970 . -1) (undo-tree-id2971 . 3) (undo-tree-id2972 . -4) 289) nil (23394 5325 797667 0) 0 nil]) ((#("0" 0 1 (fontified t font-lock-face font-lock-string-face)) . -286) (undo-tree-id2973 . -1) (undo-tree-id2974 . -1) (undo-tree-id2975 . 1) (undo-tree-id2976 . -1) (undo-tree-id2977 . -1) 287 (t 23394 5279 71386 739000)) nil (23394 5325 797679 0) 0 nil]) ((285 . 289)) nil (23394 5279 54836 0) 0 nil]) ((#("2" 0 1 (fontified t font-lock-face font-lock-string-face)) . -285) (undo-tree-id2853 . -1) (undo-tree-id2854 . -1) (undo-tree-id2855 . -1) (undo-tree-id2856 . 1) (undo-tree-id2857 . -1) (undo-tree-id2858 . -1) (undo-tree-id2859 . -1) (undo-tree-id2860 . -1) (undo-tree-id2861 . -1) (undo-tree-id2862 . -1) (undo-tree-id2863 . -1) (#("0" 0 1 (fontified t font-lock-face font-lock-string-face)) . -286) (undo-tree-id2864 . -1) (undo-tree-id2865 . -1) (undo-tree-id2866 . -1) (undo-tree-id2867 . 1) (undo-tree-id2868 . -1) (undo-tree-id2869 . -1) (undo-tree-id2870 . -1) (undo-tree-id2871 . -1) (undo-tree-id2872 . -1) (#("p" 0 1 (fontified t font-lock-face font-lock-string-face)) . -287) (undo-tree-id2873 . -1) (undo-tree-id2874 . -1) (undo-tree-id2875 . -1) (undo-tree-id2876 . 1) (undo-tree-id2877 . -1) (undo-tree-id2878 . -1) (undo-tree-id2879 . -1) (#("x" 0 1 (fontified t font-lock-face font-lock-string-face)) . -288) (undo-tree-id2880 . -1) (undo-tree-id2881 . -1) (undo-tree-id2882 . -1) (undo-tree-id2883 . 1) (undo-tree-id2884 . -1) 289) nil (23394 5279 54943 0) 0 nil]) ((285 . 289) (284 . 286) (#("'" 0 1 (fontified nil)) . -284) (284 . 285) (#("'" 0 1 (fontified nil)) . -284) (284 . 285)) nil (23394 5279 54950 0) 0 nil]) ((#("'" 0 1 (fontified nil font-lock-face font-lock-string-face)) . -284) (undo-tree-id2885 . -1) (undo-tree-id2886 . -1) (undo-tree-id2887 . 1) (undo-tree-id2888 . -1) (#("'" 0 1 (fontified t font-lock-face font-lock-string-face)) . 285) (undo-tree-id2889 . 1)) nil (23394 5279 54959 0) 0 nil]) ((284 . 286) (#("'" 0 1 (fontified nil)) . -284) (284 . 285) (#("'" 0 1 (fontified nil)) . -284) (284 . 285)) nil (23394 5279 54962 0) 0 nil]) ((#("\"" 0 1 (fontified nil font-lock-face font-lock-string-face)) . -284) (undo-tree-id2890 . -1) (undo-tree-id2891 . -1) (undo-tree-id2892 . 1) (undo-tree-id2893 . -1) (#("\"" 0 1 (fontified t font-lock-face font-lock-string-face)) . 285) (undo-tree-id2894 . 1)) nil (23394 5279 54976 0) 0 nil]) ((284 . 286) (#("\"" 0 1 (fontified nil)) . -284) (284 . 285) (#("\"" 0 1 (fontified nil)) . -284) (276 . 285)) nil (23394 5279 54980 0) 0 nil]) ((271 . 276)) nil (23394 5279 54982 0) 0 nil]) ((270 . 271) (t 23394 5241 43368 815000)) nil (23394 5279 54983 0) 0 nil]) ((266 . 269)) nil (23394 5241 29311 0) 0 nil]) ((#("v" 0 1 (fontified t font-lock-face font-lock-string-face)) . -266) (undo-tree-id2820 . -1) (undo-tree-id2821 . -1) (undo-tree-id2822 . -1) (undo-tree-id2823 . -1) (#("h" 0 1 (font-lock-face font-lock-string-face fontified t)) . -267) (undo-tree-id2824 . -1) (undo-tree-id2825 . -1) (undo-tree-id2826 . -1) 268) nil (23394 5241 29363 0) 0 nil]) ((246 . 249)) nil (23394 5241 29366 0) 0 nil]) ((#("v" 0 1 (fontified t font-lock-face font-lock-string-face)) . -246) (undo-tree-id2827 . -1) (undo-tree-id2828 . -1) (undo-tree-id2829 . -1) (undo-tree-id2830 . 1) (undo-tree-id2831 . -1) (undo-tree-id2832 . -1) (undo-tree-id2833 . -1) (undo-tree-id2834 . 1) (undo-tree-id2835 . 1) (undo-tree-id2836 . 1) (undo-tree-id2837 . 1) (undo-tree-id2838 . -1) (undo-tree-id2839 . -1) (undo-tree-id2840 . -1) (undo-tree-id2841 . -1) (undo-tree-id2842 . -1) (#("w" 0 1 (fontified t font-lock-face font-lock-string-face)) . -247) (undo-tree-id2843 . -1) (undo-tree-id2844 . -1) (undo-tree-id2845 . 1) (undo-tree-id2846 . -1) (undo-tree-id2847 . -1) (undo-tree-id2848 . 1) (undo-tree-id2849 . 1) (undo-tree-id2850 . 1) (undo-tree-id2851 . 1) (undo-tree-id2852 . -1) 248 (t 23394 5133 200144 654000)) nil (23394 5241 29427 0) 0 nil]) ((#("0" 0 1 (fontified t font-lock-face font-lock-string-face)) . -264) (undo-tree-id2788 . -1) (undo-tree-id2789 . -1) (undo-tree-id2790 . 1) (undo-tree-id2791 . 1) (undo-tree-id2792 . -1) (undo-tree-id2793 . -1) (undo-tree-id2794 . -1) (#("." 0 1 (font-lock-face font-lock-string-face fontified t)) . -265) (undo-tree-id2795 . -1) (undo-tree-id2796 . -1) (undo-tree-id2797 . 1) (undo-tree-id2798 . 1) (undo-tree-id2799 . -1) 266) nil (23394 5133 186772 0) 0 nil]) ((#("0" 0 1 (fontified t font-lock-face font-lock-string-face)) . -244) (undo-tree-id2800 . -1) (undo-tree-id2801 . -1) (undo-tree-id2802 . 1) (undo-tree-id2803 . -1) (undo-tree-id2804 . -1) (undo-tree-id2805 . -1) (undo-tree-id2806 . -1) (undo-tree-id2807 . -1) (undo-tree-id2808 . -1) (undo-tree-id2809 . -1) (undo-tree-id2810 . -1) (#("." 0 1 (fontified t font-lock-face font-lock-string-face)) . -245) (undo-tree-id2811 . -1) (undo-tree-id2812 . -1) (undo-tree-id2813 . 1) (undo-tree-id2814 . -1) (undo-tree-id2815 . -1) (undo-tree-id2816 . -1) (undo-tree-id2817 . -1) (undo-tree-id2818 . -1) (undo-tree-id2819 . -1) 246 (t 23394 5104 177501 740000)) nil (23394 5133 186823 0) 0 nil]) ((248 . 250)) nil (23394 5104 164014 0) 0 nil]) ((#("x" 0 1 (fontified t font-lock-face font-lock-string-face)) . 248) (undo-tree-id2715 . 1) (undo-tree-id2716 . 1) (undo-tree-id2717 . 1) (undo-tree-id2718 . 1) (undo-tree-id2719 . 1) (undo-tree-id2720 . 1) (undo-tree-id2721 . 1) (undo-tree-id2722 . 1) (undo-tree-id2723 . 1) (undo-tree-id2724 . 1) (undo-tree-id2725 . 1) (undo-tree-id2726 . 1) (undo-tree-id2727 . 1) (undo-tree-id2728 . 1) (undo-tree-id2729 . 1) (undo-tree-id2730 . 1) (undo-tree-id2731 . 1) (undo-tree-id2732 . 1) (undo-tree-id2733 . 1) (undo-tree-id2734 . 1) (undo-tree-id2735 . 1) (undo-tree-id2736 . 1) (undo-tree-id2737 . 1) (undo-tree-id2738 . 1) (undo-tree-id2739 . 1) (undo-tree-id2740 . 1) (undo-tree-id2741 . 1) (#("p" 0 1 (fontified t font-lock-face font-lock-string-face)) . 248) (undo-tree-id2742 . -1) (undo-tree-id2743 . -1) (undo-tree-id2744 . -1) (undo-tree-id2745 . -1) (undo-tree-id2746 . -1) (undo-tree-id2747 . 1) (undo-tree-id2748 . 1) (undo-tree-id2749 . 1) (undo-tree-id2750 . 1) (undo-tree-id2751 . 1) (undo-tree-id2752 . 1) (undo-tree-id2753 . 1) (undo-tree-id2754 . 1) (undo-tree-id2755 . 1) (undo-tree-id2756 . 1) (undo-tree-id2757 . 1) (undo-tree-id2758 . 1) (undo-tree-id2759 . 1) (undo-tree-id2760 . 1) (undo-tree-id2761 . 1) (undo-tree-id2762 . 1) (undo-tree-id2763 . 1) (undo-tree-id2764 . 1) (undo-tree-id2765 . 1) (undo-tree-id2766 . 1) (undo-tree-id2767 . 1)) nil (23394 5104 164153 0) 0 nil]) ((246 . 248)) nil (23394 5104 164160 0) 0 nil]) ((#("3" 0 1 (fontified t font-lock-face font-lock-string-face)) . -246) (undo-tree-id2768 . -1) (undo-tree-id2769 . -1) (undo-tree-id2770 . 1) (undo-tree-id2771 . -1) 247) nil (23394 5104 164167 0) 0 nil]) ((246 . 247)) nil (23394 5104 164169 0) 0 nil]) ((#("5" 0 1 (fontified t font-lock-face font-lock-string-face)) . -246) (undo-tree-id2772 . -1) (undo-tree-id2773 . -1) (undo-tree-id2774 . -1) (undo-tree-id2775 . 1) (undo-tree-id2776 . -1) 247) nil (23394 5104 164187 0) 0 nil]) ((244 . 247)) nil (23394 5104 164189 0) 0 nil]) ((#("-" 0 1 (fontified t font-lock-face font-lock-string-face)) . -244) (undo-tree-id2777 . -1) (undo-tree-id2778 . -1) (undo-tree-id2779 . 1) (undo-tree-id2780 . -1) 245) nil (23394 5104 164200 0) 0 nil]) ((244 . 245)) nil (23394 5104 164202 0) 0 nil]) ((#("2" 0 1 (fontified t font-lock-face font-lock-string-face)) . -244) (undo-tree-id2781 . -1) (undo-tree-id2782 . -1) (undo-tree-id2783 . -1) (undo-tree-id2784 . -1) (#("0" 0 1 (fontified t font-lock-face font-lock-string-face)) . -245) (undo-tree-id2785 . -1) (undo-tree-id2786 . -1) (undo-tree-id2787 . -1) 246 (t 23394 4819 380685 246000)) nil (23394 5104 164220 0) 0 nil]) ((721 . 722)) nil (23394 4819 360377 0) 0 nil]) ((#("m" 0 1 (fontified t font-lock-face rjsx-attr)) . -721) (undo-tree-id2695 . -1) (undo-tree-id2696 . -1) (undo-tree-id2697 . -1) (undo-tree-id2698 . 1) (undo-tree-id2699 . -1) (undo-tree-id2700 . -1) (undo-tree-id2701 . -1) (undo-tree-id2702 . -1) (undo-tree-id2703 . -1) (undo-tree-id2704 . -1) (#("e" 0 1 (fontified t font-lock-face rjsx-attr)) . -722) (undo-tree-id2705 . -1) (undo-tree-id2706 . -1) (undo-tree-id2707 . 1) (undo-tree-id2708 . -1) 723) nil (23394 4819 360445 0) 0 nil]) ((722 . 723)) nil (23394 4819 360451 0) 0 nil]) ((#("e" 0 1 (fontified t font-lock-face rjsx-attr)) . -722) (undo-tree-id2709 . -1) (undo-tree-id2710 . -1) (undo-tree-id2711 . -1) (undo-tree-id2712 . 1) (undo-tree-id2713 . -1) (undo-tree-id2714 . -1) 723 (t 23394 4817 756523 476000)) nil (23394 4819 360461 0) 0 nil]) ((719 . 723)) nil (23394 4817 735610 0) 0 nil]) ((#("m" 0 1 (fontified t font-lock-face rjsx-attr)) . -719) (undo-tree-id2671 . -1) (undo-tree-id2672 . -1) (undo-tree-id2673 . -1) (undo-tree-id2674 . 1) (undo-tree-id2675 . -1) (undo-tree-id2676 . -1) (undo-tree-id2677 . -1) (undo-tree-id2678 . -1) (undo-tree-id2679 . -1) (undo-tree-id2680 . -1) (#("a" 0 1 (fontified t font-lock-face rjsx-attr)) . -720) (undo-tree-id2681 . -1) (undo-tree-id2682 . -1) (undo-tree-id2683 . -1) (undo-tree-id2684 . 1) (undo-tree-id2685 . -1) (undo-tree-id2686 . -1) (undo-tree-id2687 . -1) (undo-tree-id2688 . -1) (#("e" 0 1 (fontified t font-lock-face rjsx-attr)) . -721) (undo-tree-id2689 . -1) (undo-tree-id2690 . -1) (undo-tree-id2691 . -1) (undo-tree-id2692 . 1) (undo-tree-id2693 . -1) (undo-tree-id2694 . -1) 722 (t 23394 4815 894633 788000)) nil (23394 4817 735670 0) 0 nil]) ((713 . 722)) nil (23394 4815 874051 0) 0 nil]) ((#("style" 0 5 (fontified t font-lock-face rjsx-attr)) . -713) (undo-tree-id2637 . -5) (undo-tree-id2638 . -5) (undo-tree-id2639 . -5) (undo-tree-id2640 . 5) (undo-tree-id2641 . -1) (undo-tree-id2642 . 4) (undo-tree-id2643 . -2) (undo-tree-id2644 . 3) (undo-tree-id2645 . -3) (undo-tree-id2646 . 2) (undo-tree-id2647 . -4) (undo-tree-id2648 . 1) (undo-tree-id2649 . -5) (undo-tree-id2650 . -5) (undo-tree-id2651 . -5) (undo-tree-id2652 . 5) (undo-tree-id2653 . 4) (undo-tree-id2654 . 5) (undo-tree-id2655 . -1) (undo-tree-id2656 . 3) (undo-tree-id2657 . 4) (undo-tree-id2658 . -2) (undo-tree-id2659 . 2) (undo-tree-id2660 . 3) (undo-tree-id2661 . -3) (undo-tree-id2662 . 1) (undo-tree-id2663 . 2) (undo-tree-id2664 . -4) (undo-tree-id2665 . 1) (undo-tree-id2666 . -5) (undo-tree-id2667 . -5) (undo-tree-id2668 . -5) (undo-tree-id2669 . -5) (undo-tree-id2670 . -5) 718 (t 23394 4809 789381 12000)) nil (23394 4815 874162 0) 0 nil] [nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil nil ((720 . 725) (t 23394 4744 770867 385000)) ((#("root:" 0 4 (fontified t help-echo #14="missing `}' after expression" cursor-sensor-functions #1#) 4 5 (fontified t help-echo #14# cursor-sensor-functions #1#)) . 720) (undo-tree-id2113 . -5) (undo-tree-id2114 . -5) (undo-tree-id2115 . -5) (undo-tree-id2116 . 5) (undo-tree-id2117 . -1) (undo-tree-id2118 . 4) (undo-tree-id2119 . -2) (undo-tree-id2120 . 3) (undo-tree-id2121 . -3) (undo-tree-id2122 . 2) (undo-tree-id2123 . -4) (undo-tree-id2124 . -4) (undo-tree-id2125 . 1) (undo-tree-id2126 . -5) (undo-tree-id2127 . -5) (t 23394 4800 218579 972000)) (23394 4800 201767 0) 0 nil]) ((#("}" 0 1 (fontified nil)) . -772) (772 . 773) (#("}" 0 1 (fontified nil face #15=(rainbow-delimiters-depth-5-face))) . -772) (772 . 773) (t 23394 4743 659850 276000)) ((#("}" 0 1 (fontified nil face #15#)) . 772) (772 . 773) (#("}" 0 1 (fontified nil)) . 772) (772 . 773)) (23394 4802 532804 0) 0 nil]) ((#("classes." 0 7 (fontified t help-echo #16="missing `}' after expression" cursor-sensor-functions #1#) 7 8 (fontified t help-echo #16# cursor-sensor-functions #1#)) . -772) (undo-tree-id2034 . -8) (undo-tree-id2035 . -8) (undo-tree-id2036 . 8) (undo-tree-id2037 . 8) (undo-tree-id2038 . 8) (undo-tree-id2039 . 8) (undo-tree-id2040 . -8) (undo-tree-id2041 . -8) (undo-tree-id2042 . -8) (undo-tree-id2043 . -8) (undo-tree-id2044 . 8) (undo-tree-id2045 . 8) (undo-tree-id2046 . 8) (undo-tree-id2047 . 8) (undo-tree-id2048 . 8) (undo-tree-id2049 . -8) (undo-tree-id2050 . -8) (undo-tree-id2051 . -8) 780) ((772 . 780)) (23394 4803 75892 0) 0 nil]) ((#("tabBar" 0 6 (help-echo "missing `}' after expression" cursor-sensor-functions #1# fontified t)) . -780) (undo-tree-id2052 . -6) (undo-tree-id2053 . -6) (undo-tree-id2054 . -5) (undo-tree-id2055 . 1) (undo-tree-id2056 . -5) (undo-tree-id2057 . -5) (undo-tree-id2058 . 1) (undo-tree-id2059 . 1) (undo-tree-id2060 . -5) (undo-tree-id2061 . 1) (undo-tree-id2062 . -6) (undo-tree-id2063 . -6) 786) ((780 . 786)) (23394 4803 428035 0) 0 nil]) ((751 . 753)) ((#("px" 0 2 (fontified t font-lock-face font-lock-string-face help-echo "missing `}' after expression" cursor-sensor-functions #1#)) . 751) (undo-tree-id2128 . 2) (undo-tree-id2129 . -1) (undo-tree-id2130 . 1) (undo-tree-id2131 . -2) (undo-tree-id2132 . 2) (undo-tree-id2133 . 2) (undo-tree-id2134 . 2) (undo-tree-id2135 . 2)) (23394 4803 724091 0) 0 nil]) ((#("[" 0 1 (fontified nil font-lock-face font-lock-string-face help-echo #17="missing `}' after expression" cursor-sensor-functions #1#)) . -751) (undo-tree-id2064 . -1) (undo-tree-id2065 . -1) (undo-tree-id2066 . 1) (undo-tree-id2067 . -1) (#("]" 0 1 (fontified t font-lock-face font-lock-string-face help-echo #17# cursor-sensor-functions #1#)) . 752) (undo-tree-id2068 . 1)) ((751 . 753)) (23394 4804 12089 0) 0 nil]) ((751 . 753) (#("[" 0 1 (fontified nil font-lock-face font-lock-string-face help-echo #20="missing `}' after expression" cursor-sensor-functions #1#)) . -751) (748 . 752) (747 . 749) (#("\"" 0 1 (fontified nil)) . -747) (747 . 748) (#("\"" 0 1 (fontified nil help-echo #18="missing `}' after expression" cursor-sensor-functions #1#)) . -747) (747 . 748)) ((#("\"" 0 1 (fontified nil help-echo #18# cursor-sensor-functions #1#)) . 747) (747 . 748) (#("\"" 0 1 (fontified nil)) . 747) (747 . 748) (#("\"\"" 0 1 (fontified nil font-lock-face font-lock-string-face help-echo #19="missing `}' after expression" cursor-sensor-functions #1#) 1 2 (fontified nil font-lock-face font-lock-string-face help-echo #19# cursor-sensor-functions #1#)) . 747) (undo-tree-id2136 . -1) (undo-tree-id2137 . -1) (undo-tree-id2138 . 1) (undo-tree-id2139 . 2) (undo-tree-id2140 . -1) (undo-tree-id2141 . 1) (undo-tree-id2142 . 1) (undo-tree-id2143 . -1) (undo-tree-id2144 . 1) (undo-tree-id2145 . 1) (undo-tree-id2146 . -1) (undo-tree-id2147 . 1) (undo-tree-id2148 . 1) (undo-tree-id2149 . -1) (undo-tree-id2150 . 1) (undo-tree-id2151 . 1) (undo-tree-id2152 . -1) (undo-tree-id2153 . 1) (undo-tree-id2154 . 1) (undo-tree-id2155 . -1) (undo-tree-id2156 . 1) (undo-tree-id2157 . 1) (undo-tree-id2158 . -1) (undo-tree-id2159 . 1) (undo-tree-id2160 . 1) (undo-tree-id2161 . -1) (undo-tree-id2162 . 1) (undo-tree-id2163 . -2) (undo-tree-id2164 . -1) (undo-tree-id2165 . 1) (undo-tree-id2166 . -1) (undo-tree-id2167 . -1) (undo-tree-id2168 . 1) (undo-tree-id2169 . 1) (undo-tree-id2170 . -1) (undo-tree-id2171 . 1) (undo-tree-id2172 . 1) (undo-tree-id2173 . -1) (undo-tree-id2174 . 1) (undo-tree-id2175 . 1) (undo-tree-id2176 . -1) (#("100[" 0 3 (fontified nil font-lock-face font-lock-string-face help-echo #19# cursor-sensor-functions #1#) 3 4 (fontified nil font-lock-face font-lock-string-face help-echo #20# cursor-sensor-functions #1#)) . 748) (undo-tree-id2177 . -3) (undo-tree-id2178 . -3) (undo-tree-id2179 . 4) (undo-tree-id2180 . -1) (undo-tree-id2181 . 3) (undo-tree-id2182 . -2) (undo-tree-id2183 . 2) (undo-tree-id2184 . -3) (undo-tree-id2185 . -3) (undo-tree-id2186 . -3) (undo-tree-id2187 . -3) (undo-tree-id2188 . -3) (undo-tree-id2189 . -3) (undo-tree-id2190 . -3) (undo-tree-id2191 . -3) (undo-tree-id2192 . -3) (undo-tree-id2193 . -3) (undo-tree-id2194 . -3) (751 . 752) (#("[]" 0 1 (fontified t font-lock-face font-lock-string-face help-echo #19# cursor-sensor-functions #1#) 1 2 (fontified t font-lock-face font-lock-string-face help-echo #19# cursor-sensor-functions #1#)) . 751) (undo-tree-id2195 . -1) (undo-tree-id2196 . -1) (undo-tree-id2197 . 1) (undo-tree-id2198 . 1) (undo-tree-id2199 . 2) (undo-tree-id2200 . -1)) (23394 4804 428365 0) 0 nil]) ((#(";" 0 1 (fontified t help-echo "syntax error" cursor-sensor-functions #1#)) . -747) (undo-tree-id2069 . -1) (undo-tree-id2070 . -1) (undo-tree-id2071 . -1) (undo-tree-id2072 . 1) (undo-tree-id2073 . -1) 748) ((747 . 748)) (23394 4804 788884 0) 0 nil]) ((747 . 748)) ((#(";" 0 1 (fontified t help-echo "syntax error" cursor-sensor-functions #1#)) . 747) (undo-tree-id2201 . -1) (undo-tree-id2202 . -1) (undo-tree-id2203 . -1) (undo-tree-id2204 . 1) (undo-tree-id2205 . -1)) (23394 4805 20007 0) 0 nil]) ((#("0" 0 1 (fontified t help-echo "missing `}' after expression" cursor-sensor-functions #1#)) . -747) (undo-tree-id2074 . -1) (undo-tree-id2075 . -1) (undo-tree-id2076 . 1) (undo-tree-id2077 . -1) 748) ((747 . 748)) (23394 4805 228039 0) 0 nil]) ((743 . 748)) ((#("th: 0" 0 2 (fontified t font-lock-face js2-object-property help-echo #21="missing `}' after expression" cursor-sensor-functions #1#) 2 4 (fontified t help-echo #21# cursor-sensor-functions #1#) 4 5 (fontified t help-echo #21# cursor-sensor-functions #1#)) . 743) (undo-tree-id2206 . -5) (undo-tree-id2207 . -5) (undo-tree-id2208 . 5) (undo-tree-id2209 . -1) (undo-tree-id2210 . 4) (undo-tree-id2211 . -2) (undo-tree-id2212 . 3) (undo-tree-id2213 . -3) (undo-tree-id2214 . 2) (undo-tree-id2215 . -4) (undo-tree-id2216 . -4) (undo-tree-id2217 . -4) (undo-tree-id2218 . -4) (undo-tree-id2219 . -4) (undo-tree-id2220 . -4) (undo-tree-id2221 . -4) (undo-tree-id2222 . -4) (undo-tree-id2223 . -4) (undo-tree-id2224 . -4) (undo-tree-id2225 . -4) (undo-tree-id2226 . -4) (undo-tree-id2227 . -4) (undo-tree-id2228 . -4) (undo-tree-id2229 . -4) (undo-tree-id2230 . -4) (undo-tree-id2231 . -4) (undo-tree-id2232 . -4) (undo-tree-id2233 . -4) (undo-tree-id2234 . -4) (undo-tree-id2235 . -4) (undo-tree-id2236 . -4) (undo-tree-id2237 . -4) (undo-tree-id2238 . 1) (undo-tree-id2239 . -5)) (23394 4805 435966 0) 0 nil]) ((#("r" 0 1 (fontified t font-lock-face js2-object-property help-echo "missing `}' after expression" cursor-sensor-functions #1#)) . -743) (undo-tree-id2078 . -1) (undo-tree-id2079 . -1) (undo-tree-id2080 . -1) (undo-tree-id2081 . 1) (undo-tree-id2082 . -1) (undo-tree-id2083 . -1) (undo-tree-id2084 . -1) (undo-tree-id2085 . -1) (undo-tree-id2086 . -1) (undo-tree-id2087 . -1) (undo-tree-id2088 . -1) (undo-tree-id2089 . -1) (#("t" 0 1 (fontified t font-lock-face js2-object-property help-echo "missing `}' after expression" cursor-sensor-functions #1#)) . -744) (undo-tree-id2090 . -1) (undo-tree-id2091 . -1) (undo-tree-id2092 . -1) (undo-tree-id2093 . 1) (undo-tree-id2094 . -1) (undo-tree-id2095 . -1) (undo-tree-id2096 . -1) (undo-tree-id2097 . -1) (undo-tree-id2098 . -1) (undo-tree-id2099 . -1) (#("h" 0 1 (fontified t font-lock-face js2-object-property help-echo "missing `}' after expression" cursor-sensor-functions #1#)) . -745) (undo-tree-id2100 . -1) (undo-tree-id2101 . -1) (undo-tree-id2102 . -1) (undo-tree-id2103 . 1) (undo-tree-id2104 . -1) (undo-tree-id2105 . -1) (undo-tree-id2106 . -1) (undo-tree-id2107 . -1) (#(";" 0 1 (fontified t help-echo "missing : after property id" cursor-sensor-functions #1#)) . -746) (undo-tree-id2108 . -1) (undo-tree-id2109 . -1) (undo-tree-id2110 . -1) (undo-tree-id2111 . 1) (undo-tree-id2112 . -1) 747) ((743 . 747)) (23394 4805 644100 0) 0 nil]) ((740 . 747)) ((#("widrth;" 0 3 (fontified t font-lock-face js2-object-property help-echo #22="missing `}' after expression" cursor-sensor-functions #1#) 3 4 (fontified t font-lock-face js2-object-property help-echo #22# cursor-sensor-functions #1#) 4 5 (fontified t font-lock-face js2-object-property help-echo #22# cursor-sensor-functions #1#) 5 6 (fontified t font-lock-face js2-object-property help-echo #22# cursor-sensor-functions #1#) 6 7 (fontified t help-echo "missing : after property id" cursor-sensor-functions #1#)) . 740) (undo-tree-id2240 . -7) (undo-tree-id2241 . -7) (undo-tree-id2242 . 7) (undo-tree-id2243 . -1) (undo-tree-id2244 . 6) (undo-tree-id2245 . -2) (undo-tree-id2246 . 5) (undo-tree-id2247 . -3) (undo-tree-id2248 . -3) (undo-tree-id2249 . -3) (undo-tree-id2250 . -3) (undo-tree-id2251 . -3) (undo-tree-id2252 . -3) (undo-tree-id2253 . -3) (undo-tree-id2254 . -3) (undo-tree-id2255 . -3) (undo-tree-id2256 . -3) (undo-tree-id2257 . -3) (undo-tree-id2258 . -3) (undo-tree-id2259 . -3) (undo-tree-id2260 . -3) (undo-tree-id2261 . -3) (undo-tree-id2262 . -3) (undo-tree-id2263 . -3) (undo-tree-id2264 . -3) (undo-tree-id2265 . -3) (undo-tree-id2266 . -3) (undo-tree-id2267 . -3) (undo-tree-id2268 . -3) (undo-tree-id2269 . -3) (undo-tree-id2270 . -3) (undo-tree-id2271 . -3) (undo-tree-id2272 . -3) (undo-tree-id2273 . -3) (undo-tree-id2274 . -3) (undo-tree-id2275 . -3) (undo-tree-id2276 . -3) (undo-tree-id2277 . 6) (undo-tree-id2278 . -1) (undo-tree-id2279 . 6) (undo-tree-id2280 . 6) (undo-tree-id2281 . -1) (undo-tree-id2282 . 6) (undo-tree-id2283 . -3) (undo-tree-id2284 . -3) (undo-tree-id2285 . -3) (undo-tree-id2286 . -3) (undo-tree-id2287 . -3) (undo-tree-id2288 . -3) (undo-tree-id2289 . -3) (undo-tree-id2290 . -6) (undo-tree-id2291 . -7) (undo-tree-id2292 . 4) (undo-tree-id2293 . -7)) (23394 4805 852229 0) 0 nil]) ((722 . 740) (723 . 739) (#("                  " 0 18 (fontified nil help-echo #25="missing `}' after expression" cursor-sensor-functions #1# face #24=(rainbow-delimiters-depth-5-face))) . 722) (722 . 740) (721 . 723)) ((#("

" 0 1 (fontified t help-echo #23="missing `}' after expression" cursor-sensor-functions #1#) 1 2 (fontified nil help-echo #23# cursor-sensor-functions #1#)) . 721) (undo-tree-id2294 . -1) (undo-tree-id2295 . -1) (undo-tree-id2296 . 1) (undo-tree-id2297 . 2) (undo-tree-id2298 . 1) (undo-tree-id2299 . 2) (undo-tree-id2300 . -1) (undo-tree-id2301 . 1) (undo-tree-id2302 . 1) (undo-tree-id2303 . -1) (undo-tree-id2304 . 1) (undo-tree-id2305 . 1) (undo-tree-id2306 . -1) (undo-tree-id2307 . 1) (undo-tree-id2308 . 1) (undo-tree-id2309 . -1) (undo-tree-id2310 . 1) (undo-tree-id2311 . 1) (undo-tree-id2312 . -1) (undo-tree-id2313 . 1) (undo-tree-id2314 . 1) (undo-tree-id2315 . -1) (undo-tree-id2316 . 1) (undo-tree-id2317 . 1) (undo-tree-id2318 . -1) (undo-tree-id2319 . 1) (undo-tree-id2320 . 1) (undo-tree-id2321 . -1) (undo-tree-id2322 . 1) (undo-tree-id2323 . 1) (undo-tree-id2324 . -1) (undo-tree-id2325 . 1) (undo-tree-id2326 . 1) (undo-tree-id2327 . -1) (undo-tree-id2328 . 1) (undo-tree-id2329 . 1) (undo-tree-id2330 . -1) (undo-tree-id2331 . 1) (undo-tree-id2332 . 1) (undo-tree-id2333 . -1) (undo-tree-id2334 . 1) (undo-tree-id2335 . 1) (undo-tree-id2336 . -1) (undo-tree-id2337 . 1) (undo-tree-id2338 . 1) (undo-tree-id2339 . -1) (undo-tree-id2340 . 1) (undo-tree-id2341 . 1) (undo-tree-id2342 . -1) (undo-tree-id2343 . 1) (undo-tree-id2344 . 1) (undo-tree-id2345 . -1) (undo-tree-id2346 . 1) (undo-tree-id2347 . 1) (undo-tree-id2348 . -1) (undo-tree-id2349 . 1) (undo-tree-id2350 . 1) (undo-tree-id2351 . -1) (undo-tree-id2352 . 1) (undo-tree-id2353 . 1) (undo-tree-id2354 . -1) (undo-tree-id2355 . 1) (undo-tree-id2356 . 1) (undo-tree-id2357 . -1) (undo-tree-id2358 . 1) (undo-tree-id2359 . 1) (undo-tree-id2360 . -1) (undo-tree-id2361 . 1) (undo-tree-id2362 . 1) (undo-tree-id2363 . -1) (undo-tree-id2364 . 1) (undo-tree-id2365 . 1) (undo-tree-id2366 . -1) (undo-tree-id2367 . 1) (undo-tree-id2368 . 1) (undo-tree-id2369 . -1) (undo-tree-id2370 . 1) (undo-tree-id2371 . 1) (undo-tree-id2372 . -1) (undo-tree-id2373 . 1) (undo-tree-id2374 . 1) (undo-tree-id2375 . -1) (undo-tree-id2376 . 1) (undo-tree-id2377 . 1) (undo-tree-id2378 . -1) (undo-tree-id2379 . 1) (undo-tree-id2380 . 1) (undo-tree-id2381 . -1) (undo-tree-id2382 . 1) (undo-tree-id2383 . 1) (undo-tree-id2384 . -1) (undo-tree-id2385 . 1) (undo-tree-id2386 . -1) (undo-tree-id2387 . 1) (undo-tree-id2388 . -1) (undo-tree-id2389 . -1) (undo-tree-id2390 . 1) (undo-tree-id2391 . 1) (undo-tree-id2392 . -1) (undo-tree-id2393 . 1) (undo-tree-id2394 . 1) (undo-tree-id2395 . -1) (undo-tree-id2396 . 1) (undo-tree-id2397 . 1) (undo-tree-id2398 . -1) (undo-tree-id2399 . 1) (undo-tree-id2400 . 1) (undo-tree-id2401 . -1) (undo-tree-id2402 . 1) (undo-tree-id2403 . 1) (undo-tree-id2404 . -1) (undo-tree-id2405 . 1) (undo-tree-id2406 . 1) (undo-tree-id2407 . -1) (undo-tree-id2408 . 1) (undo-tree-id2409 . 1) (undo-tree-id2410 . -1) (undo-tree-id2411 . 1) (undo-tree-id2412 . 1) (undo-tree-id2413 . -1) (undo-tree-id2414 . 1) (undo-tree-id2415 . 1) (undo-tree-id2416 . -1) (undo-tree-id2417 . 1) (undo-tree-id2418 . 1) (undo-tree-id2419 . -1) (undo-tree-id2420 . 1) (undo-tree-id2421 . 1) (undo-tree-id2422 . -1) (undo-tree-id2423 . 1) (undo-tree-id2424 . 1) (undo-tree-id2425 . -1) (#("                  " 0 18 (fontified nil help-echo #25# cursor-sensor-functions #1# face #24#)) . 722) (722 . 740) (#("                " 0 16 (fontified t help-echo #23# cursor-sensor-functions #1#)) . 723) (#("                  " 0 18 (fontified t help-echo #23# cursor-sensor-functions #1#)) . 722) (undo-tree-id2426 . -18) (undo-tree-id2427 . -18) (undo-tree-id2428 . -18) (undo-tree-id2429 . -18) (undo-tree-id2430 . -18) (undo-tree-id2431 . -18) (undo-tree-id2432 . -18) (undo-tree-id2433 . -18) (undo-tree-id2434 . -18) (undo-tree-id2435 . -18) (undo-tree-id2436 . -18) (undo-tree-id2437 . -18) (undo-tree-id2438 . -18) (undo-tree-id2439 . -18) (undo-tree-id2440 . -18) (undo-tree-id2441 . -18) (undo-tree-id2442 . -18) (undo-tree-id2443 . -18) (undo-tree-id2444 . -18) (undo-tree-id2445 . -18) (undo-tree-id2446 . -18) (undo-tree-id2447 . -18) (undo-tree-id2448 . -18) (undo-tree-id2449 . -18) (undo-tree-id2450 . -18) (undo-tree-id2451 . -18) (undo-tree-id2452 . -18) (undo-tree-id2453 . -18) (undo-tree-id2454 . -18) (undo-tree-id2455 . -18) (undo-tree-id2456 . -18) (undo-tree-id2457 . -18) (undo-tree-id2458 . -18) (undo-tree-id2459 . -18) (undo-tree-id2460 . -18) (undo-tree-id2461 . -18) (undo-tree-id2462 . -18) (undo-tree-id2463 . -18) (undo-tree-id2464 . -18) (undo-tree-id2465 . -18) (undo-tree-id2466 . -18) (undo-tree-id2467 . -18) (undo-tree-id2468 . -18) (undo-tree-id2469 . -18) (undo-tree-id2470 . -18) (undo-tree-id2471 . -18)) (23394 4806 52101 0) 0 nil]) ((720 . 722) (#("{" 0 1 (fontified nil face #26=(rainbow-delimiters-depth-4-face))) . -720) (720 . 721) (t 23394 4706 362567 898000)) ((#("{" 0 1 (fontified nil face #26#)) . 720) (720 . 721) (#("{}" 0 1 (fontified t help-echo #27="missing `}' after expression" cursor-sensor-functions #1# face (rainbow-delimiters-depth-5-face)) 1 2 (fontified t help-echo #27# cursor-sensor-functions #1# face (rainbow-delimiters-depth-5-face))) . 720) (undo-tree-id2472 . -1) (undo-tree-id2473 . -1) (undo-tree-id2474 . -2) (undo-tree-id2475 . -2) (undo-tree-id2476 . -2) (undo-tree-id2477 . -2) (undo-tree-id2478 . 1) (undo-tree-id2479 . 2) (undo-tree-id2480 . -1) (undo-tree-id2481 . 1) (undo-tree-id2482 . 1) (undo-tree-id2483 . 1) (undo-tree-id2484 . 1) (undo-tree-id2485 . -1) (undo-tree-id2486 . 1) (undo-tree-id2487 . 1) (undo-tree-id2488 . -1) (undo-tree-id2489 . 1) (undo-tree-id2490 . 1) (undo-tree-id2491 . -1) (undo-tree-id2492 . 1) (undo-tree-id2493 . 1) (undo-tree-id2494 . -1) (undo-tree-id2495 . 1) (undo-tree-id2496 . 1) (undo-tree-id2497 . -1) (undo-tree-id2498 . 1) (undo-tree-id2499 . 1) (undo-tree-id2500 . -1) (undo-tree-id2501 . 1) (undo-tree-id2502 . 1) (undo-tree-id2503 . -1) (undo-tree-id2504 . 1) (undo-tree-id2505 . 1) (undo-tree-id2506 . -1) (undo-tree-id2507 . 1) (undo-tree-id2508 . 1) (undo-tree-id2509 . -1) (undo-tree-id2510 . 1) (undo-tree-id2511 . 1) (undo-tree-id2512 . -1) (undo-tree-id2513 . 1) (undo-tree-id2514 . 1) (undo-tree-id2515 . -1) (undo-tree-id2516 . 1) (undo-tree-id2517 . 1) (undo-tree-id2518 . -1) (undo-tree-id2519 . 1) (undo-tree-id2520 . 1) (undo-tree-id2521 . -1) (undo-tree-id2522 . 1) (undo-tree-id2523 . 1) (undo-tree-id2524 . -1) (undo-tree-id2525 . 1) (undo-tree-id2526 . 1) (undo-tree-id2527 . -1) (undo-tree-id2528 . 1) (undo-tree-id2529 . 1) (undo-tree-id2530 . -1) (undo-tree-id2531 . 1) (undo-tree-id2532 . 1) (undo-tree-id2533 . -1) (undo-tree-id2534 . 1) (undo-tree-id2535 . 1) (undo-tree-id2536 . -1) (undo-tree-id2537 . 1) (undo-tree-id2538 . 1) (undo-tree-id2539 . -1) (undo-tree-id2540 . 1) (undo-tree-id2541 . 1) (undo-tree-id2542 . -1) (undo-tree-id2543 . 1) (undo-tree-id2544 . 1) (undo-tree-id2545 . -1) (undo-tree-id2546 . 1) (undo-tree-id2547 . 1) (undo-tree-id2548 . -1) (undo-tree-id2549 . 1) (undo-tree-id2550 . 1) (undo-tree-id2551 . -1) (undo-tree-id2552 . 1) (undo-tree-id2553 . 1) (undo-tree-id2554 . -1) (undo-tree-id2555 . 1) (undo-tree-id2556 . 1) (undo-tree-id2557 . -1) (undo-tree-id2558 . 1) (undo-tree-id2559 . 1) (undo-tree-id2560 . -1) (undo-tree-id2561 . 1) (undo-tree-id2562 . 1) (undo-tree-id2563 . -1) (undo-tree-id2564 . 1) (undo-tree-id2565 . 1) (undo-tree-id2566 . -1) (undo-tree-id2567 . 1) (undo-tree-id2568 . 1) (undo-tree-id2569 . -1) (undo-tree-id2570 . 1) (undo-tree-id2571 . -2) (undo-tree-id2572 . -2) (undo-tree-id2573 . -2) (undo-tree-id2574 . -2) (undo-tree-id2575 . -1) (undo-tree-id2576 . 1) (undo-tree-id2577 . -1) (undo-tree-id2578 . -1) (undo-tree-id2579 . 1) (undo-tree-id2580 . 1) (undo-tree-id2581 . -1) (undo-tree-id2582 . 1) (undo-tree-id2583 . 1) (undo-tree-id2584 . -1) (undo-tree-id2585 . 1) (undo-tree-id2586 . 1) (undo-tree-id2587 . -1) (undo-tree-id2588 . 2) (undo-tree-id2589 . 1) (undo-tree-id2590 . 2) (undo-tree-id2591 . 2) (undo-tree-id2592 . 2) (undo-tree-id2593 . 2) (undo-tree-id2594 . 2) (undo-tree-id2595 . 2) (undo-tree-id2596 . 2) (undo-tree-id2597 . 2) (undo-tree-id2598 . 2) (undo-tree-id2599 . 2) (undo-tree-id2600 . 2) (undo-tree-id2601 . 2) (undo-tree-id2602 . 2) (undo-tree-id2603 . 2) (undo-tree-id2604 . 2) (undo-tree-id2605 . 2) (undo-tree-id2606 . 2) (undo-tree-id2607 . -2) (undo-tree-id2608 . 1) (undo-tree-id2609 . -1) (undo-tree-id2610 . 1) (undo-tree-id2611 . 1) (undo-tree-id2612 . -1) (undo-tree-id2613 . 1) (undo-tree-id2614 . 1) (undo-tree-id2615 . -1) (undo-tree-id2616 . 1) (undo-tree-id2617 . 1) (undo-tree-id2618 . -1) (undo-tree-id2619 . 1) (undo-tree-id2620 . 1) (undo-tree-id2621 . -1) (undo-tree-id2622 . 1) (undo-tree-id2623 . 1) (undo-tree-id2624 . -1) (undo-tree-id2625 . 1) (undo-tree-id2626 . 1) (undo-tree-id2627 . -1) (undo-tree-id2628 . 1) (undo-tree-id2629 . 1) (undo-tree-id2630 . -1) (undo-tree-id2631 . 1) (undo-tree-id2632 . 1) (undo-tree-id2633 . -1) (undo-tree-id2634 . 1) (undo-tree-id2635 . 1) (undo-tree-id2636 . -1)) (23394 4806 260759 0) 0 nil]) ((246 . 248) (t 23394 4699 246912 728000)) nil (23394 4806 484342 0) 0 nil]) ((#(":" 0 1 (fontified t font-lock-face rjsx-attr help-echo "invalid JSX identifier" cursor-sensor-functions #1#)) . -716) (undo-tree-id1986 . -1) (undo-tree-id1987 . -1) (undo-tree-id1988 . -1) (undo-tree-id1989 . 1) (undo-tree-id1990 . -1) 717) nil (23394 4699 228999 0) 0 nil]) ((711 . 717)) nil (23394 4699 229007 0) 0 nil]) ((#("className" 0 9 (font-lock-face rjsx-attr fontified t)) . -711) (undo-tree-id1991 . -9) (undo-tree-id1992 . -9) (undo-tree-id1993 . -9) (undo-tree-id1994 . -5) (undo-tree-id1995 . -5) (undo-tree-id1996 . -5) (undo-tree-id1997 . -5) (undo-tree-id1998 . -5) (undo-tree-id1999 . -5) (undo-tree-id2000 . -5) (undo-tree-id2001 . -5) (undo-tree-id2002 . -5) (undo-tree-id2003 . -5) (undo-tree-id2004 . -5) (undo-tree-id2005 . 6) (undo-tree-id2006 . -3) (undo-tree-id2007 . 6) (undo-tree-id2008 . 6) (undo-tree-id2009 . -3) (undo-tree-id2010 . 6) (undo-tree-id2011 . -5) (undo-tree-id2012 . -5) (undo-tree-id2013 . -5) (undo-tree-id2014 . -5) (undo-tree-id2015 . -5) (undo-tree-id2016 . -5) (undo-tree-id2017 . -5) (undo-tree-id2018 . -5) (undo-tree-id2019 . -5) (undo-tree-id2020 . -5) (undo-tree-id2021 . 4) (undo-tree-id2022 . -6) (undo-tree-id2023 . 3) (undo-tree-id2024 . -7) (undo-tree-id2025 . 2) (undo-tree-id2026 . -8) (undo-tree-id2027 . 1) (undo-tree-id2028 . -9) (undo-tree-id2029 . -9) (undo-tree-id2030 . -9) (undo-tree-id2031 . -9) (undo-tree-id2032 . -9) (undo-tree-id2033 . -9) 720 (t 23394 4525 422400 879000)) nil (23394 4699 229095 0) 0 nil] [nil nil ((#("    const {classes} = this.props;" 0 4 (fontified t) 4 9 (fontified t font-lock-face font-lock-keyword-face) 9 10 (fontified t) 10 11 (fontified t face (rainbow-delimiters-depth-3-face)) 11 18 (fontified t font-lock-face font-lock-variable-name-face) 18 19 (fontified t face (rainbow-delimiters-depth-3-face)) 19 20 (fontified t) 20 21 (rear-nonsticky t fontified t) 21 22 (fontified t) 22 26 (fontified t font-lock-face font-lock-builtin-face) 26 27 (fontified t) 27 32 (fontified t font-lock-face js2-object-property-access) 32 33 (fontified t)) . 321) (undo-tree-id1972 . -19) (undo-tree-id1973 . -4) (undo-tree-id1974 . -33) (undo-tree-id1975 . -19) (undo-tree-id1976 . 14) (undo-tree-id1977 . -19) (undo-tree-id1978 . -19) (undo-tree-id1979 . -19) (undo-tree-id1980 . 14) (undo-tree-id1981 . 14) (undo-tree-id1982 . -19) (undo-tree-id1983 . 33) (undo-tree-id1984 . 14) (undo-tree-id1985 . -33) (t 23394 4525 422400 879000)) ((321 . 354)) (23394 4636 586186 0) 0 nil]) ((#("," 0 1 (fontified t)) . -799) (undo-tree-id1829 . -1) (undo-tree-id1830 . -1) (undo-tree-id1831 . -1) (undo-tree-id1832 . -1) (undo-tree-id1833 . -1) (undo-tree-id1834 . 1) (undo-tree-id1835 . 1) (undo-tree-id1836 . 1) (undo-tree-id1837 . 1) (undo-tree-id1838 . 1) (undo-tree-id1839 . 1) (undo-tree-id1840 . 1) (undo-tree-id1841 . 1) (undo-tree-id1842 . 1) (undo-tree-id1843 . 1) (undo-tree-id1844 . 1) (undo-tree-id1845 . 1) (undo-tree-id1846 . 1) (undo-tree-id1847 . 1) (undo-tree-id1848 . 1) (undo-tree-id1849 . 1) (undo-tree-id1850 . 1) (undo-tree-id1851 . 1) (undo-tree-id1852 . 1) (undo-tree-id1853 . 1) (undo-tree-id1854 . 1) (undo-tree-id1855 . 1) (undo-tree-id1856 . 1) (undo-tree-id1857 . 1) (undo-tree-id1858 . -1) (undo-tree-id1859 . -1) (undo-tree-id1860 . -1) (undo-tree-id1861 . -1) (undo-tree-id1862 . -1) (undo-tree-id1863 . -1) (undo-tree-id1864 . -1) (undo-tree-id1865 . -1) (undo-tree-id1866 . -1) (undo-tree-id1867 . -1) (undo-tree-id1868 . -1) (undo-tree-id1869 . -1) (undo-tree-id1870 . -1) (undo-tree-id1871 . -1) (undo-tree-id1872 . -1) (undo-tree-id1873 . -1) (undo-tree-id1874 . -1) (undo-tree-id1875 . -1) (undo-tree-id1876 . -1) (undo-tree-id1877 . -1) (undo-tree-id1878 . -1) (undo-tree-id1879 . -1) (undo-tree-id1880 . -1) (undo-tree-id1881 . -1) (undo-tree-id1882 . -1) (undo-tree-id1883 . -1) (undo-tree-id1884 . -1) (undo-tree-id1885 . -1) (undo-tree-id1886 . -1) 800) nil (23394 4636 587440 0) 0 nil]) ((#(" { withTheme: true }" 0 1 (fontified t) 1 2 (fontified t face (rainbow-delimiters-depth-2-face)) 2 3 (fontified t) 3 10 (font-lock-face js2-object-property fontified t) 10 12 (font-lock-face js2-object-property fontified t) 12 13 (fontified t) 13 14 (fontified t) 14 18 (font-lock-face font-lock-constant-face fontified t) 18 19 (fontified t) 19 20 (fontified t face (rainbow-delimiters-depth-2-face))) . 800) (undo-tree-id1887 . -20) (undo-tree-id1888 . -14) (undo-tree-id1889 . -20) (undo-tree-id1890 . -20) (undo-tree-id1891 . 20) (undo-tree-id1892 . 20) (undo-tree-id1893 . 20) (undo-tree-id1894 . 18) (undo-tree-id1895 . 20) (undo-tree-id1896 . -2) (undo-tree-id1897 . 17) (undo-tree-id1898 . 18) (undo-tree-id1899 . -3) (undo-tree-id1900 . 16) (undo-tree-id1901 . 17) (undo-tree-id1902 . -4) (undo-tree-id1903 . 15) (undo-tree-id1904 . 16) (undo-tree-id1905 . -5) (undo-tree-id1906 . 14) (undo-tree-id1907 . 15) (undo-tree-id1908 . -6) (undo-tree-id1909 . 13) (undo-tree-id1910 . 14) (undo-tree-id1911 . -7) (undo-tree-id1912 . 12) (undo-tree-id1913 . 13) (undo-tree-id1914 . -8) (undo-tree-id1915 . 12) (undo-tree-id1916 . 12) (undo-tree-id1917 . -8) (undo-tree-id1918 . 12) (undo-tree-id1919 . -2) (undo-tree-id1920 . 20) (undo-tree-id1921 . 19) (undo-tree-id1922 . 20) (undo-tree-id1923 . -1) (undo-tree-id1924 . 18) (undo-tree-id1925 . 19) (undo-tree-id1926 . -2) (undo-tree-id1927 . 17) (undo-tree-id1928 . 18) (undo-tree-id1929 . -3) (undo-tree-id1930 . 15) (undo-tree-id1931 . 17) (undo-tree-id1932 . -5) (undo-tree-id1933 . 14) (undo-tree-id1934 . 15) (undo-tree-id1935 . -6) (undo-tree-id1936 . 12) (undo-tree-id1937 . 14) (undo-tree-id1938 . -8) (undo-tree-id1939 . 11) (undo-tree-id1940 . 12) (undo-tree-id1941 . -9) (undo-tree-id1942 . 10) (undo-tree-id1943 . 11) (undo-tree-id1944 . -10) (undo-tree-id1945 . 9) (undo-tree-id1946 . 10) (undo-tree-id1947 . -11) (undo-tree-id1948 . 8) (undo-tree-id1949 . 9) (undo-tree-id1950 . -12) (undo-tree-id1951 . 7) (undo-tree-id1952 . 8) (undo-tree-id1953 . -13) (undo-tree-id1954 . 6) (undo-tree-id1955 . 7) (undo-tree-id1956 . -14) (undo-tree-id1957 . 3) (undo-tree-id1958 . 6) (undo-tree-id1959 . -17) (undo-tree-id1960 . 1) (undo-tree-id1961 . 3) (undo-tree-id1962 . -19) (undo-tree-id1963 . 1) (undo-tree-id1964 . 1) (undo-tree-id1965 . -20) (undo-tree-id1966 . 19) (undo-tree-id1967 . -2) (undo-tree-id1968 . -20) (undo-tree-id1969 . -20) (undo-tree-id1970 . -20) (undo-tree-id1971 . -20) 820 (t 23394 4376 946928 140000)) nil (23394 4525 409940 0) 0 nil]) ((716 . 720)) nil (23394 4376 934935 0) 0 nil]) ((#("e" 0 1 (fontified t font-lock-face rjsx-attr)) . -716) (undo-tree-id1814 . -1) (undo-tree-id1815 . -1) (undo-tree-id1816 . -1) (undo-tree-id1817 . 1) (undo-tree-id1818 . -1) (undo-tree-id1819 . -1) (undo-tree-id1820 . -1) (undo-tree-id1821 . -1) (#("s" 0 1 (fontified t font-lock-face rjsx-attr)) . -717) (undo-tree-id1822 . -1) (undo-tree-id1823 . -1) (undo-tree-id1824 . -1) (undo-tree-id1825 . 1) (undo-tree-id1826 . -1) (undo-tree-id1827 . -1) (undo-tree-id1828 . -1) 718 (t 23394 4369 866226 601000)) nil (23394 4376 935011 0) 0 nil]) ((716 . 718)) nil (23394 4369 854955 0) 0 nil]) ((#("e" 0 1 (fontified t font-lock-face rjsx-attr)) . -716) (undo-tree-id1808 . -1) (undo-tree-id1809 . -1) (undo-tree-id1810 . -1) (undo-tree-id1811 . 1) (undo-tree-id1812 . -1) (undo-tree-id1813 . -1) 717) nil (23394 4369 855013 0) 0 nil]) ((716 . 717) (t 23394 4347 904807 441000)) nil (23394 4369 855017 0) 0 nil]) ((818 . 821)) nil (23394 4347 895545 0) 0 nil]) ((#("TabBar" 0 6 (fontified t)) . -818) (undo-tree-id1751 . -6) (undo-tree-id1752 . -6) (undo-tree-id1753 . 1) (undo-tree-id1754 . -5) (undo-tree-id1755 . 1) (undo-tree-id1756 . 1) (undo-tree-id1757 . -5) (undo-tree-id1758 . 1) (undo-tree-id1759 . -6) (undo-tree-id1760 . -6) 824) nil (23394 4347 895609 0) 0 nil]) ((#("N" 0 1 (fontified t font-lock-face rjsx-attr)) . -716) (undo-tree-id1761 . -1) (undo-tree-id1762 . -1) (undo-tree-id1763 . -1) (undo-tree-id1764 . -1) (undo-tree-id1765 . -1) (undo-tree-id1766 . -1) (undo-tree-id1767 . -1) (undo-tree-id1768 . -1) (undo-tree-id1769 . -1) (undo-tree-id1770 . -1) (undo-tree-id1771 . -1) (undo-tree-id1772 . -1) (undo-tree-id1773 . -1) (undo-tree-id1774 . -1) (#("a" 0 1 (fontified t font-lock-face rjsx-attr)) . -717) (undo-tree-id1775 . -1) (undo-tree-id1776 . -1) (undo-tree-id1777 . -1) (undo-tree-id1778 . -1) (undo-tree-id1779 . -1) (undo-tree-id1780 . -1) (undo-tree-id1781 . -1) (undo-tree-id1782 . -1) (undo-tree-id1783 . -1) (undo-tree-id1784 . -1) (undo-tree-id1785 . -1) (undo-tree-id1786 . -1) (undo-tree-id1787 . -1) (#("m" 0 1 (fontified t font-lock-face rjsx-attr)) . -718) (undo-tree-id1788 . -1) (undo-tree-id1789 . -1) (undo-tree-id1790 . -1) (undo-tree-id1791 . 1) (undo-tree-id1792 . 1) (undo-tree-id1793 . 1) (undo-tree-id1794 . 1) (undo-tree-id1795 . -1) (undo-tree-id1796 . -1) (undo-tree-id1797 . -1) (undo-tree-id1798 . -1) (undo-tree-id1799 . -1) (#("e" 0 1 (font-lock-face rjsx-attr fontified t)) . -719) (undo-tree-id1800 . -1) (undo-tree-id1801 . -1) (undo-tree-id1802 . 1) (undo-tree-id1803 . 1) (undo-tree-id1804 . 1) (undo-tree-id1805 . -1) (undo-tree-id1806 . 1) (undo-tree-id1807 . -1) 720 (t 23394 4161 109994 986000)) nil (23394 4347 895714 0) 0 nil]) ((244 . 246)) nil (23394 4161 90859 0) 0 nil]) ((#("2" 0 1 (fontified t font-lock-face font-lock-string-face)) . -244) (undo-tree-id1560 . -1) (undo-tree-id1561 . -1) (undo-tree-id1562 . 1) (undo-tree-id1563 . -1) (undo-tree-id1564 . -1) (undo-tree-id1565 . -1) (#("0" 0 1 (fontified t font-lock-face font-lock-string-face)) . -245) (undo-tree-id1566 . -1) (undo-tree-id1567 . -1) (undo-tree-id1568 . 1) (undo-tree-id1569 . -1) 246) nil (23394 4161 90917 0) 0 nil]) ((244 . 246)) nil (23394 4161 90921 0) 0 nil]) ((#("0" 0 1 (fontified t font-lock-face font-lock-string-face)) . -244) (undo-tree-id1570 . -1) (undo-tree-id1571 . -1) (undo-tree-id1572 . -1) (undo-tree-id1573 . -1) (undo-tree-id1574 . -1) (undo-tree-id1575 . -1) (undo-tree-id1576 . -1) (undo-tree-id1577 . -1) (undo-tree-id1578 . -1) (undo-tree-id1579 . -1) (undo-tree-id1580 . -1) (undo-tree-id1581 . -1) (undo-tree-id1582 . 1) (undo-tree-id1583 . -1) (undo-tree-id1584 . -1) (undo-tree-id1585 . -1) (undo-tree-id1586 . -1) (undo-tree-id1587 . -1) (undo-tree-id1588 . -1) (undo-tree-id1589 . -1) (undo-tree-id1590 . -1) (undo-tree-id1591 . -1) (undo-tree-id1592 . -1) (undo-tree-id1593 . -1) (undo-tree-id1594 . -1) (undo-tree-id1595 . -1) (undo-tree-id1596 . -1) (undo-tree-id1597 . -1) (undo-tree-id1598 . -1) (undo-tree-id1599 . -1) (#("." 0 1 (fontified t font-lock-face font-lock-string-face)) . -245) (undo-tree-id1600 . -1) (undo-tree-id1601 . -1) (undo-tree-id1602 . -1) (undo-tree-id1603 . -1) (undo-tree-id1604 . -1) (undo-tree-id1605 . -1) (undo-tree-id1606 . -1) (undo-tree-id1607 . -1) (undo-tree-id1608 . -1) (undo-tree-id1609 . -1) (undo-tree-id1610 . -1) (undo-tree-id1611 . -1) (undo-tree-id1612 . 1) (undo-tree-id1613 . -1) (undo-tree-id1614 . -1) (undo-tree-id1615 . -1) (undo-tree-id1616 . -1) (undo-tree-id1617 . -1) (undo-tree-id1618 . -1) (undo-tree-id1619 . -1) (undo-tree-id1620 . -1) (undo-tree-id1621 . -1) (undo-tree-id1622 . -1) (undo-tree-id1623 . -1) (undo-tree-id1624 . -1) (undo-tree-id1625 . -1) (undo-tree-id1626 . -1) (undo-tree-id1627 . -1) (#("2" 0 1 (fontified t font-lock-face font-lock-string-face)) . -246) (undo-tree-id1628 . -1) (undo-tree-id1629 . -1) (undo-tree-id1630 . -1) (undo-tree-id1631 . -1) (undo-tree-id1632 . -1) (undo-tree-id1633 . -1) (undo-tree-id1634 . -1) (undo-tree-id1635 . -1) (undo-tree-id1636 . -1) (undo-tree-id1637 . -1) (undo-tree-id1638 . -1) (undo-tree-id1639 . 1) (undo-tree-id1640 . -1) (undo-tree-id1641 . -1) (undo-tree-id1642 . -1) (undo-tree-id1643 . -1) (undo-tree-id1644 . -1) (undo-tree-id1645 . -1) (undo-tree-id1646 . -1) (undo-tree-id1647 . -1) (undo-tree-id1648 . -1) (undo-tree-id1649 . -1) (#("5" 0 1 (fontified t font-lock-face font-lock-string-face)) . -247) (undo-tree-id1650 . -1) (undo-tree-id1651 . -1) (undo-tree-id1652 . -1) (undo-tree-id1653 . -1) (undo-tree-id1654 . -1) (undo-tree-id1655 . -1) (undo-tree-id1656 . -1) (undo-tree-id1657 . -1) (undo-tree-id1658 . -1) (undo-tree-id1659 . -1) (undo-tree-id1660 . -1) (undo-tree-id1661 . 1) (undo-tree-id1662 . -1) (undo-tree-id1663 . -1) (undo-tree-id1664 . -1) (undo-tree-id1665 . -1) (undo-tree-id1666 . -1) (undo-tree-id1667 . -1) (undo-tree-id1668 . -1) (undo-tree-id1669 . -1) (#("v" 0 1 (fontified t font-lock-face font-lock-string-face)) . -248) (undo-tree-id1670 . -1) (undo-tree-id1671 . -1) (undo-tree-id1672 . -1) (undo-tree-id1673 . -1) (undo-tree-id1674 . -1) (undo-tree-id1675 . 1) (undo-tree-id1676 . 1) (undo-tree-id1677 . 1) (undo-tree-id1678 . 1) (undo-tree-id1679 . 1) (undo-tree-id1680 . 1) (undo-tree-id1681 . 1) (undo-tree-id1682 . 1) (undo-tree-id1683 . 1) (undo-tree-id1684 . 1) (undo-tree-id1685 . 1) (undo-tree-id1686 . 1) (undo-tree-id1687 . 1) (undo-tree-id1688 . 1) (undo-tree-id1689 . 1) (undo-tree-id1690 . 1) (undo-tree-id1691 . 1) (undo-tree-id1692 . 1) (undo-tree-id1693 . 1) (undo-tree-id1694 . 1) (undo-tree-id1695 . 1) (undo-tree-id1696 . 1) (undo-tree-id1697 . -1) (undo-tree-id1698 . 1) (undo-tree-id1699 . 1) (undo-tree-id1700 . 1) (undo-tree-id1701 . 1) (undo-tree-id1702 . 1) (undo-tree-id1703 . 1) (undo-tree-id1704 . 1) (undo-tree-id1705 . 1) (undo-tree-id1706 . 1) (undo-tree-id1707 . 1) (undo-tree-id1708 . -1) (undo-tree-id1709 . -1) (undo-tree-id1710 . -1) (undo-tree-id1711 . -1) (undo-tree-id1712 . -1) (undo-tree-id1713 . 1) (undo-tree-id1714 . 1) (undo-tree-id1715 . 1) (undo-tree-id1716 . 1) (undo-tree-id1717 . 1) (undo-tree-id1718 . 1) (undo-tree-id1719 . 1) (undo-tree-id1720 . 1) (undo-tree-id1721 . 1) (undo-tree-id1722 . 1) (undo-tree-id1723 . 1) (undo-tree-id1724 . 1) (undo-tree-id1725 . 1) (undo-tree-id1726 . 1) (undo-tree-id1727 . -1) (undo-tree-id1728 . -1) (undo-tree-id1729 . -1) (undo-tree-id1730 . -1) (undo-tree-id1731 . -1) (#("w" 0 1 (fontified t font-lock-face font-lock-string-face)) . -249) (undo-tree-id1732 . -1) (undo-tree-id1733 . -1) (undo-tree-id1734 . -1) (undo-tree-id1735 . 1) (undo-tree-id1736 . 1) (undo-tree-id1737 . 1) (undo-tree-id1738 . 1) (undo-tree-id1739 . -1) (undo-tree-id1740 . 1) (undo-tree-id1741 . 1) (undo-tree-id1742 . -1) (undo-tree-id1743 . 1) (undo-tree-id1744 . 1) (undo-tree-id1745 . -1) (undo-tree-id1746 . 1) (undo-tree-id1747 . 1) (undo-tree-id1748 . 1) (undo-tree-id1749 . 1) (undo-tree-id1750 . -1) 250 (t 23394 4085 469280 246000)) nil (23394 4161 91316 0) 0 nil]) ((734 . 740)) nil (23394 4085 453323 0) 0 nil]) ((#("
" 0 1 (fontified t)) . -277) (undo-tree-id1538 . -1) (undo-tree-id1539 . -1) (undo-tree-id1540 . -1) (undo-tree-id1541 . 1) (undo-tree-id1542 . 1) (undo-tree-id1543 . -1) 278) nil (23394 4085 453365 0) 0 nil]) ((#("  " 0 2 (fontified nil)) . 277) (277 . 279) (276 . 278)) nil (23394 4085 453370 0) 0 nil]) ((732 . 733)) nil (23394 4085 453372 0) 0 nil]) ((#("/" 0 1 (fontified t help-echo "missing `}' after expression" cursor-sensor-functions #1#)) . -732) (undo-tree-id1544 . -1) (undo-tree-id1545 . -1) (undo-tree-id1546 . -1) (undo-tree-id1547 . -1) (undo-tree-id1548 . 1) (undo-tree-id1549 . -1) 733) nil (23394 4085 453383 0) 0 nil]) ((727 . 733)) nil (23394 4085 453385 0) 0 nil]) ((#("l" 0 1 (fontified t help-echo "Undeclared variable or function 'cll'" cursor-sensor-functions #1#)) . -727) (undo-tree-id1550 . -1) (undo-tree-id1551 . -1) (undo-tree-id1552 . -1) (undo-tree-id1553 . 1) (undo-tree-id1554 . -1) 728) nil (23394 4085 453401 0) 0 nil]) ((726 . 728)) nil (23394 4085 453407 0) 0 nil]) ((#("a" 0 1 (fontified t help-echo "Undeclared variable or function 'ca'" cursor-sensor-functions #1#)) . -726) (undo-tree-id1555 . -1) (undo-tree-id1556 . -1) (undo-tree-id1557 . -1) (undo-tree-id1558 . 1) (undo-tree-id1559 . -1) 727) nil (23394 4085 453428 0) 0 nil]) ((725 . 727) (t 23394 4055 366827 341000)) nil (23394 4085 453430 0) 0 nil]) ((355 . 357)) nil (23394 4055 350574 0) 0 nil]) ((#(";" 0 1 (fontified t)) . -355) (undo-tree-id1447 . -1) (undo-tree-id1448 . -1) (undo-tree-id1449 . 1) (undo-tree-id1450 . -1) 356) nil (23394 4055 350617 0) 0 nil]) ((355 . 356)) nil (23394 4055 350620 0) 0 nil]) ((#("s" 0 1 (fontified t font-lock-face js2-object-property-access help-echo "missing ; after statement" cursor-sensor-functions #1#)) . -355) (undo-tree-id1451 . -1) (undo-tree-id1452 . -1) (undo-tree-id1453 . -1) (undo-tree-id1454 . 1) (undo-tree-id1455 . -1) 356) nil (23394 4055 350649 0) 0 nil]) ((345 . 356)) nil (23394 4055 350651 0) 0 nil]) ((#("  " 0 2 (fontified t)) . -328) (undo-tree-id1456 . 2) 347) nil (23394 4055 350656 0) 0 nil]) ((nil rear-nonsticky nil 346 . 347) (328 . 347)) nil (23394 4055 350658 0) 0 nil]) ((323 . 328)) nil (23394 4055 350660 0) 0 nil]) ((#("  const {classes} =" 0 2 (fontified t) 2 7 (fontified t font-lock-face js2-object-property) 7 8 (fontified t) 8 9 (fontified t help-echo "missing : after property id" cursor-sensor-functions #1# face (rainbow-delimiters-depth-2-face)) 9 16 (fontified t font-lock-face js2-object-property help-echo "Undeclared variable or function 'classes'" cursor-sensor-functions #1#) 16 17 (fontified t face (rainbow-delimiters-depth-2-face)) 17 18 (fontified t) 18 19 (fontified t help-echo "syntax error" cursor-sensor-functions #1#)) . 310) (undo-tree-id1457 . -19) (undo-tree-id1458 . -2) (undo-tree-id1459 . 17) (undo-tree-id1460 . -3) (undo-tree-id1461 . 16) (undo-tree-id1462 . -4) (undo-tree-id1463 . 15) (undo-tree-id1464 . -5) (undo-tree-id1465 . 14) (undo-tree-id1466 . -6) (undo-tree-id1467 . 13) (undo-tree-id1468 . -7) (undo-tree-id1469 . 3) (undo-tree-id1470 . 11) (undo-tree-id1471 . -9) (undo-tree-id1472 . 3) (undo-tree-id1473 . 10) (undo-tree-id1474 . -10) (undo-tree-id1475 . 3) (undo-tree-id1476 . 9) (undo-tree-id1477 . -11) (undo-tree-id1478 . 3) (undo-tree-id1479 . 8) (undo-tree-id1480 . -12) (undo-tree-id1481 . 3) (undo-tree-id1482 . 7) (undo-tree-id1483 . -13) (undo-tree-id1484 . 3) (undo-tree-id1485 . 6) (undo-tree-id1486 . -14) (undo-tree-id1487 . 3) (undo-tree-id1488 . 5) (undo-tree-id1489 . -15) (undo-tree-id1490 . 3) (undo-tree-id1491 . 4) (undo-tree-id1492 . -16) (undo-tree-id1493 . 3) (undo-tree-id1494 . 3) (undo-tree-id1495 . -16) (undo-tree-id1496 . 3) (undo-tree-id1497 . 3) (undo-tree-id1498 . -16) (undo-tree-id1499 . 3) (undo-tree-id1500 . -17) (undo-tree-id1501 . 3) (undo-tree-id1502 . -16) (undo-tree-id1503 . 3) (undo-tree-id1504 . -17) (undo-tree-id1505 . 2) (undo-tree-id1506 . -18) (undo-tree-id1507 . 1) (undo-tree-id1508 . -19) (undo-tree-id1509 . -19) (undo-tree-id1510 . -19) (undo-tree-id1511 . 19) (undo-tree-id1512 . 18) (undo-tree-id1513 . 19) (undo-tree-id1514 . -1) (undo-tree-id1515 . 11) (undo-tree-id1516 . 18) (undo-tree-id1517 . -7) (undo-tree-id1518 . 11) (undo-tree-id1519 . 12) (undo-tree-id1520 . -8) (undo-tree-id1521 . -9) (undo-tree-id1522 . -16) (undo-tree-id1523 . -18) (undo-tree-id1524 . -19) (undo-tree-id1525 . -18) (undo-tree-id1526 . -19) (undo-tree-id1527 . -8) (undo-tree-id1528 . -9) (undo-tree-id1529 . 11) (undo-tree-id1530 . 11) (undo-tree-id1531 . -8) (undo-tree-id1532 . 11) (undo-tree-id1533 . -19) (undo-tree-id1534 . 19) (undo-tree-id1535 . 19) (undo-tree-id1536 . 19) (undo-tree-id1537 . -19) (t 23394 4046 234360 24000)) nil (23394 4055 350810 0) 0 nil]) ((#(" " 0 1 (fontified t)) . -329) (undo-tree-id1417 . 1) (undo-tree-id1418 . -1) (undo-tree-id1419 . 1) (undo-tree-id1420 . 1) 318) nil (23394 4046 220662 0) 0 nil]) ((317 . 318)) nil (23394 4046 220670 0) 0 nil]) ((326 . 329)) nil (23394 4046 220673 0) 0 nil]) ((#(":" 0 1 (fontified t)) . -325) (undo-tree-id1421 . -1) (undo-tree-id1422 . -1) (undo-tree-id1423 . -1) (undo-tree-id1424 . 1) (undo-tree-id1425 . -1) 326) nil (23394 4046 220683 0) 0 nil]) ((323 . 326)) nil (23394 4046 220685 0) 0 nil]) ((318 . 323) (317 . 319) (#("{" 0 1 (fontified nil font-lock-face js2-object-property help-echo "Undeclared variable or function 'const'" cursor-sensor-functions #1#)) . -317) (312 . 318)) nil (23394 4046 220688 0) 0 nil]) ((309 . 312)) nil (23394 4046 220690 0) 0 nil]) ((689 . 691) (#("{" 0 1 (fontified nil help-echo "missing value after prop `className'" cursor-sensor-functions #1#)) . -689) (685 . 690)) nil (23394 4046 220692 0) 0 nil]) ((#("m" 0 1 (fontified t font-lock-face rjsx-attr)) . -685) (undo-tree-id1426 . -1) (undo-tree-id1427 . -1) (undo-tree-id1428 . 1) (undo-tree-id1429 . -1) 686) nil (23394 4046 220706 0) 0 nil]) ((682 . 686)) nil (23394 4046 220709 0) 0 nil]) ((#("a" 0 1 (fontified t font-lock-face rjsx-attr)) . -682) (undo-tree-id1430 . -1) (undo-tree-id1431 . -1) (undo-tree-id1432 . -1) (undo-tree-id1433 . 1) (undo-tree-id1434 . -1) (undo-tree-id1435 . -1) (undo-tree-id1436 . -1) (#("s" 0 1 (fontified t font-lock-face rjsx-attr)) . -683) (undo-tree-id1437 . -1) (undo-tree-id1438 . -1) (undo-tree-id1439 . -1) (undo-tree-id1440 . 1) (undo-tree-id1441 . -1) 684) nil (23394 4046 220734 0) 0 nil]) ((678 . 684)) nil (23394 4046 220737 0) 0 nil]) ((#("c" 0 1 (fontified t font-lock-face rjsx-tag help-echo "Undeclared variable or function 'TabBarc'" cursor-sensor-functions #1#)) . -678) (undo-tree-id1442 . -1) (undo-tree-id1443 . -1) (undo-tree-id1444 . -1) (undo-tree-id1445 . 1) (undo-tree-id1446 . -1) 679) nil (23394 4046 220751 0) 0 nil]) ((678 . 679) (t 23394 3930 775167 422000)) nil (23394 4046 220753 0) 0 nil]) ((246 . 248)) nil (23394 3930 760626 0) 0 nil]) ((#("1" 0 1 (fontified t font-lock-face font-lock-string-face)) . -246) (undo-tree-id1406 . -1) (undo-tree-id1407 . -1) (undo-tree-id1408 . 1) (undo-tree-id1409 . -1) (undo-tree-id1410 . 1) (undo-tree-id1411 . 1) (undo-tree-id1412 . 1) (undo-tree-id1413 . 1) (undo-tree-id1414 . 1) (undo-tree-id1415 . 1) (undo-tree-id1416 . -1) 247 (t 23394 3925 89310 530000)) nil (23394 3930 760684 0) 0 nil]) ((244 . 246) (t 23394 3894 287083 982000)) nil (23394 3925 74523 0) 0 nil]) ((265 . 266)) nil (23394 3894 273696 0) 0 nil]) ((#("1" 0 1 (fontified t font-lock-face font-lock-string-face)) . -265) (undo-tree-id1332 . -1) (undo-tree-id1333 . -1) (undo-tree-id1334 . -1) (undo-tree-id1335 . -1) (undo-tree-id1336 . 1) (undo-tree-id1337 . 1) (undo-tree-id1338 . 1) (undo-tree-id1339 . 1) (undo-tree-id1340 . -1) (undo-tree-id1341 . 1) (undo-tree-id1342 . 1) (undo-tree-id1343 . -1) 266) nil (23394 3894 273756 0) 0 nil]) ((257 . 260)) nil (23394 3894 273760 0) 0 nil]) ((#("f" 0 1 (fontified t font-lock-face js2-object-property)) . -257) (undo-tree-id1344 . -1) (undo-tree-id1345 . -1) (undo-tree-id1346 . -1) (undo-tree-id1347 . 1) (undo-tree-id1348 . -1) 258) nil (23394 3894 273768 0) 0 nil]) ((254 . 258)) nil (23394 3894 273770 0) 0 nil]) ((#("j" 0 1 (fontified t font-lock-face js2-object-property)) . -254) (undo-tree-id1349 . -1) (undo-tree-id1350 . -1) (undo-tree-id1351 . 1) (undo-tree-id1352 . -1) (undo-tree-id1353 . -1) (undo-tree-id1354 . -1) (#("e" 0 1 (fontified t font-lock-face js2-object-property)) . -255) (undo-tree-id1355 . -1) (undo-tree-id1356 . -1) (undo-tree-id1357 . 1) (undo-tree-id1358 . -1) 256) nil (23394 3894 273797 0) 0 nil]) ((254 . 256)) nil (23394 3894 273800 0) 0 nil]) ((#("width" 0 5 (font-lock-face js2-object-property fontified t)) . 254) (undo-tree-id1359 . 5) (undo-tree-id1360 . 5) (undo-tree-id1361 . -5) (undo-tree-id1362 . -5)) nil (23394 3894 273807 0) 0 nil]) ((244 . 245)) nil (23394 3894 273809 0) 0 nil]) ((#("0" 0 1 (fontified t font-lock-face font-lock-string-face)) . -244) (undo-tree-id1363 . -1) (undo-tree-id1364 . -1) (undo-tree-id1365 . -1) (undo-tree-id1366 . -1) (undo-tree-id1367 . 1) (undo-tree-id1368 . -1) (undo-tree-id1369 . -1) (undo-tree-id1370 . -1) (undo-tree-id1371 . -1) (undo-tree-id1372 . -1) (undo-tree-id1373 . -1) (undo-tree-id1374 . -1) 245) nil (23394 3894 273824 0) 0 nil]) ((#("." 0 1 (fontified t font-lock-face font-lock-string-face)) . -245) (undo-tree-id1375 . -1) (undo-tree-id1376 . -1) (undo-tree-id1377 . -1) (undo-tree-id1378 . 1) (undo-tree-id1379 . -1) (undo-tree-id1380 . -1) (undo-tree-id1381 . -1) (undo-tree-id1382 . -1) (undo-tree-id1383 . -1) (#("1" 0 1 (fontified t font-lock-face font-lock-string-face)) . -246) (undo-tree-id1384 . -1) (undo-tree-id1385 . -1) (undo-tree-id1386 . -1) (undo-tree-id1387 . 1) (undo-tree-id1388 . -1) (undo-tree-id1389 . -1) (undo-tree-id1390 . -1) 247) nil (23394 3894 273861 0) 0 nil]) ((#("1" 0 1 (fontified t font-lock-face font-lock-string-face)) . 247) (undo-tree-id1391 . -1) (undo-tree-id1392 . 1) (undo-tree-id1393 . 1) (undo-tree-id1394 . 1) (undo-tree-id1395 . 1) (undo-tree-id1396 . 1) (undo-tree-id1397 . 1) (undo-tree-id1398 . 1) (undo-tree-id1399 . 1) (undo-tree-id1400 . 1) (undo-tree-id1401 . 1) (undo-tree-id1402 . 1) (undo-tree-id1403 . 1) (undo-tree-id1404 . 1) (undo-tree-id1405 . 1)) nil (23394 3894 273896 0) 0 nil]) ((244 . 247) (t 23394 3859 809208 110000)) nil (23394 3894 273899 0) 0 nil]) ((767 . 768) 244) nil (23394 3859 795253 0) 0 nil]) ((#("0" 0 1 (fontified t font-lock-face font-lock-string-face)) . -244) (undo-tree-id1310 . -1) (undo-tree-id1311 . -1) (undo-tree-id1312 . -1) (undo-tree-id1313 . -1) (undo-tree-id1314 . -1) (undo-tree-id1315 . -1) (#("." 0 1 (fontified t font-lock-face font-lock-string-face)) . -245) (undo-tree-id1316 . -1) (undo-tree-id1317 . -1) (undo-tree-id1318 . -1) (undo-tree-id1319 . 1) (undo-tree-id1320 . 1) (undo-tree-id1321 . -1) 246) nil (23394 3859 795317 0) 0 nil]) ((268 . 269)) nil (23394 3859 795320 0) 0 nil]) ((#("w" 0 1 (fontified t font-lock-face font-lock-string-face)) . -268) (undo-tree-id1322 . -1) (undo-tree-id1323 . -1) (undo-tree-id1324 . -1) (undo-tree-id1325 . 1) (undo-tree-id1326 . 1) (undo-tree-id1327 . -1) (undo-tree-id1328 . 1) (undo-tree-id1329 . 1) (undo-tree-id1330 . -1) 269) nil (23394 3859 795331 0) 0 nil]) ((#("    " 0 4 (fontified t)) . -256) (undo-tree-id1331 . 4) 274) nil (23394 3859 795338 0) 0 nil]) ((256 . 274)) nil (23394 3859 795344 0) 0 nil]) ((251 . 256)) nil (23394 3859 795345 0) 0 nil]) ((250 . 251)) nil (23394 3859 795346 0) 0 nil] [nil ([nil ([nil ([nil nil ((232 . 236) (232 . 233)) ((#("," 0 1 (fontified nil help-echo "invalid property id" cursor-sensor-functions #1#)) . 232) (undo-tree-id1298 . -1) (undo-tree-id1299 . -1) (undo-tree-id1300 . -1) (undo-tree-id1301 . 1) (undo-tree-id1302 . -1) (#("    " 0 4 (fontified t)) . 232) (undo-tree-id1303 . -4) (undo-tree-id1304 . 4)) (23394 3846 390483 0) 0 nil]) ((#("m" 0 1 (fontified t font-lock-face js2-object-property help-echo "Undeclared variable or function 'm'" cursor-sensor-functions #1#)) . -232) (undo-tree-id1284 . -1) (undo-tree-id1285 . -1) (undo-tree-id1286 . -1) (undo-tree-id1287 . -1) (undo-tree-id1288 . 1) (undo-tree-id1289 . -1) 233) ((232 . 233)) (23394 3846 390859 0) 0 nil]) ((232 . 233)) ((#("m" 0 1 (fontified t font-lock-face js2-object-property help-echo "Undeclared variable or function 'm'" cursor-sensor-functions #1#)) . 232) (undo-tree-id1305 . -1) (undo-tree-id1306 . -1) (undo-tree-id1307 . -1) (undo-tree-id1308 . 1) (undo-tree-id1309 . -1)) (23394 3846 598667 0) 0 nil]) ((#("    width: '0.1vw'" 0 4 (fontified t) 4 9 (fontified t font-lock-face js2-object-property) 9 11 (fontified t) 11 15 (fontified t font-lock-face font-lock-string-face) 15 18 (fontified t font-lock-face font-lock-string-face)) . 232) (undo-tree-id1290 . -18) (undo-tree-id1291 . -18) (undo-tree-id1292 . -18) (undo-tree-id1293 . -18) (undo-tree-id1294 . 18) (undo-tree-id1295 . -18) (undo-tree-id1296 . -18) (undo-tree-id1297 . -18) 250) ((232 . 250)) (23394 3846 886711 0) 0 nil] [nil nil ((#("    width: '0.1vw'" 0 4 (fontified t) 4 9 (fontified t font-lock-face js2-object-property) 9 11 (fontified t) 11 15 (fontified t font-lock-face font-lock-string-face) 15 18 (fontified t font-lock-face font-lock-string-face)) . 232)) ((232 . 250)) (23394 3844 272600 0) 0 (:region [232 250 nil nil])]) ((undo-tree-id252 . -16) (undo-tree-id253 . -17) (undo-tree-id254 . -4) (undo-tree-id255 . -4) (undo-tree-id256 . -4) (undo-tree-id257 . 14) (undo-tree-id258 . -5) (undo-tree-id259 . 13) (undo-tree-id260 . -6) (undo-tree-id261 . 12) (undo-tree-id262 . -7) (undo-tree-id263 . 11) (undo-tree-id264 . -8) (undo-tree-id265 . 10) (undo-tree-id266 . -9) (undo-tree-id267 . 9) (undo-tree-id268 . -10) (undo-tree-id269 . 8) (undo-tree-id270 . -11) (undo-tree-id271 . 6) (undo-tree-id272 . -13) (undo-tree-id273 . 5) (undo-tree-id274 . -14) (undo-tree-id275 . 4) (undo-tree-id276 . -15) (undo-tree-id277 . 3) (undo-tree-id278 . -16) (undo-tree-id279 . 1) (undo-tree-id280 . -16) (undo-tree-id281 . -16) (undo-tree-id282 . 4) (undo-tree-id283 . -14) (undo-tree-id284 . 6) (undo-tree-id285 . 4) (undo-tree-id286 . -11) (undo-tree-id287 . 6) (undo-tree-id288 . 7) (undo-tree-id289 . -12) (undo-tree-id290 . 6) (undo-tree-id291 . -18) (undo-tree-id292 . 1) (undo-tree-id293 . -16) (undo-tree-id294 . 1) (undo-tree-id295 . 1) (undo-tree-id296 . -16) (undo-tree-id297 . 1) (undo-tree-id298 . 2) (undo-tree-id299 . -17) (undo-tree-id300 . 18) (undo-tree-id301 . 1) (undo-tree-id302 . 18) (undo-tree-id303 . 18) (undo-tree-id304 . -18)) nil (23394 3847 190655 0) 0 nil] [nil nil ((#("    width: '0.1vw'" 0 4 (fontified nil) 4 9 (fontified nil font-lock-face js2-object-property) 9 11 (fontified nil) 11 15 (fontified nil font-lock-face font-lock-string-face) 15 18 (fontified nil font-lock-face font-lock-string-face)) . 232) (undo-tree-id1232 . -16) (undo-tree-id1233 . -17) (undo-tree-id1234 . -4) (undo-tree-id1235 . -4) (undo-tree-id1236 . -4) (undo-tree-id1237 . 14) (undo-tree-id1238 . -5) (undo-tree-id1239 . 13) (undo-tree-id1240 . -6) (undo-tree-id1241 . 12) (undo-tree-id1242 . -7) (undo-tree-id1243 . 11) (undo-tree-id1244 . -8) (undo-tree-id1245 . 10) (undo-tree-id1246 . -9) (undo-tree-id1247 . 9) (undo-tree-id1248 . -10) (undo-tree-id1249 . 8) (undo-tree-id1250 . -11) (undo-tree-id1251 . 6) (undo-tree-id1252 . -13) (undo-tree-id1253 . 5) (undo-tree-id1254 . -14) (undo-tree-id1255 . 4) (undo-tree-id1256 . -15) (undo-tree-id1257 . 3) (undo-tree-id1258 . -16) (undo-tree-id1259 . 1) (undo-tree-id1260 . -16) (undo-tree-id1261 . -16) (undo-tree-id1262 . 4) (undo-tree-id1263 . -14) (undo-tree-id1264 . 6) (undo-tree-id1265 . 4) (undo-tree-id1266 . -11) (undo-tree-id1267 . 6) (undo-tree-id1268 . 7) (undo-tree-id1269 . -12) (undo-tree-id1270 . 6) (undo-tree-id1271 . -18) (undo-tree-id1272 . 1) (undo-tree-id1273 . -16) (undo-tree-id1274 . 1) (undo-tree-id1275 . 1) (undo-tree-id1276 . -16) (undo-tree-id1277 . 1) (undo-tree-id1278 . 2) (undo-tree-id1279 . -17) (undo-tree-id1280 . 18) (undo-tree-id1281 . 1) (undo-tree-id1282 . 18) (undo-tree-id1283 . 18)) ((232 . 250)) (23394 3844 272597 0) 0 nil]) ((248 . 249)) nil (23394 3844 272426 0) 0 nil]) ((#("h" 0 1 (fontified t font-lock-face font-lock-string-face)) . -248) (undo-tree-id305 . -1) (undo-tree-id306 . -1) (undo-tree-id307 . -1) (undo-tree-id308 . 1) (undo-tree-id309 . -1) (undo-tree-id310 . -1) (undo-tree-id311 . -1) 249) nil (23394 3844 270572 0) 0 nil]) ((249 . 250) (243 . 244)) nil (23394 3844 270575 0) 0 nil]) ((243 . 248)) nil (23394 3844 270577 0) 0 nil]) ((236 . 243)) nil (23394 3844 270579 0) 0 nil]) ((231 . 236)) nil (23394 3844 270581 0) 0 nil]) ((#("
" 0 1 (fontified t)) . 232) (undo-tree-id312 . -1) (undo-tree-id313 . 1) (undo-tree-id314 . 1) (undo-tree-id315 . -1) (undo-tree-id316 . 1) (undo-tree-id317 . 1) (undo-tree-id318 . 1) (undo-tree-id319 . 1) (undo-tree-id320 . 1) (undo-tree-id321 . 1) (undo-tree-id322 . 1) (undo-tree-id323 . 1) (undo-tree-id324 . 1) (undo-tree-id325 . 1) (undo-tree-id326 . 1) (undo-tree-id327 . -1)) nil (23394 3844 270609 0) 0 nil]) ((#("
" 0 1 (fontified t)) . 232) (undo-tree-id328 . -1) (undo-tree-id329 . 1) (undo-tree-id330 . 1) (undo-tree-id331 . 1) (undo-tree-id332 . 1) (undo-tree-id333 . 1) (undo-tree-id334 . 1) (undo-tree-id335 . 1) (undo-tree-id336 . 1) (undo-tree-id337 . 1) (undo-tree-id338 . -1)) nil (23394 3844 270633 0) 0 nil]) ((#("    margin: '20px'," 0 4 (fontified t) 4 10 (fontified t font-lock-face js2-object-property) 10 11 (fontified t) 11 12 (fontified t) 12 18 (fontified t font-lock-face font-lock-string-face) 18 19 (fontified t)) . 232) (undo-tree-id339 . 19) (undo-tree-id340 . 19) (undo-tree-id341 . 19) (undo-tree-id342 . 19) (undo-tree-id343 . 19) (undo-tree-id344 . 19) (undo-tree-id345 . 19) (undo-tree-id346 . -19)) nil (23394 3844 270649 0) 0 nil]) ((#("
" 0 1 (fontified t)) . 232) (undo-tree-id347 . 1) (undo-tree-id348 . 1) (undo-tree-id349 . 1) (undo-tree-id350 . 1) (undo-tree-id351 . 1) (undo-tree-id352 . -1)) nil (23394 3844 270659 0) 0 nil]) ((#("    flexGrow:1," 0 4 (fontified t) 4 12 (font-lock-face js2-object-property fontified t) 12 13 (fontified t) 13 15 (fontified t)) . 232) (undo-tree-id353 . 7) (undo-tree-id354 . -8) (undo-tree-id355 . 15) (undo-tree-id356 . 7) (undo-tree-id357 . -15)) nil (23394 3844 270669 0) 0 nil]) ((225 . 228)) nil (23394 3844 270671 0) 0 nil]) ((#("l" 0 1 (fontified t font-lock-face js2-object-property)) . -225) (undo-tree-id358 . -1) (undo-tree-id359 . -1) (undo-tree-id360 . 1) (undo-tree-id361 . -1) 226) nil (23394 3844 270682 0) 0 nil]) ((222 . 226)) nil (23394 3844 270684 0) 0 nil]) ((#("textField" 0 9 (fontified t font-lock-face js2-object-property)) . 222) (undo-tree-id362 . 9) (undo-tree-id363 . -9)) nil (23394 3844 270688 0) 0 nil]) ((#("
" 0 1 (fontified t)) . 220) (undo-tree-id364 . 1) (undo-tree-id365 . 1) (undo-tree-id366 . 1) (undo-tree-id367 . 1) (undo-tree-id368 . 1) (undo-tree-id369 . 1) (undo-tree-id370 . 1) (undo-tree-id371 . 1) (undo-tree-id372 . 1) (undo-tree-id373 . 1) (undo-tree-id374 . 1) (undo-tree-id375 . 1) (undo-tree-id376 . 1) (undo-tree-id377 . 1) (undo-tree-id378 . 1) (undo-tree-id379 . 1) (undo-tree-id380 . 1) (undo-tree-id381 . 1) (undo-tree-id382 . 1) (undo-tree-id383 . 1) (undo-tree-id384 . 1) (undo-tree-id385 . 1) (undo-tree-id386 . 1) (undo-tree-id387 . 1) (undo-tree-id388 . 1) (undo-tree-id389 . 1) (undo-tree-id390 . 1) (undo-tree-id391 . 1) (undo-tree-id392 . 1) (undo-tree-id393 . 1) (undo-tree-id394 . 1) (undo-tree-id395 . 1) (undo-tree-id396 . 1) (undo-tree-id397 . 1) (undo-tree-id398 . 1) (undo-tree-id399 . 1) (undo-tree-id400 . 1) (undo-tree-id401 . 1) (undo-tree-id402 . 1) (undo-tree-id403 . 1) (undo-tree-id404 . 1) (undo-tree-id405 . 1) (undo-tree-id406 . 1) (undo-tree-id407 . 1) (undo-tree-id408 . 1) (undo-tree-id409 . 1) (undo-tree-id410 . 1) (undo-tree-id411 . 1) (undo-tree-id412 . 1) (undo-tree-id413 . 1) (undo-tree-id414 . 1) (undo-tree-id415 . 1) (undo-tree-id416 . 1) (undo-tree-id417 . 1) (undo-tree-id418 . 1) (undo-tree-id419 . -1)) nil (23394 3844 270786 0) 0 nil]) ((#("  }," 0 2 (fontified t) 2 3 (fontified t face (rainbow-delimiters-depth-2-face)) 3 4 (fontified t)) . 220) (undo-tree-id420 . 4) (undo-tree-id421 . 4) (undo-tree-id422 . 4) (undo-tree-id423 . 4) (undo-tree-id424 . 4) (undo-tree-id425 . 4) (undo-tree-id426 . 4) (undo-tree-id427 . 4) (undo-tree-id428 . 4) (undo-tree-id429 . 4) (undo-tree-id430 . 4) (undo-tree-id431 . 4) (undo-tree-id432 . 4) (undo-tree-id433 . 4) (undo-tree-id434 . 4) (undo-tree-id435 . 4) (undo-tree-id436 . 4) (undo-tree-id437 . 4) (undo-tree-id438 . 4) (undo-tree-id439 . 4) (undo-tree-id440 . 4) (undo-tree-id441 . 4) (undo-tree-id442 . 4) (undo-tree-id443 . 4) (undo-tree-id444 . 4) (undo-tree-id445 . 4) (undo-tree-id446 . 4) (undo-tree-id447 . 4) (undo-tree-id448 . 4) (undo-tree-id449 . 4) (undo-tree-id450 . 4) (undo-tree-id451 . 4) (undo-tree-id452 . 4) (undo-tree-id453 . 4) (undo-tree-id454 . 4) (undo-tree-id455 . 4) (undo-tree-id456 . 4) (undo-tree-id457 . 4) (undo-tree-id458 . 4) (undo-tree-id459 . 4) (undo-tree-id460 . 4) (undo-tree-id461 . 4) (undo-tree-id462 . 4) (undo-tree-id463 . 4) (undo-tree-id464 . 4) (undo-tree-id465 . 4) (undo-tree-id466 . 4) (undo-tree-id467 . 4) (undo-tree-id468 . 4) (undo-tree-id469 . 4) (undo-tree-id470 . 4) (undo-tree-id471 . 4) (undo-tree-id472 . 4) (undo-tree-id473 . -4)) nil (23394 3844 270878 0) 0 nil]) ((#("
" 0 1 (fontified t)) . 220) (undo-tree-id474 . 1) (undo-tree-id475 . 1) (undo-tree-id476 . 1) (undo-tree-id477 . 1) (undo-tree-id478 . 1) (undo-tree-id479 . 1) (undo-tree-id480 . 1) (undo-tree-id481 . 1) (undo-tree-id482 . 1) (undo-tree-id483 . 1) (undo-tree-id484 . 1) (undo-tree-id485 . 1) (undo-tree-id486 . 1) (undo-tree-id487 . 1) (undo-tree-id488 . 1) (undo-tree-id489 . 1) (undo-tree-id490 . 1) (undo-tree-id491 . 1) (undo-tree-id492 . 1) (undo-tree-id493 . 1) (undo-tree-id494 . 1) (undo-tree-id495 . 1) (undo-tree-id496 . 1) (undo-tree-id497 . 1) (undo-tree-id498 . 1) (undo-tree-id499 . 1) (undo-tree-id500 . 1) (undo-tree-id501 . 1) (undo-tree-id502 . 1) (undo-tree-id503 . 1) (undo-tree-id504 . 1) (undo-tree-id505 . 1) (undo-tree-id506 . 1) (undo-tree-id507 . 1) (undo-tree-id508 . 1) (undo-tree-id509 . 1) (undo-tree-id510 . 1) (undo-tree-id511 . 1) (undo-tree-id512 . 1) (undo-tree-id513 . 1) (undo-tree-id514 . 1) (undo-tree-id515 . 1) (undo-tree-id516 . 1) (undo-tree-id517 . 1) (undo-tree-id518 . 1) (undo-tree-id519 . 1) (undo-tree-id520 . 1) (undo-tree-id521 . 1) (undo-tree-id522 . 1) (undo-tree-id523 . 1) (undo-tree-id524 . 1) (undo-tree-id525 . -1)) nil (23394 3844 270956 0) 0 nil]) ((#("    margin: '10px'," 0 4 (fontified t) 4 10 (fontified t font-lock-face js2-object-property) 10 11 (fontified t) 11 12 (fontified t) 12 18 (fontified t font-lock-face font-lock-string-face) 18 19 (fontified t)) . 220) (undo-tree-id526 . 19) (undo-tree-id527 . 19) (undo-tree-id528 . 19) (undo-tree-id529 . 19) (undo-tree-id530 . 19) (undo-tree-id531 . 19) (undo-tree-id532 . 19) (undo-tree-id533 . 19) (undo-tree-id534 . 19) (undo-tree-id535 . 19) (undo-tree-id536 . 19) (undo-tree-id537 . 19) (undo-tree-id538 . 19) (undo-tree-id539 . 19) (undo-tree-id540 . 19) (undo-tree-id541 . 19) (undo-tree-id542 . 19) (undo-tree-id543 . 19) (undo-tree-id544 . 19) (undo-tree-id545 . 19) (undo-tree-id546 . 19) (undo-tree-id547 . 19) (undo-tree-id548 . 19) (undo-tree-id549 . 19) (undo-tree-id550 . 19) (undo-tree-id551 . 19) (undo-tree-id552 . 19) (undo-tree-id553 . 19) (undo-tree-id554 . 19) (undo-tree-id555 . 19) (undo-tree-id556 . 19) (undo-tree-id557 . 19) (undo-tree-id558 . 19) (undo-tree-id559 . 19) (undo-tree-id560 . 19) (undo-tree-id561 . 19) (undo-tree-id562 . 19) (undo-tree-id563 . 19) (undo-tree-id564 . 19) (undo-tree-id565 . 19) (undo-tree-id566 . 19) (undo-tree-id567 . 19) (undo-tree-id568 . 19) (undo-tree-id569 . 19) (undo-tree-id570 . 19) (undo-tree-id571 . 19) (undo-tree-id572 . 19) (undo-tree-id573 . 19) (undo-tree-id574 . 19) (undo-tree-id575 . -19)) nil (23394 3844 271044 0) 0 nil]) ((#("
" 0 1 (fontified t)) . 220) (undo-tree-id576 . 1) (undo-tree-id577 . 1) (undo-tree-id578 . 1) (undo-tree-id579 . 1) (undo-tree-id580 . 1) (undo-tree-id581 . 1) (undo-tree-id582 . 1) (undo-tree-id583 . 1) (undo-tree-id584 . 1) (undo-tree-id585 . 1) (undo-tree-id586 . 1) (undo-tree-id587 . 1) (undo-tree-id588 . 1) (undo-tree-id589 . 1) (undo-tree-id590 . 1) (undo-tree-id591 . 1) (undo-tree-id592 . 1) (undo-tree-id593 . 1) (undo-tree-id594 . 1) (undo-tree-id595 . 1) (undo-tree-id596 . 1) (undo-tree-id597 . 1) (undo-tree-id598 . 1) (undo-tree-id599 . 1) (undo-tree-id600 . 1) (undo-tree-id601 . 1) (undo-tree-id602 . 1) (undo-tree-id603 . 1) (undo-tree-id604 . 1) (undo-tree-id605 . 1) (undo-tree-id606 . 1) (undo-tree-id607 . 1) (undo-tree-id608 . 1) (undo-tree-id609 . 1) (undo-tree-id610 . 1) (undo-tree-id611 . 1) (undo-tree-id612 . 1) (undo-tree-id613 . 1) (undo-tree-id614 . 1) (undo-tree-id615 . 1) (undo-tree-id616 . 1) (undo-tree-id617 . 1) (undo-tree-id618 . 1) (undo-tree-id619 . 1) (undo-tree-id620 . 1) (undo-tree-id621 . 1) (undo-tree-id622 . 1) (undo-tree-id623 . -1)) nil (23394 3844 271120 0) 0 nil]) ((#("  divider: {" 0 2 (fontified t) 2 9 (fontified t font-lock-face js2-object-property) 9 10 (fontified t) 10 11 (fontified t) 11 12 (fontified t face (rainbow-delimiters-depth-3-face))) . 220) (undo-tree-id624 . 12) (undo-tree-id625 . 12) (undo-tree-id626 . 12) (undo-tree-id627 . 12) (undo-tree-id628 . 12) (undo-tree-id629 . 12) (undo-tree-id630 . 12) (undo-tree-id631 . 12) (undo-tree-id632 . 12) (undo-tree-id633 . 12) (undo-tree-id634 . 12) (undo-tree-id635 . 12) (undo-tree-id636 . 12) (undo-tree-id637 . 12) (undo-tree-id638 . 12) (undo-tree-id639 . 12) (undo-tree-id640 . 12) (undo-tree-id641 . 12) (undo-tree-id642 . 12) (undo-tree-id643 . 12) (undo-tree-id644 . 12) (undo-tree-id645 . 12) (undo-tree-id646 . 12) (undo-tree-id647 . 12) (undo-tree-id648 . 12) (undo-tree-id649 . 12) (undo-tree-id650 . 12) (undo-tree-id651 . 12) (undo-tree-id652 . 12) (undo-tree-id653 . 12) (undo-tree-id654 . 12) (undo-tree-id655 . 12) (undo-tree-id656 . 12) (undo-tree-id657 . 12) (undo-tree-id658 . 12) (undo-tree-id659 . 12) (undo-tree-id660 . 12) (undo-tree-id661 . 12) (undo-tree-id662 . 12) (undo-tree-id663 . 12) (undo-tree-id664 . 12) (undo-tree-id665 . 12) (undo-tree-id666 . 12) (undo-tree-id667 . 12) (undo-tree-id668 . 12) (undo-tree-id669 . -12)) nil (23394 3844 271189 0) 0 nil]) ((#("
" 0 1 (fontified t)) . 220) (undo-tree-id670 . 1) (undo-tree-id671 . 1) (undo-tree-id672 . 1) (undo-tree-id673 . 1) (undo-tree-id674 . 1) (undo-tree-id675 . 1) (undo-tree-id676 . 1) (undo-tree-id677 . 1) (undo-tree-id678 . 1) (undo-tree-id679 . 1) (undo-tree-id680 . 1) (undo-tree-id681 . 1) (undo-tree-id682 . 1) (undo-tree-id683 . 1) (undo-tree-id684 . 1) (undo-tree-id685 . 1) (undo-tree-id686 . 1) (undo-tree-id687 . 1) (undo-tree-id688 . 1) (undo-tree-id689 . 1) (undo-tree-id690 . 1) (undo-tree-id691 . 1) (undo-tree-id692 . 1) (undo-tree-id693 . 1) (undo-tree-id694 . 1) (undo-tree-id695 . 1) (undo-tree-id696 . 1) (undo-tree-id697 . 1) (undo-tree-id698 . 1) (undo-tree-id699 . 1) (undo-tree-id700 . 1) (undo-tree-id701 . 1) (undo-tree-id702 . 1) (undo-tree-id703 . 1) (undo-tree-id704 . 1) (undo-tree-id705 . 1) (undo-tree-id706 . 1) (undo-tree-id707 . 1) (undo-tree-id708 . 1) (undo-tree-id709 . 1) (undo-tree-id710 . 1) (undo-tree-id711 . 1) (undo-tree-id712 . 1) (undo-tree-id713 . -1)) nil (23394 3844 271264 0) 0 nil]) ((#("  }," 0 2 (fontified t) 2 3 (fontified t face (rainbow-delimiters-depth-2-face)) 3 4 (fontified t)) . 220) (undo-tree-id714 . 4) (undo-tree-id715 . 4) (undo-tree-id716 . 4) (undo-tree-id717 . 4) (undo-tree-id718 . 4) (undo-tree-id719 . 4) (undo-tree-id720 . 4) (undo-tree-id721 . 4) (undo-tree-id722 . 4) (undo-tree-id723 . 4) (undo-tree-id724 . 4) (undo-tree-id725 . 4) (undo-tree-id726 . 4) (undo-tree-id727 . 4) (undo-tree-id728 . 4) (undo-tree-id729 . 4) (undo-tree-id730 . 4) (undo-tree-id731 . 4) (undo-tree-id732 . 4) (undo-tree-id733 . 4) (undo-tree-id734 . 4) (undo-tree-id735 . 4) (undo-tree-id736 . 4) (undo-tree-id737 . 4) (undo-tree-id738 . 4) (undo-tree-id739 . 4) (undo-tree-id740 . 4) (undo-tree-id741 . 4) (undo-tree-id742 . 4) (undo-tree-id743 . 4) (undo-tree-id744 . 4) (undo-tree-id745 . 4) (undo-tree-id746 . 4) (undo-tree-id747 . 4) (undo-tree-id748 . 4) (undo-tree-id749 . 4) (undo-tree-id750 . 4) (undo-tree-id751 . 4) (undo-tree-id752 . 4) (undo-tree-id753 . 4) (undo-tree-id754 . 4) (undo-tree-id755 . -4)) nil (23394 3844 271323 0) 0 nil]) ((#("
" 0 1 (fontified t)) . 220) (undo-tree-id756 . 1) (undo-tree-id757 . 1) (undo-tree-id758 . 1) (undo-tree-id759 . 1) (undo-tree-id760 . 1) (undo-tree-id761 . 1) (undo-tree-id762 . 1) (undo-tree-id763 . 1) (undo-tree-id764 . 1) (undo-tree-id765 . 1) (undo-tree-id766 . 1) (undo-tree-id767 . 1) (undo-tree-id768 . 1) (undo-tree-id769 . 1) (undo-tree-id770 . 1) (undo-tree-id771 . 1) (undo-tree-id772 . 1) (undo-tree-id773 . 1) (undo-tree-id774 . 1) (undo-tree-id775 . 1) (undo-tree-id776 . 1) (undo-tree-id777 . 1) (undo-tree-id778 . 1) (undo-tree-id779 . 1) (undo-tree-id780 . 1) (undo-tree-id781 . 1) (undo-tree-id782 . 1) (undo-tree-id783 . 1) (undo-tree-id784 . 1) (undo-tree-id785 . 1) (undo-tree-id786 . 1) (undo-tree-id787 . 1) (undo-tree-id788 . 1) (undo-tree-id789 . 1) (undo-tree-id790 . 1) (undo-tree-id791 . 1) (undo-tree-id792 . 1) (undo-tree-id793 . 1) (undo-tree-id794 . 1) (undo-tree-id795 . -1)) nil (23394 3844 271374 0) 0 nil]) ((#("    flexWrap: 'wrap'," 0 4 (fontified t) 4 12 (fontified t font-lock-face js2-object-property) 12 13 (fontified t) 13 14 (fontified t) 14 20 (fontified t font-lock-face font-lock-string-face) 20 21 (fontified t)) . 220) (undo-tree-id796 . 21) (undo-tree-id797 . 21) (undo-tree-id798 . 21) (undo-tree-id799 . 21) (undo-tree-id800 . 21) (undo-tree-id801 . 21) (undo-tree-id802 . 21) (undo-tree-id803 . 21) (undo-tree-id804 . 21) (undo-tree-id805 . 21) (undo-tree-id806 . 21) (undo-tree-id807 . 21) (undo-tree-id808 . 21) (undo-tree-id809 . 21) (undo-tree-id810 . 21) (undo-tree-id811 . 21) (undo-tree-id812 . 21) (undo-tree-id813 . 21) (undo-tree-id814 . 21) (undo-tree-id815 . 21) (undo-tree-id816 . 21) (undo-tree-id817 . 21) (undo-tree-id818 . 21) (undo-tree-id819 . 21) (undo-tree-id820 . 21) (undo-tree-id821 . 21) (undo-tree-id822 . 21) (undo-tree-id823 . 21) (undo-tree-id824 . 21) (undo-tree-id825 . 21) (undo-tree-id826 . 21) (undo-tree-id827 . 21) (undo-tree-id828 . 21) (undo-tree-id829 . 21) (undo-tree-id830 . 21) (undo-tree-id831 . 21) (undo-tree-id832 . 21) (undo-tree-id833 . -21)) nil (23394 3844 271429 0) 0 nil]) ((#("
" 0 1 (fontified t)) . 220) (undo-tree-id834 . 1) (undo-tree-id835 . 1) (undo-tree-id836 . 1) (undo-tree-id837 . 1) (undo-tree-id838 . 1) (undo-tree-id839 . 1) (undo-tree-id840 . 1) (undo-tree-id841 . 1) (undo-tree-id842 . 1) (undo-tree-id843 . 1) (undo-tree-id844 . 1) (undo-tree-id845 . 1) (undo-tree-id846 . 1) (undo-tree-id847 . 1) (undo-tree-id848 . 1) (undo-tree-id849 . 1) (undo-tree-id850 . 1) (undo-tree-id851 . 1) (undo-tree-id852 . 1) (undo-tree-id853 . 1) (undo-tree-id854 . 1) (undo-tree-id855 . 1) (undo-tree-id856 . 1) (undo-tree-id857 . 1) (undo-tree-id858 . 1) (undo-tree-id859 . 1) (undo-tree-id860 . 1) (undo-tree-id861 . 1) (undo-tree-id862 . 1) (undo-tree-id863 . 1) (undo-tree-id864 . 1) (undo-tree-id865 . 1) (undo-tree-id866 . 1) (undo-tree-id867 . 1) (undo-tree-id868 . 1) (undo-tree-id869 . -1)) nil (23394 3844 271475 0) 0 nil]) ((#("    display: 'flex'," 0 4 (fontified t) 4 11 (fontified t font-lock-face js2-object-property) 11 12 (fontified t) 12 13 (fontified t) 13 19 (fontified t font-lock-face font-lock-string-face) 19 20 (fontified t)) . 220) (undo-tree-id870 . 20) (undo-tree-id871 . 20) (undo-tree-id872 . 20) (undo-tree-id873 . 20) (undo-tree-id874 . 20) (undo-tree-id875 . 20) (undo-tree-id876 . 20) (undo-tree-id877 . 20) (undo-tree-id878 . 20) (undo-tree-id879 . 20) (undo-tree-id880 . 20) (undo-tree-id881 . 20) (undo-tree-id882 . 20) (undo-tree-id883 . 20) (undo-tree-id884 . 20) (undo-tree-id885 . 20) (undo-tree-id886 . 20) (undo-tree-id887 . 20) (undo-tree-id888 . 20) (undo-tree-id889 . 20) (undo-tree-id890 . 20) (undo-tree-id891 . 20) (undo-tree-id892 . 20) (undo-tree-id893 . 20) (undo-tree-id894 . 20) (undo-tree-id895 . 20) (undo-tree-id896 . 20) (undo-tree-id897 . 20) (undo-tree-id898 . 20) (undo-tree-id899 . 20) (undo-tree-id900 . 20) (undo-tree-id901 . 20) (undo-tree-id902 . 20) (undo-tree-id903 . -20)) nil (23394 3844 271519 0) 0 nil]) ((#("
" 0 1 (fontified t)) . 220) (undo-tree-id904 . 1) (undo-tree-id905 . 1) (undo-tree-id906 . 1) (undo-tree-id907 . 1) (undo-tree-id908 . 1) (undo-tree-id909 . 1) (undo-tree-id910 . 1) (undo-tree-id911 . 1) (undo-tree-id912 . 1) (undo-tree-id913 . 1) (undo-tree-id914 . 1) (undo-tree-id915 . 1) (undo-tree-id916 . 1) (undo-tree-id917 . 1) (undo-tree-id918 . 1) (undo-tree-id919 . 1) (undo-tree-id920 . 1) (undo-tree-id921 . 1) (undo-tree-id922 . 1) (undo-tree-id923 . 1) (undo-tree-id924 . 1) (undo-tree-id925 . 1) (undo-tree-id926 . 1) (undo-tree-id927 . 1) (undo-tree-id928 . 1) (undo-tree-id929 . 1) (undo-tree-id930 . 1) (undo-tree-id931 . 1) (undo-tree-id932 . 1) (undo-tree-id933 . 1) (undo-tree-id934 . 1) (undo-tree-id935 . -1)) nil (23394 3844 271565 0) 0 nil]) ((#("  container: {" 0 2 (fontified t) 2 11 (fontified t font-lock-face js2-object-property) 11 12 (fontified t) 12 13 (fontified t) 13 14 (fontified t face (rainbow-delimiters-depth-3-face))) . 220) (undo-tree-id936 . 14) (undo-tree-id937 . 14) (undo-tree-id938 . 14) (undo-tree-id939 . 14) (undo-tree-id940 . 14) (undo-tree-id941 . 14) (undo-tree-id942 . 14) (undo-tree-id943 . 14) (undo-tree-id944 . 14) (undo-tree-id945 . 14) (undo-tree-id946 . 14) (undo-tree-id947 . 14) (undo-tree-id948 . 14) (undo-tree-id949 . 14) (undo-tree-id950 . 14) (undo-tree-id951 . 14) (undo-tree-id952 . 14) (undo-tree-id953 . 14) (undo-tree-id954 . 14) (undo-tree-id955 . 14) (undo-tree-id956 . 14) (undo-tree-id957 . 14) (undo-tree-id958 . 14) (undo-tree-id959 . 14) (undo-tree-id960 . 14) (undo-tree-id961 . 14) (undo-tree-id962 . 14) (undo-tree-id963 . 14) (undo-tree-id964 . 14) (undo-tree-id965 . -14)) nil (23394 3844 271621 0) 0 nil]) ((#("
" 0 1 (fontified t)) . 220) (undo-tree-id966 . 1) (undo-tree-id967 . 1) (undo-tree-id968 . 1) (undo-tree-id969 . 1) (undo-tree-id970 . 1) (undo-tree-id971 . 1) (undo-tree-id972 . 1) (undo-tree-id973 . 1) (undo-tree-id974 . 1) (undo-tree-id975 . 1) (undo-tree-id976 . 1) (undo-tree-id977 . 1) (undo-tree-id978 . 1) (undo-tree-id979 . 1) (undo-tree-id980 . 1) (undo-tree-id981 . 1) (undo-tree-id982 . 1) (undo-tree-id983 . 1) (undo-tree-id984 . 1) (undo-tree-id985 . 1) (undo-tree-id986 . 1) (undo-tree-id987 . 1) (undo-tree-id988 . 1) (undo-tree-id989 . 1) (undo-tree-id990 . 1) (undo-tree-id991 . 1) (undo-tree-id992 . 1) (undo-tree-id993 . -1)) nil (23394 3844 271664 0) 0 nil]) ((#("  }," 0 2 (fontified t) 2 3 (fontified t face (rainbow-delimiters-depth-2-face)) 3 4 (fontified t)) . 220) (undo-tree-id994 . 4) (undo-tree-id995 . 4) (undo-tree-id996 . 4) (undo-tree-id997 . 4) (undo-tree-id998 . 4) (undo-tree-id999 . 4) (undo-tree-id1000 . 4) (undo-tree-id1001 . 4) (undo-tree-id1002 . 4) (undo-tree-id1003 . 4) (undo-tree-id1004 . 4) (undo-tree-id1005 . 4) (undo-tree-id1006 . 4) (undo-tree-id1007 . 4) (undo-tree-id1008 . 4) (undo-tree-id1009 . 4) (undo-tree-id1010 . 4) (undo-tree-id1011 . 4) (undo-tree-id1012 . 4) (undo-tree-id1013 . 4) (undo-tree-id1014 . 4) (undo-tree-id1015 . 4) (undo-tree-id1016 . 4) (undo-tree-id1017 . 4) (undo-tree-id1018 . 4) (undo-tree-id1019 . -4)) nil (23394 3844 271698 0) 0 nil]) ((#("
" 0 1 (fontified t)) . 220) (undo-tree-id1020 . 1) (undo-tree-id1021 . 1) (undo-tree-id1022 . 1) (undo-tree-id1023 . 1) (undo-tree-id1024 . 1) (undo-tree-id1025 . 1) (undo-tree-id1026 . 1) (undo-tree-id1027 . 1) (undo-tree-id1028 . 1) (undo-tree-id1029 . 1) (undo-tree-id1030 . 1) (undo-tree-id1031 . 1) (undo-tree-id1032 . 1) (undo-tree-id1033 . 1) (undo-tree-id1034 . 1) (undo-tree-id1035 . 1) (undo-tree-id1036 . 1) (undo-tree-id1037 . 1) (undo-tree-id1038 . 1) (undo-tree-id1039 . 1) (undo-tree-id1040 . 1) (undo-tree-id1041 . 1) (undo-tree-id1042 . 1) (undo-tree-id1043 . -1)) nil (23394 3844 271737 0) 0 nil]) ((#("    display: 'block'," 0 4 (fontified t) 4 11 (fontified t font-lock-face js2-object-property) 11 13 (fontified t) 13 20 (fontified t font-lock-face font-lock-string-face) 20 21 (fontified t)) . 220) (undo-tree-id1044 . 21) (undo-tree-id1045 . 21) (undo-tree-id1046 . 21) (undo-tree-id1047 . 21) (undo-tree-id1048 . 21) (undo-tree-id1049 . 21) (undo-tree-id1050 . 21) (undo-tree-id1051 . 21) (undo-tree-id1052 . 21) (undo-tree-id1053 . 21) (undo-tree-id1054 . 21) (undo-tree-id1055 . 21) (undo-tree-id1056 . 21) (undo-tree-id1057 . 21) (undo-tree-id1058 . 21) (undo-tree-id1059 . 21) (undo-tree-id1060 . 21) (undo-tree-id1061 . 21) (undo-tree-id1062 . 21) (undo-tree-id1063 . 21) (undo-tree-id1064 . 21) (undo-tree-id1065 . -21)) nil (23394 3844 271780 0) 0 nil]) ((#("
" 0 1 (fontified t)) . 220) (undo-tree-id1066 . 1) (undo-tree-id1067 . 1) (undo-tree-id1068 . 1) (undo-tree-id1069 . 1) (undo-tree-id1070 . 1) (undo-tree-id1071 . 1) (undo-tree-id1072 . 1) (undo-tree-id1073 . 1) (undo-tree-id1074 . 1) (undo-tree-id1075 . 1) (undo-tree-id1076 . 1) (undo-tree-id1077 . 1) (undo-tree-id1078 . 1) (undo-tree-id1079 . 1) (undo-tree-id1080 . 1) (undo-tree-id1081 . 1) (undo-tree-id1082 . 1) (undo-tree-id1083 . 1) (undo-tree-id1084 . 1) (undo-tree-id1085 . -1)) nil (23394 3844 271811 0) 0 nil]) ((#("    width: \"100%\"," 0 4 (fontified t) 4 9 (fontified t font-lock-face js2-object-property) 9 11 (fontified t) 11 17 (fontified t font-lock-face font-lock-string-face) 17 18 (fontified t)) . 220) (undo-tree-id1086 . 18) (undo-tree-id1087 . 18) (undo-tree-id1088 . 18) (undo-tree-id1089 . 18) (undo-tree-id1090 . 18) (undo-tree-id1091 . 18) (undo-tree-id1092 . 18) (undo-tree-id1093 . 18) (undo-tree-id1094 . 18) (undo-tree-id1095 . 18) (undo-tree-id1096 . 18) (undo-tree-id1097 . 18) (undo-tree-id1098 . 18) (undo-tree-id1099 . 18) (undo-tree-id1100 . 18) (undo-tree-id1101 . 18) (undo-tree-id1102 . 18) (undo-tree-id1103 . -18)) nil (23394 3844 271834 0) 0 nil]) ((#("
" 0 1 (fontified t)) . 220) (undo-tree-id1104 . 1) (undo-tree-id1105 . 1) (undo-tree-id1106 . 1) (undo-tree-id1107 . 1) (undo-tree-id1108 . 1) (undo-tree-id1109 . 1) (undo-tree-id1110 . 1) (undo-tree-id1111 . 1) (undo-tree-id1112 . 1) (undo-tree-id1113 . 1) (undo-tree-id1114 . 1) (undo-tree-id1115 . 1) (undo-tree-id1116 . 1) (undo-tree-id1117 . 1) (undo-tree-id1118 . 1) (undo-tree-id1119 . -1)) nil (23394 3844 271854 0) 0 nil]) ((#("    flexGrow: 1," 0 4 (fontified t) 4 12 (fontified t font-lock-face js2-object-property) 12 16 (fontified t)) . 220) (undo-tree-id1120 . 16) (undo-tree-id1121 . 16) (undo-tree-id1122 . 16) (undo-tree-id1123 . 16) (undo-tree-id1124 . 16) (undo-tree-id1125 . 16) (undo-tree-id1126 . 16) (undo-tree-id1127 . 16) (undo-tree-id1128 . 16) (undo-tree-id1129 . 16) (undo-tree-id1130 . 16) (undo-tree-id1131 . 16) (undo-tree-id1132 . 16) (undo-tree-id1133 . -16)) nil (23394 3844 271871 0) 0 nil]) ((#("
" 0 1 (fontified t)) . 220) (undo-tree-id1134 . 1) (undo-tree-id1135 . 1) (undo-tree-id1136 . 1) (undo-tree-id1137 . 1) (undo-tree-id1138 . 1) (undo-tree-id1139 . 1) (undo-tree-id1140 . 1) (undo-tree-id1141 . 1) (undo-tree-id1142 . 1) (undo-tree-id1143 . 1) (undo-tree-id1144 . 1) (undo-tree-id1145 . -1)) nil (23394 3844 271891 0) 0 nil]) ((#("  root: {" 0 2 (fontified t) 2 6 (fontified t font-lock-face js2-object-property) 6 8 (fontified t) 8 9 (fontified t face (rainbow-delimiters-depth-3-face))) . 220) (undo-tree-id1146 . -9) (undo-tree-id1147 . -9) (undo-tree-id1148 . -9) (undo-tree-id1149 . -9) (undo-tree-id1150 . -9) (undo-tree-id1151 . -9) (undo-tree-id1152 . 9) (undo-tree-id1153 . -9)) nil (23394 3844 271903 0) 0 nil]) ((#(" " 0 1 (fontified t)) . -896) (undo-tree-id1154 . -1) 895) nil (23394 3844 271910 0) 0 nil]) ((881 . 945) (#("export default App;
" 0 6 (font-lock-face font-lock-keyword-face fontified t) 6 7 (fontified t) 7 14 (font-lock-face font-lock-keyword-face fontified t) 14 15 (fontified t) 15 20 (fontified t)) . -881) (undo-tree-id1155 . -20) (undo-tree-id1156 . -20) (undo-tree-id1157 . -20) (undo-tree-id1158 . 20) (undo-tree-id1159 . -20) 901) nil (23394 3844 271923 0) 0 nil]) ((881 . 901)) nil (23394 3844 271925 0) 0 nil]) ((#("export " 0 6 (fontified t font-lock-face font-lock-keyword-face help-echo #28="Unexpected end of file" cursor-sensor-functions #1#) 6 7 (fontified t help-echo #28# cursor-sensor-functions #1#)) . -881) (undo-tree-id1160 . -7) (undo-tree-id1161 . -7) (undo-tree-id1162 . -7) (undo-tree-id1163 . -7) (undo-tree-id1164 . -7) (undo-tree-id1165 . -7) (undo-tree-id1166 . -7) (undo-tree-id1167 . -7) (undo-tree-id1168 . -7) (undo-tree-id1169 . -7) (undo-tree-id1170 . -7) (undo-tree-id1171 . -7) (undo-tree-id1172 . -7) (undo-tree-id1173 . -7) (undo-tree-id1174 . -7) (undo-tree-id1175 . -7) (undo-tree-id1176 . -7) (undo-tree-id1177 . -7) (undo-tree-id1178 . -7) (undo-tree-id1179 . -7) (undo-tree-id1180 . -6) (undo-tree-id1181 . -7) (undo-tree-id1182 . -7) (undo-tree-id1183 . -7) 888) nil (23394 3844 271964 0) 0 nil]) ((#("default " 0 7 (fontified t font-lock-face font-lock-keyword-face help-echo #29="Unexpected end of file" cursor-sensor-functions #1#) 7 8 (fontified t help-echo #29# cursor-sensor-functions #1#)) . -888) (undo-tree-id1184 . -8) (undo-tree-id1185 . -8) (undo-tree-id1186 . -8) (undo-tree-id1187 . -8) (undo-tree-id1188 . -8) (undo-tree-id1189 . -8) (undo-tree-id1190 . -8) (undo-tree-id1191 . -8) (undo-tree-id1192 . -8) (undo-tree-id1193 . -8) (undo-tree-id1194 . -8) (undo-tree-id1195 . -8) (undo-tree-id1196 . -8) (undo-tree-id1197 . -8) (undo-tree-id1198 . -8) (undo-tree-id1199 . -8) (undo-tree-id1200 . -8) (undo-tree-id1201 . -8) (undo-tree-id1202 . -8) (undo-tree-id1203 . -7) (undo-tree-id1204 . -8) (undo-tree-id1205 . -8) (undo-tree-id1206 . -8) 896) nil (23394 3844 272000 0) 0 nil]) ((#("App;
" 0 5 (fontified t)) . -896) (undo-tree-id1207 . -5) (undo-tree-id1208 . -5) (undo-tree-id1209 . -5) (undo-tree-id1210 . -5) (undo-tree-id1211 . -5) (undo-tree-id1212 . -5) (undo-tree-id1213 . -5) (undo-tree-id1214 . -5) (undo-tree-id1215 . -5) (undo-tree-id1216 . -5) (undo-tree-id1217 . -5) (undo-tree-id1218 . -5) (undo-tree-id1219 . -5) (undo-tree-id1220 . -5) (undo-tree-id1221 . -5) (undo-tree-id1222 . -5) (undo-tree-id1223 . -5) (undo-tree-id1224 . -5) (undo-tree-id1225 . -5) 901) nil (23394 3844 272033 0) 0 nil]) ((#("
" 0 1 (fontified t)) . -901) (undo-tree-id1226 . -1) (undo-tree-id1227 . -1) (undo-tree-id1228 . -1) (undo-tree-id1229 . 1) (undo-tree-id1230 . 1) (undo-tree-id1231 . -1) 902) nil (23394 3844 272047 0) 0 nil]) ((901 . 902)) nil (23394 3844 272049 0) 0 nil]) ((191 . 192)) nil (23394 3844 272051 0) 0 nil]) ((137 . 191)) nil (23394 3844 272053 0) 0 nil]) ((137 . 138)) nil (23394 3844 272055 0) 0 nil]) ((137 . 396) (t 23394 2429 838939 322000)) nil (23394 3844 272057 0) 0 nil]) ((#("

" 0 1 (fontified t) 1 2 (fontified t)) . -586) (undo-tree-id230 . -1) (undo-tree-id231 . -1) (undo-tree-id232 . -1) (undo-tree-id233 . 1) (undo-tree-id234 . -1) (undo-tree-id235 . 1) (undo-tree-id236 . 1) (undo-tree-id237 . -1) (undo-tree-id238 . 1) (undo-tree-id239 . 1) (undo-tree-id240 . -1) (undo-tree-id241 . -1) 587) nil (23394 2429 830646 0) 0 nil]) ((#("string = `asdosaido${asdqwe}`;a" 0 6 (fontified t help-echo "Undeclared variable or function 'string'" cursor-sensor-functions #1#) 6 9 (fontified t) 9 20 (fontified t font-lock-face font-lock-string-face) 20 21 (fontified t font-lock-face font-lock-string-face) 21 27 (fontified t help-echo "Undeclared variable or function 'asdqwe'" cursor-sensor-functions #1#) 27 28 (fontified t font-lock-face font-lock-string-face) 28 29 (fontified t font-lock-face font-lock-string-face) 29 30 (fontified t) 30 31 (fontified t help-echo "missing ; after statement" cursor-sensor-functions #1#)) . 587) (undo-tree-id242 . -6) (undo-tree-id243 . -21) (undo-tree-id244 . -27) (undo-tree-id245 . -30) (undo-tree-id246 . -31) (undo-tree-id247 . -30) (undo-tree-id248 . -31) (undo-tree-id249 . 31) (undo-tree-id250 . 31) (undo-tree-id251 . -31)) nil (23394 2429 830678 0) 0 nil] [nil ([nil nil ((#("

" 0 1 (fontified t) 1 2 (fontified t)) . -586) (undo-tree-id207 . -1) (undo-tree-id208 . -1) (undo-tree-id209 . -1) (undo-tree-id210 . -1) (undo-tree-id211 . -1) (undo-tree-id212 . -1) (undo-tree-id213 . -1) (undo-tree-id214 . 1) (undo-tree-id215 . 1) (undo-tree-id216 . -1) (undo-tree-id217 . 1) (undo-tree-id218 . 1) (undo-tree-id219 . -1) (undo-tree-id220 . -1) (undo-tree-id221 . -1) (undo-tree-id222 . -1) (undo-tree-id223 . -1) (undo-tree-id224 . -1) (undo-tree-id225 . -1) (undo-tree-id226 . 1) (undo-tree-id227 . 1) (undo-tree-id228 . -1) (undo-tree-id229 . -1) 587) ((586 . 588) (t 23394 2399 862906 420000)) (23394 2399 855264 0) 0 nil] [nil nil ((#("
" 0 1 (fontified t)) . 587) (undo-tree-id198 . 1) (undo-tree-id199 . 1) (undo-tree-id200 . 1) (undo-tree-id201 . 1) (undo-tree-id202 . -1)) ((587 . 588)) (23394 2398 181193 0) 0 nil]) ((#("string = `asdosaido${asdqwe}`;a" 0 6 (fontified t help-echo "Undeclared variable or function 'string'" cursor-sensor-functions #1#) 6 9 (fontified t) 9 20 (fontified t font-lock-face font-lock-string-face) 20 21 (fontified t font-lock-face font-lock-string-face) 21 27 (fontified t help-echo "Undeclared variable or function 'asdqwe'" cursor-sensor-functions #1#) 27 28 (fontified t font-lock-face font-lock-string-face) 28 29 (fontified t font-lock-face font-lock-string-face) 29 30 (fontified t) 30 31 (fontified t help-echo "missing ; after statement" cursor-sensor-functions #1#)) . 587) (undo-tree-id203 . -9) (undo-tree-id204 . -31) (undo-tree-id205 . -9) (undo-tree-id206 . 31)) ((587 . 618)) (23394 2421 893276 0) 0 nil]) ((617 . 618) (t 23394 2114 877494 110000)) nil (23394 2422 324009 0) 0 nil]) ((617 . 618)) nil (23394 2114 855771 0) 0 nil]) ((616 . 617)) nil (23394 2114 855781 0) 0 nil]) ((608 . 614) (607 . 609) (#("{" 0 1 (fontified nil font-lock-face font-lock-string-face help-echo "missing ; after statement" cursor-sensor-functions #1#)) . -607) (597 . 608)) nil (23394 2114 855785 0) 0 nil]) ((596 . 598) (#("`" 0 1 (fontified nil)) . -596) (596 . 597) (#("`" 0 1 (fontified nil help-echo "Unexpected end of file" cursor-sensor-functions #1#)) . -596) (596 . 597)) nil (23394 2114 855788 0) 0 nil]) ((#("\"" 0 1 (fontified t font-lock-face font-lock-string-face help-echo "unterminated string literal" cursor-sensor-functions #1#)) . -596) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (undo-tree-id4 . 1) (undo-tree-id5 . -1) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (undo-tree-id8 . -1) (undo-tree-id9 . -1) (undo-tree-id10 . -1) (undo-tree-id11 . -1) (undo-tree-id12 . -1) (undo-tree-id13 . -1) (undo-tree-id14 . -1) (undo-tree-id15 . -1) (undo-tree-id16 . -1) (undo-tree-id17 . -1) (undo-tree-id18 . -1) (undo-tree-id19 . -1) (undo-tree-id20 . -1) (undo-tree-id21 . -1) (undo-tree-id22 . -1) (undo-tree-id23 . -1) (undo-tree-id24 . -1) (undo-tree-id25 . -1) (undo-tree-id26 . -1) (undo-tree-id27 . -1) (undo-tree-id28 . -1) (undo-tree-id29 . -1) (undo-tree-id30 . -1) (undo-tree-id31 . -1) (undo-tree-id32 . -1) (undo-tree-id33 . -1) (undo-tree-id34 . -1) (undo-tree-id35 . -1) (undo-tree-id36 . -1) (undo-tree-id37 . -1) (undo-tree-id38 . -1) (undo-tree-id39 . -1) (undo-tree-id40 . -1) (undo-tree-id41 . -1) (undo-tree-id42 . -1) (undo-tree-id43 . -1) (undo-tree-id44 . -1) (undo-tree-id45 . -1) (undo-tree-id46 . -1) (undo-tree-id47 . -1) 597) nil (23394 2114 855862 0) 0 nil]) ((#("asdjasdkj\" + " 0 9 (fontified t font-lock-face font-lock-string-face help-echo #30="Unexpected end of file" cursor-sensor-functions #1#) 9 10 (fontified t font-lock-face font-lock-string-face help-echo #30# cursor-sensor-functions #1#) 10 13 (fontified t help-echo #30# cursor-sensor-functions #1#)) . -597) (undo-tree-id48 . -13) (undo-tree-id49 . -13) (undo-tree-id50 . -13) (undo-tree-id51 . -13) (undo-tree-id52 . 4) (undo-tree-id53 . 4) (undo-tree-id54 . 13) (undo-tree-id55 . -1) (undo-tree-id56 . 4) (undo-tree-id57 . 12) (undo-tree-id58 . -2) (undo-tree-id59 . 4) (undo-tree-id60 . 11) (undo-tree-id61 . -3) (undo-tree-id62 . 4) (undo-tree-id63 . 10) (undo-tree-id64 . -4) (undo-tree-id65 . 4) (undo-tree-id66 . 9) (undo-tree-id67 . -5) (undo-tree-id68 . 4) (undo-tree-id69 . 8) (undo-tree-id70 . -6) (undo-tree-id71 . 4) (undo-tree-id72 . 7) (undo-tree-id73 . -7) (undo-tree-id74 . 4) (undo-tree-id75 . 6) (undo-tree-id76 . -8) (undo-tree-id77 . 4) (undo-tree-id78 . 5) (undo-tree-id79 . -9) (undo-tree-id80 . 4) (undo-tree-id81 . -10) (undo-tree-id82 . 3) (undo-tree-id83 . -11) (undo-tree-id84 . 2) (undo-tree-id85 . -12) (undo-tree-id86 . 2) (undo-tree-id87 . -13) (undo-tree-id88 . -13) (undo-tree-id89 . -13) (undo-tree-id90 . -13) (undo-tree-id91 . -13) (undo-tree-id92 . -13) (undo-tree-id93 . -13) (undo-tree-id94 . -13) (undo-tree-id95 . -13) (undo-tree-id96 . -13) (undo-tree-id97 . -13) (undo-tree-id98 . -13) (undo-tree-id99 . -13) (undo-tree-id100 . -13) (undo-tree-id101 . -13) (undo-tree-id102 . -13) (undo-tree-id103 . -13) (undo-tree-id104 . -13) (undo-tree-id105 . -13) (undo-tree-id106 . -13) (undo-tree-id107 . -13) (undo-tree-id108 . -13) (undo-tree-id109 . -13) (undo-tree-id110 . -13) (undo-tree-id111 . -13) (undo-tree-id112 . -13) (undo-tree-id113 . -13) (undo-tree-id114 . -13) (undo-tree-id115 . -13) 610) nil (23394 2114 855946 0) 0 nil]) ((#("var + \"" 0 1 (fontified t font-lock-face font-lock-keyword-face help-echo #31="syntax error" cursor-sensor-functions #1#) 1 3 (fontified t font-lock-face font-lock-keyword-face help-echo #31# cursor-sensor-functions #1#) 3 6 (fontified t help-echo "missing ; after statement" cursor-sensor-functions #1#) 6 7 (fontified t font-lock-face font-lock-string-face help-echo "unterminated string literal" cursor-sensor-functions #1#)) . -610) (undo-tree-id116 . -7) (undo-tree-id117 . -7) (undo-tree-id118 . -7) (undo-tree-id119 . -7) (undo-tree-id120 . 7) (undo-tree-id121 . -1) (undo-tree-id122 . 6) (undo-tree-id123 . -2) (undo-tree-id124 . 5) (undo-tree-id125 . -3) (undo-tree-id126 . 4) (undo-tree-id127 . -4) (undo-tree-id128 . 3) (undo-tree-id129 . -5) (undo-tree-id130 . 2) (undo-tree-id131 . -6) (undo-tree-id132 . 1) (undo-tree-id133 . -7) (undo-tree-id134 . -7) (undo-tree-id135 . -7) (undo-tree-id136 . -7) (undo-tree-id137 . -7) (undo-tree-id138 . -7) (undo-tree-id139 . -7) (undo-tree-id140 . -7) (undo-tree-id141 . -7) (undo-tree-id142 . -7) (undo-tree-id143 . -7) (undo-tree-id144 . -7) (undo-tree-id145 . -7) (undo-tree-id146 . -7) (undo-tree-id147 . -7) (undo-tree-id148 . -7) (undo-tree-id149 . -7) (undo-tree-id150 . -6) (undo-tree-id151 . -7) (undo-tree-id152 . -3) (undo-tree-id153 . -7) 617) nil (23394 2114 856002 0) 0 nil]) ((#("ashdkqwe\"" 0 8 (fontified t font-lock-face font-lock-string-face help-echo #32="missing ; after statement" cursor-sensor-functions #1#) 8 9 (fontified t font-lock-face font-lock-string-face help-echo #32# cursor-sensor-functions #1#)) . -617) (undo-tree-id154 . -9) (undo-tree-id155 . -9) (undo-tree-id156 . -9) (undo-tree-id157 . -9) (undo-tree-id158 . 1) (undo-tree-id159 . 1) (undo-tree-id160 . 9) (undo-tree-id161 . -1) (undo-tree-id162 . 1) (undo-tree-id163 . 8) (undo-tree-id164 . -2) (undo-tree-id165 . 1) (undo-tree-id166 . 7) (undo-tree-id167 . -3) (undo-tree-id168 . 1) (undo-tree-id169 . 6) (undo-tree-id170 . -4) (undo-tree-id171 . 1) (undo-tree-id172 . 5) (undo-tree-id173 . -5) (undo-tree-id174 . 1) (undo-tree-id175 . 4) (undo-tree-id176 . -6) (undo-tree-id177 . 1) (undo-tree-id178 . 4) (undo-tree-id179 . -7) (undo-tree-id180 . 1) (undo-tree-id181 . 2) (undo-tree-id182 . -8) (undo-tree-id183 . -9) (undo-tree-id184 . 1) (undo-tree-id185 . -9) (undo-tree-id186 . -9) (undo-tree-id187 . -9) (undo-tree-id188 . -9) (undo-tree-id189 . -9) (undo-tree-id190 . -9) (undo-tree-id191 . -9) 626) nil (23394 2114 856053 0) 0 nil]) ((#("\"" 0 1 (fontified nil)) . -625) (625 . 626) (#("\"" 0 1 (fontified nil font-lock-face font-lock-string-face help-echo "missing ; after statement" cursor-sensor-functions #1#)) . -625) (617 . 626)) nil (23394 2114 856058 0) 0 nil]) ((616 . 618) (#("\"" 0 1 (fontified nil)) . -616) (616 . 617) (#("\"" 0 1 (fontified nil help-echo "Unexpected end of file" cursor-sensor-functions #1#)) . -616) (610 . 617)) nil (23394 2114 856061 0) 0 nil]) ((#("v" 0 1 (fontified t help-echo "missing ; after statement" cursor-sensor-functions #1#)) . -610) (undo-tree-id192 . -1) (undo-tree-id193 . -1) (undo-tree-id194 . -1) (undo-tree-id195 . -1) (undo-tree-id196 . 1) (undo-tree-id197 . -1) 611) nil (23394 2114 856069 0) 0 nil]) ((608 . 611)) nil (23394 2114 856070 0) 0 nil]) ((607 . 608) (#("\"" 0 1 (fontified nil)) . -606) (606 . 607) (#("\"" 0 1 (fontified nil font-lock-face font-lock-string-face help-echo "missing ; after statement" cursor-sensor-functions #1#)) . -606) (597 . 607) (596 . 598) (#("\"" 0 1 (fontified nil)) . -596) (596 . 597) (#("\"" 0 1 (fontified nil help-echo "Unexpected end of file" cursor-sensor-functions #1#)) . -596) (587 . 597)) nil (23394 2114 856074 0) 0 nil]) ((586 . 587) (t 23389 63414 198626 197000)) nil (23394 2114 856076 0) 0 nil]) nil nil (23394 2114 856077 0) 0 nil] #33# 55465 472 nil]