"e3601752d3297827001f6cee31bd986cad909137"
[cl-struct-undo-tree [nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil (#68=[nil nil ((901 . 904)) nil (23394 7169 713393 0) 0 nil]) ((#("l" 0 1 (fontified t font-lock-face font-lock-string-face)) . -901) (undo-tree-id11109 . -1) (undo-tree-id11110 . -1) (undo-tree-id11111 . 1) (undo-tree-id11112 . -1) (undo-tree-id11113 . -1) (undo-tree-id11114 . -1) (#("o" 0 1 (fontified t font-lock-face font-lock-string-face)) . -902) (undo-tree-id11115 . -1) (undo-tree-id11116 . -1) (undo-tree-id11117 . 1) (undo-tree-id11118 . -1) 903) nil (23394 7169 713452 0) 0 nil]) ((901 . 903)) nil (23394 7169 713456 0) 0 nil]) ((#(";" 0 1 (fontified t font-lock-face font-lock-string-face)) . -901) (undo-tree-id11119 . -1) (undo-tree-id11120 . -1) (undo-tree-id11121 . 1) (undo-tree-id11122 . -1) 902) nil (23394 7169 713464 0) 0 nil]) ((898 . 902)) nil (23394 7169 713466 0) 0 nil]) ((#("=" 0 1 (fontified t font-lock-face font-lock-string-face)) . -898) (undo-tree-id11123 . -1) (undo-tree-id11124 . -1) (undo-tree-id11125 . 1) (undo-tree-id11126 . -1) 899) nil (23394 7169 713474 0) 0 nil]) ((898 . 899) (t 23394 7032 18268 684000)) nil (23394 7169 713476 0) 0 nil]) ((892 . 898)) nil (23394 7031 985581 0) 0 nil]) ((891 . 893) (#("\"" 0 1 (fontified nil)) . -891) (891 . 892) (#("\"" 0 1 (fontified nil help-echo "missing `}' after expression" cursor-sensor-functions #1=(js2-echo-error))) . -891) (891 . 892)) nil (23394 7031 985593 0) 0 nil]) ((#("l" 0 1 (fontified t help-echo "Undeclared variable or function 'l'" cursor-sensor-functions #1#)) . -891) (undo-tree-id11103 . -1) (undo-tree-id11104 . -1) (undo-tree-id11105 . -1) (undo-tree-id11106 . -1) (undo-tree-id11107 . 1) (undo-tree-id11108 . -1) 892) nil (23394 7031 985650 0) 0 nil]) ((883 . 892)) nil (23394 7031 985653 0) 0 nil]) ((870 . 883) (t 23394 6721 363185 357000)) nil (23394 7031 985655 0) 0 nil] [nil nil ((#("  constructor(props) {
    super(props);
    this.state = {
      stringPositions: this.initStrings(0.1)
    };

    console.log(this.state.stringPositions);
    console.log(this);
  }" 0 2 (fontified t) 2 13 (fontified t font-lock-face font-lock-function-name-face) 13 14 (fontified t face (rainbow-delimiters-depth-2-face)) 14 19 (fontified t font-lock-face js2-function-param) 19 20 (fontified t face (rainbow-delimiters-depth-2-face)) 20 21 (fontified t) 21 22 (fontified t face (rainbow-delimiters-depth-2-face)) 22 23 (fontified t) 23 27 (fontified t) 27 32 (fontified t font-lock-face font-lock-builtin-face) 32 33 (fontified t face (rainbow-delimiters-depth-3-face)) 33 38 (fontified t) 38 39 (fontified t face (rainbow-delimiters-depth-3-face)) 39 40 (fontified t) 40 41 (fontified t) 41 45 (fontified t) 45 49 (fontified t font-lock-face font-lock-builtin-face) 49 50 (fontified t) 50 55 (fontified t font-lock-face js2-object-property-access) 55 58 (fontified t) 58 59 (fontified t face (rainbow-delimiters-depth-3-face)) 59 60 (fontified t) 60 66 (fontified t) 66 81 (fontified t font-lock-face js2-object-property) 81 82 (fontified t) 82 83 (fontified t) 83 87 (fontified t font-lock-face font-lock-builtin-face) 87 88 (fontified t) 88 99 (fontified t font-lock-face js2-function-call) 99 100 (fontified t face (rainbow-delimiters-depth-4-face)) 100 103 (fontified t) 103 104 (fontified t face (rainbow-delimiters-depth-4-face)) 104 105 (fontified t) 105 107 (fontified t) 107 109 (fontified t) 109 110 (fontified t face (rainbow-delimiters-depth-3-face)) 110 112 (fontified t) 112 113 (fontified t) 113 117 (fontified t) 117 118 (fontified t) 118 119 (fontified t) 119 124 (fontified t) 124 125 (fontified t) 125 128 (fontified t font-lock-face js2-function-call) 128 129 (fontified t face (rainbow-delimiters-depth-3-face)) 129 133 (fontified t font-lock-face font-lock-builtin-face) 133 134 (fontified t) 134 139 (fontified t font-lock-face js2-object-property-access) 139 140 (fontified t) 140 155 (fontified t font-lock-face js2-object-property-access) 155 156 (fontified t face (rainbow-delimiters-depth-3-face)) 156 158 (fontified t) 158 162 (fontified t) 162 169 (fontified t) 169 170 (fontified t) 170 173 (fontified t font-lock-face js2-function-call) 173 174 (fontified t face (rainbow-delimiters-depth-3-face)) 174 175 (fontified t font-lock-face font-lock-builtin-face) 175 178 (fontified t font-lock-face font-lock-builtin-face) 178 179 (fontified t face (rainbow-delimiters-depth-3-face)) 179 180 (fontified t) 180 181 (fontified t) 181 183 (fontified t) 183 184 (fontified t face (rainbow-delimiters-depth-2-face))) . -187) (undo-tree-id11049 . -64) (undo-tree-id11050 . 120) (undo-tree-id11051 . 120) (undo-tree-id11052 . 120) (undo-tree-id11053 . 120) (undo-tree-id11054 . -181) (undo-tree-id11055 . -181) (undo-tree-id11056 . -184) (undo-tree-id11057 . -184) (undo-tree-id11058 . -170) (undo-tree-id11059 . -145) (undo-tree-id11060 . -22) (undo-tree-id11061 . 162) (undo-tree-id11062 . -22) (undo-tree-id11063 . -22) (undo-tree-id11064 . 162) (undo-tree-id11065 . 162) (undo-tree-id11066 . -22) (undo-tree-id11067 . 184) (undo-tree-id11068 . 162) (undo-tree-id11069 . 184) (undo-tree-id11070 . 184) (undo-tree-id11071 . -184) (undo-tree-id11072 . 161) (undo-tree-id11073 . 184) (undo-tree-id11074 . -23) (undo-tree-id11075 . 143) (undo-tree-id11076 . 161) (undo-tree-id11077 . -41) (undo-tree-id11078 . 124) (undo-tree-id11079 . 143) (undo-tree-id11080 . -60) (undo-tree-id11081 . 79) (undo-tree-id11082 . 124) (undo-tree-id11083 . -105) (undo-tree-id11084 . 72) (undo-tree-id11085 . 79) (undo-tree-id11086 . -112) (undo-tree-id11087 . 71) (undo-tree-id11088 . 72) (undo-tree-id11089 . -113) (undo-tree-id11090 . 26) (undo-tree-id11091 . 71) (undo-tree-id11092 . -158) (undo-tree-id11093 . 3) (undo-tree-id11094 . 26) (undo-tree-id11095 . -181) (undo-tree-id11096 . 3) (undo-tree-id11097 . 1) (undo-tree-id11098 . -184) (undo-tree-id11099 . 163) (undo-tree-id11100 . -22) (undo-tree-id11101 . -184) (undo-tree-id11102 . -184) 371 (t 23394 6721 363185 357000)) ((187 . 371)) (23394 6835 644678 0) 0 nil]) ((864 . 867)) nil (23394 6835 646364 0) 0 nil]) ((#("%" 0 1 (font-lock-face font-lock-string-face fontified t)) . -864) (undo-tree-id11035 . -1) (undo-tree-id11036 . -1) (undo-tree-id11037 . -1) (undo-tree-id11038 . -1) (undo-tree-id11039 . -1) (undo-tree-id11040 . 1) (undo-tree-id11041 . 1) (undo-tree-id11042 . -1) 865) nil (23394 6720 993100 0) 0 nil]) ((821 . 824)) nil (23394 6720 993104 0) 0 nil]) ((#("%" 0 1 (font-lock-face font-lock-string-face fontified t)) . -821) (undo-tree-id11043 . -1) (undo-tree-id11044 . -1) (undo-tree-id11045 . 1) (undo-tree-id11046 . -1) (undo-tree-id11047 . -1) (undo-tree-id11048 . -1) 822 (t 23394 6540 75162 935000)) nil (23394 6720 993119 0) 0 nil]) ((755 . 757)) nil (23394 6540 44721 0) 0 nil]) ((#("2" 0 1 (fontified t)) . -755) (undo-tree-id11020 . -1) (undo-tree-id11021 . -1) (undo-tree-id11022 . -1) (undo-tree-id11023 . 1) (undo-tree-id11024 . -1) (undo-tree-id11025 . -1) (undo-tree-id11026 . -1) (undo-tree-id11027 . -1) (undo-tree-id11028 . -1) 756) nil (23394 6540 44767 0) 0 nil]) ((#("0" 0 1 (fontified t)) . -756) (undo-tree-id11029 . -1) (undo-tree-id11030 . -1) (undo-tree-id11031 . -1) (undo-tree-id11032 . 1) (undo-tree-id11033 . -1) (undo-tree-id11034 . -1) 757 (t 23394 6534 91485 478000)) nil (23394 6540 44781 0) 0 nil]) ((755 . 757)) nil (23394 6534 59817 0) 0 nil]) ((#("0" 0 1 (fontified t)) . -755) (undo-tree-id10988 . -1) (undo-tree-id10989 . -1) (undo-tree-id10990 . -1) (undo-tree-id10991 . 1) (undo-tree-id10992 . -1) (undo-tree-id10993 . -1) (undo-tree-id10994 . -1) (undo-tree-id10995 . -1) (undo-tree-id10996 . -1) (undo-tree-id10997 . -1) (undo-tree-id10998 . -1) (undo-tree-id10999 . -1) (undo-tree-id11000 . -1) (#("." 0 1 (fontified t)) . -756) (undo-tree-id11001 . -1) (undo-tree-id11002 . -1) (undo-tree-id11003 . -1) (undo-tree-id11004 . 1) (undo-tree-id11005 . -1) (undo-tree-id11006 . -1) (undo-tree-id11007 . -1) (undo-tree-id11008 . -1) (undo-tree-id11009 . -1) (undo-tree-id11010 . -1) (#("2" 0 1 (fontified t)) . -757) (undo-tree-id11011 . -1) (undo-tree-id11012 . -1) (undo-tree-id11013 . -1) (undo-tree-id11014 . 1) (undo-tree-id11015 . -1) (undo-tree-id11016 . -1) (undo-tree-id11017 . -1) (undo-tree-id11018 . -1) (undo-tree-id11019 . -1) 758 (t 23394 6531 632473 413000)) nil (23394 6534 59916 0) 0 nil]) ((#("0" 0 1 (fontified t)) . -758) (undo-tree-id10970 . -1) (undo-tree-id10971 . -1) (undo-tree-id10972 . 1) (undo-tree-id10973 . -1) 759) nil (23394 6531 603443 0) 0 nil]) ((755 . 759)) nil (23394 6531 603450 0) 0 nil]) ((#("5" 0 1 (fontified t)) . -755) (undo-tree-id10974 . -1) (undo-tree-id10975 . -1) (undo-tree-id10976 . -1) (undo-tree-id10977 . 1) (undo-tree-id10978 . -1) (undo-tree-id10979 . -1) (undo-tree-id10980 . -1) (undo-tree-id10981 . -1) (#("0" 0 1 (fontified t)) . -756) (undo-tree-id10982 . -1) (undo-tree-id10983 . -1) (undo-tree-id10984 . -1) (undo-tree-id10985 . 1) (undo-tree-id10986 . -1) (undo-tree-id10987 . -1) 757 (t 23394 6502 666845 638000)) nil (23394 6531 603477 0) 0 nil]) ((755 . 757)) nil (23394 6502 636377 0) 0 nil]) ((#("1" 0 1 (fontified t)) . -755) (undo-tree-id10929 . -1) (undo-tree-id10930 . -1) (undo-tree-id10931 . -1) (undo-tree-id10932 . 1) (undo-tree-id10933 . -1) (undo-tree-id10934 . -1) (undo-tree-id10935 . -1) (undo-tree-id10936 . -1) (undo-tree-id10937 . -1) (undo-tree-id10938 . -1) (undo-tree-id10939 . -1) (undo-tree-id10940 . -1) (undo-tree-id10941 . -1) (undo-tree-id10942 . -1) (undo-tree-id10943 . -1) (undo-tree-id10944 . -1) (undo-tree-id10945 . -1) (undo-tree-id10946 . -1) (#("0" 0 1 (fontified t)) . -756) (undo-tree-id10947 . -1) (undo-tree-id10948 . -1) (undo-tree-id10949 . -1) (undo-tree-id10950 . 1) (undo-tree-id10951 . -1) (undo-tree-id10952 . -1) (undo-tree-id10953 . -1) (undo-tree-id10954 . -1) (undo-tree-id10955 . -1) (undo-tree-id10956 . -1) (undo-tree-id10957 . -1) (undo-tree-id10958 . -1) (#("0" 0 1 (fontified t)) . -757) (undo-tree-id10959 . -1) (undo-tree-id10960 . -1) (undo-tree-id10961 . -1) (undo-tree-id10962 . 1) (undo-tree-id10963 . -1) (undo-tree-id10964 . -1) (undo-tree-id10965 . -1) (undo-tree-id10966 . -1) (undo-tree-id10967 . -1) (undo-tree-id10968 . -1) (undo-tree-id10969 . -1) 758 (t 23394 6468 969465 829000)) nil (23394 6502 636559 0) 0 nil]) ((855 . 857)) nil (23394 6468 940661 0) 0 nil]) ((851 . 855)) nil (23394 6468 940668 0) 0 nil] [nil nil ((#("`" 0 1 (fontified t font-lock-face font-lock-string-face)) . -858) (undo-tree-id10862 . -1) (undo-tree-id10863 . -1) (undo-tree-id10864 . -1) 859) ((858 . 859)) (23394 6464 537792 0) 0 nil]) ((#(" scale*" 0 1 (fontified t) 1 6 (fontified t font-lock-face js2-object-property) 6 7 (fontified t help-echo "missing : after property id" cursor-sensor-functions #1#)) . 860) (undo-tree-id10865 . 7) (undo-tree-id10866 . -1) (undo-tree-id10867 . 6) (undo-tree-id10868 . -2) (undo-tree-id10869 . 5) (undo-tree-id10870 . -3) (undo-tree-id10871 . 4) (undo-tree-id10872 . -4) (undo-tree-id10873 . 3) (undo-tree-id10874 . -5) (undo-tree-id10875 . 2) (undo-tree-id10876 . -6) (undo-tree-id10877 . -6) (undo-tree-id10878 . -6) (undo-tree-id10879 . 2) (undo-tree-id10880 . -5) (undo-tree-id10881 . 3) (undo-tree-id10882 . 2) (undo-tree-id10883 . -4) (undo-tree-id10884 . 4) (undo-tree-id10885 . 3) (undo-tree-id10886 . -3) (undo-tree-id10887 . 5) (undo-tree-id10888 . 4) (undo-tree-id10889 . -2) (undo-tree-id10890 . 6) (undo-tree-id10891 . 5) (undo-tree-id10892 . -1) (undo-tree-id10893 . 6) (undo-tree-id10894 . 6) (undo-tree-id10895 . -1) (undo-tree-id10896 . 6) (undo-tree-id10897 . 6) (undo-tree-id10898 . -1) (undo-tree-id10899 . 6) (undo-tree-id10900 . 6) (undo-tree-id10901 . -1) (undo-tree-id10902 . 6) (undo-tree-id10903 . -6) (undo-tree-id10904 . -6) (undo-tree-id10905 . -6) (undo-tree-id10906 . -6) (undo-tree-id10907 . -6) (undo-tree-id10908 . -6) (undo-tree-id10909 . -6) (undo-tree-id10910 . -6) (undo-tree-id10911 . -6) (undo-tree-id10912 . -6) (undo-tree-id10913 . -6) (undo-tree-id10914 . -6) (undo-tree-id10915 . -6) (undo-tree-id10916 . -6) (undo-tree-id10917 . 2) (undo-tree-id10918 . -5) (undo-tree-id10919 . 2) (undo-tree-id10920 . -6) (undo-tree-id10921 . 1) (undo-tree-id10922 . -7) (undo-tree-id10923 . 7) (undo-tree-id10924 . 7) (undo-tree-id10925 . -6) (undo-tree-id10926 . -7) (undo-tree-id10927 . 7) (undo-tree-id10928 . -7)) nil (23394 6464 538237 0) 0 nil]) ((nil rear-nonsticky nil 859 . 860) (847 . 860)) nil (23394 6464 537915 0) 0 nil]) ((846 . 847)) nil (23394 6464 537917 0) 0 nil] [nil nil ((#(" `${width}%`," 0 1 (fontified t help-echo #2="missing `}' after expression" cursor-sensor-functions #1#) 1 3 (fontified t font-lock-face font-lock-string-face help-echo #2# cursor-sensor-functions #1#) 3 4 (fontified t font-lock-face font-lock-string-face help-echo #2# cursor-sensor-functions #1#) 4 9 (fontified t help-echo #2# cursor-sensor-functions #1#) 9 11 (fontified t font-lock-face font-lock-string-face help-echo #2# cursor-sensor-functions #1#) 11 12 (fontified t font-lock-face font-lock-string-face help-echo #2# cursor-sensor-functions #1#) 12 13 (fontified t help-echo #2# cursor-sensor-functions #1#)) . 812) (undo-tree-id10715 . 1) (undo-tree-id10716 . -1) (undo-tree-id10717 . 1) (undo-tree-id10718 . 1) (undo-tree-id10719 . -1) (undo-tree-id10720 . 1) (undo-tree-id10721 . 1) (undo-tree-id10722 . -1) (undo-tree-id10723 . 1) (undo-tree-id10724 . 1) (undo-tree-id10725 . -1) (undo-tree-id10726 . 1) (undo-tree-id10727 . 1) (undo-tree-id10728 . -1) (undo-tree-id10729 . 1) (undo-tree-id10730 . 1) (undo-tree-id10731 . -1) (undo-tree-id10732 . 1) (undo-tree-id10733 . 1) (undo-tree-id10734 . -1) (undo-tree-id10735 . 1) (undo-tree-id10736 . 1) (undo-tree-id10737 . -1) (undo-tree-id10738 . 1) (undo-tree-id10739 . -1) (undo-tree-id10740 . -1) (undo-tree-id10741 . 1) (undo-tree-id10742 . -13) (undo-tree-id10743 . 1) (undo-tree-id10744 . -1) (undo-tree-id10745 . 1) (undo-tree-id10746 . -1) (undo-tree-id10747 . 1) (undo-tree-id10748 . -1) (undo-tree-id10749 . 1) (undo-tree-id10750 . 1) (undo-tree-id10751 . -1) (undo-tree-id10752 . 1) (undo-tree-id10753 . 1) (undo-tree-id10754 . -1) (undo-tree-id10755 . 1) (undo-tree-id10756 . 1) (undo-tree-id10757 . -1) (undo-tree-id10758 . 1) (undo-tree-id10759 . 1) (undo-tree-id10760 . -1) (undo-tree-id10761 . 1) (undo-tree-id10762 . 1) (undo-tree-id10763 . -1) (undo-tree-id10764 . 1) (undo-tree-id10765 . 1) (undo-tree-id10766 . -1) (undo-tree-id10767 . 1) (undo-tree-id10768 . 1) (undo-tree-id10769 . -1) (undo-tree-id10770 . 1) (undo-tree-id10771 . -13) (undo-tree-id10772 . -13) (undo-tree-id10773 . 1) (undo-tree-id10774 . -1) (undo-tree-id10775 . 1) (undo-tree-id10776 . 1) (undo-tree-id10777 . -1) (undo-tree-id10778 . 1) (undo-tree-id10779 . 1) (undo-tree-id10780 . -1) (undo-tree-id10781 . 1) (undo-tree-id10782 . 1) (undo-tree-id10783 . -1) (undo-tree-id10784 . 1) (undo-tree-id10785 . 1) (undo-tree-id10786 . -1) (undo-tree-id10787 . 1) (undo-tree-id10788 . 1) (undo-tree-id10789 . -1) (undo-tree-id10790 . 1) (undo-tree-id10791 . 1) (undo-tree-id10792 . -1) (undo-tree-id10793 . 1) (undo-tree-id10794 . 1) (undo-tree-id10795 . -1) (undo-tree-id10796 . 1) (undo-tree-id10797 . 1) (undo-tree-id10798 . -1) (undo-tree-id10799 . 1) (undo-tree-id10800 . 1) (undo-tree-id10801 . -1) (undo-tree-id10802 . 2) (undo-tree-id10803 . 12) (undo-tree-id10804 . -2) (undo-tree-id10805 . 2) (undo-tree-id10806 . 11) (undo-tree-id10807 . -3) (undo-tree-id10808 . 4) (undo-tree-id10809 . 10) (undo-tree-id10810 . -4) (undo-tree-id10811 . 4) (undo-tree-id10812 . 4) (undo-tree-id10813 . -4) (undo-tree-id10814 . 4) (undo-tree-id10815 . 4) (undo-tree-id10816 . -4) (undo-tree-id10817 . 4) (undo-tree-id10818 . 4) (undo-tree-id10819 . -4) (undo-tree-id10820 . 2) (undo-tree-id10821 . 4) (undo-tree-id10822 . -10) (undo-tree-id10823 . 4) (undo-tree-id10824 . 2) (undo-tree-id10825 . -4) (undo-tree-id10826 . 4) (undo-tree-id10827 . 4) (undo-tree-id10828 . -4) (undo-tree-id10829 . 4) (undo-tree-id10830 . 9) (undo-tree-id10831 . -5) (undo-tree-id10832 . 4) (undo-tree-id10833 . 8) (undo-tree-id10834 . -6) (undo-tree-id10835 . 4) (undo-tree-id10836 . 7) (undo-tree-id10837 . -7) (undo-tree-id10838 . 4) (undo-tree-id10839 . 6) (undo-tree-id10840 . -8) (undo-tree-id10841 . 4) (undo-tree-id10842 . 5) (undo-tree-id10843 . -9) (undo-tree-id10844 . 2) (undo-tree-id10845 . 4) (undo-tree-id10846 . -10) (undo-tree-id10847 . 2) (undo-tree-id10848 . 3) (undo-tree-id10849 . -11) (undo-tree-id10850 . 2) (undo-tree-id10851 . 2) (undo-tree-id10852 . -11) (undo-tree-id10853 . 2) (undo-tree-id10854 . 5) (undo-tree-id10855 . -8) (undo-tree-id10856 . 9) (undo-tree-id10857 . 5) (undo-tree-id10858 . -4) (undo-tree-id10859 . 9) (undo-tree-id10860 . 13) (undo-tree-id10861 . -13)) ((812 . 825)) (23394 6457 779869 0) 0 nil]) ((852 . 853) (t 23394 6449 649654 976000)) nil (23394 6457 780506 0) 0 nil]) ((822 . 823)) nil (23394 6449 621420 0) 0 nil]) ((820 . 821)) nil (23394 6449 621425 0) 0 nil]) ((816 . 820)) nil (23394 6449 621427 0) 0 nil]) ((#("100" 0 3 (fontified t)) . -816) (undo-tree-id10574 . -3) (undo-tree-id10575 . -3) (undo-tree-id10576 . 3) (undo-tree-id10577 . -1) (undo-tree-id10578 . 2) (undo-tree-id10579 . -2) (undo-tree-id10580 . 1) (undo-tree-id10581 . -3) (undo-tree-id10582 . -3) 819) nil (23394 6449 621453 0) 0 nil]) ((816 . 819) (815 . 817) (#("{" 0 1 (fontified nil font-lock-face font-lock-string-face)) . -815) (814 . 816) (813 . 815) (#("`" 0 1 (fontified nil)) . -813) (813 . 814) (#("`" 0 1 (fontified nil help-echo "missing `}' after expression" cursor-sensor-functions #1#)) . -813) (813 . 814)) nil (23394 6449 621462 0) 0 nil]) ((#("\"" 0 1 (fontified t font-lock-face font-lock-string-face help-echo "unterminated string literal" cursor-sensor-functions #1#)) . -813) (undo-tree-id10583 . -1) (undo-tree-id10584 . -1) (undo-tree-id10585 . -1) (undo-tree-id10586 . -1) (undo-tree-id10587 . -1) (undo-tree-id10588 . -1) (undo-tree-id10589 . -1) (undo-tree-id10590 . -1) (undo-tree-id10591 . -1) (undo-tree-id10592 . -1) (undo-tree-id10593 . -1) (undo-tree-id10594 . -1) (undo-tree-id10595 . -1) (undo-tree-id10596 . -1) (undo-tree-id10597 . -1) (undo-tree-id10598 . -1) (undo-tree-id10599 . -1) (undo-tree-id10600 . -1) (undo-tree-id10601 . -1) (undo-tree-id10602 . -1) (undo-tree-id10603 . -1) (undo-tree-id10604 . -1) (undo-tree-id10605 . -1) (undo-tree-id10606 . -1) (undo-tree-id10607 . -1) (undo-tree-id10608 . -1) (undo-tree-id10609 . -1) (undo-tree-id10610 . -1) (undo-tree-id10611 . -1) (undo-tree-id10612 . -1) (undo-tree-id10613 . -1) (undo-tree-id10614 . -1) (#("\"" 0 1 (fontified t font-lock-face font-lock-string-face)) . -814) (undo-tree-id10615 . -1) (undo-tree-id10616 . -1) (undo-tree-id10617 . -1) (undo-tree-id10618 . 1) (undo-tree-id10619 . 1) (undo-tree-id10620 . 1) (undo-tree-id10621 . 1) (undo-tree-id10622 . 1) (undo-tree-id10623 . 1) (undo-tree-id10624 . 1) (undo-tree-id10625 . 1) (undo-tree-id10626 . 1) (undo-tree-id10627 . 1) (undo-tree-id10628 . 1) (undo-tree-id10629 . 1) (undo-tree-id10630 . 1) (undo-tree-id10631 . 1) (undo-tree-id10632 . 1) (undo-tree-id10633 . 1) (undo-tree-id10634 . -1) (undo-tree-id10635 . -1) (undo-tree-id10636 . 1) (undo-tree-id10637 . 1) (undo-tree-id10638 . 1) (undo-tree-id10639 . 1) (undo-tree-id10640 . 1) (undo-tree-id10641 . 1) (undo-tree-id10642 . 1) (undo-tree-id10643 . 1) (undo-tree-id10644 . 1) (undo-tree-id10645 . 1) (undo-tree-id10646 . 1) (undo-tree-id10647 . 1) (undo-tree-id10648 . -1) (undo-tree-id10649 . 1) (undo-tree-id10650 . 1) (undo-tree-id10651 . 1) (undo-tree-id10652 . 1) (undo-tree-id10653 . -1) (undo-tree-id10654 . 1) (undo-tree-id10655 . 1) (undo-tree-id10656 . 1) (undo-tree-id10657 . 1) (undo-tree-id10658 . 1) (undo-tree-id10659 . 1) (undo-tree-id10660 . 1) (undo-tree-id10661 . 1) (undo-tree-id10662 . 1) (undo-tree-id10663 . 1) (undo-tree-id10664 . 1) (undo-tree-id10665 . 1) (undo-tree-id10666 . -1) 815) nil (23394 6449 621582 0) 0 nil]) ((#("200px" 0 1 (font-lock-face font-lock-string-face fontified t) 1 3 (font-lock-face font-lock-string-face fontified t) 3 5 (font-lock-face font-lock-string-face fontified t)) . -814) (undo-tree-id10667 . -5) (undo-tree-id10668 . -5) (undo-tree-id10669 . 2) (undo-tree-id10670 . -2) (undo-tree-id10671 . 2) (undo-tree-id10672 . 2) (undo-tree-id10673 . -2) (undo-tree-id10674 . 2) (undo-tree-id10675 . 3) (undo-tree-id10676 . -3) (undo-tree-id10677 . 2) (undo-tree-id10678 . 2) (undo-tree-id10679 . -3) (undo-tree-id10680 . 2) (undo-tree-id10681 . 2) (undo-tree-id10682 . -3) (undo-tree-id10683 . 2) (undo-tree-id10684 . 2) (undo-tree-id10685 . -3) (undo-tree-id10686 . 1) (undo-tree-id10687 . 2) (undo-tree-id10688 . -4) (undo-tree-id10689 . 1) (undo-tree-id10690 . -5) (undo-tree-id10691 . -5) (undo-tree-id10692 . 4) (undo-tree-id10693 . -1) (undo-tree-id10694 . 3) (undo-tree-id10695 . 4) (undo-tree-id10696 . -2) (undo-tree-id10697 . 2) (undo-tree-id10698 . 3) (undo-tree-id10699 . -3) (undo-tree-id10700 . 1) (undo-tree-id10701 . 2) (undo-tree-id10702 . -4) (undo-tree-id10703 . 1) (undo-tree-id10704 . -5) (undo-tree-id10705 . -5) (undo-tree-id10706 . 5) (undo-tree-id10707 . 5) (undo-tree-id10708 . -5) (undo-tree-id10709 . 1) (undo-tree-id10710 . -4) (undo-tree-id10711 . 1) (undo-tree-id10712 . -5) (undo-tree-id10713 . -5) (undo-tree-id10714 . -5) 819 (t 23394 6423 300146 135000)) nil (23394 6449 621651 0) 0 nil]) ((756 . 758)) nil (23394 6423 271264 0) 0 nil]) ((#("-" 0 1 (fontified t help-echo "missing ; after statement" cursor-sensor-functions #1#)) . -756) (undo-tree-id10549 . -1) (undo-tree-id10550 . -1) (undo-tree-id10551 . 1) (undo-tree-id10552 . -1) (undo-tree-id10553 . -1) (undo-tree-id10554 . -1) (undo-tree-id10555 . -1) (#("-" 0 1 (fontified t help-echo "Invalid decrement operand." cursor-sensor-functions #1#)) . -757) (undo-tree-id10556 . -1) (undo-tree-id10557 . -1) (undo-tree-id10558 . -1) (undo-tree-id10559 . 1) (undo-tree-id10560 . -1) 758) nil (23394 6423 271297 0) 0 nil]) ((755 . 758)) nil (23394 6423 271302 0) 0 nil]) ((#("200" 0 3 (fontified t)) . -755) (undo-tree-id10561 . -3) (undo-tree-id10562 . -3) (undo-tree-id10563 . 3) (undo-tree-id10564 . -1) (undo-tree-id10565 . 2) (undo-tree-id10566 . -2) (undo-tree-id10567 . 1) (undo-tree-id10568 . -3) (undo-tree-id10569 . -3) (undo-tree-id10570 . -3) (undo-tree-id10571 . 3) (undo-tree-id10572 . 3) (undo-tree-id10573 . -3) 758 (t 23394 6400 953715 89000)) nil (23394 6423 271325 0) 0 nil]) ((752 . 753)) nil (23394 6400 926399 0) 0 nil]) ((#(" " 0 1 (fontified t)) . -747) (undo-tree-id10298 . -1) (undo-tree-id10299 . -1) (undo-tree-id10300 . -1) (undo-tree-id10301 . 1) (undo-tree-id10302 . -1) (undo-tree-id10303 . -1) 748) nil (23394 6400 926421 0) 0 nil]) ((747 . 748)) nil (23394 6400 926425 0) 0 nil]) ((757 . 758)) nil (23394 6400 926429 0) 0 nil]) ((#(";" 0 1 (fontified t)) . -757) (undo-tree-id10304 . -1) (undo-tree-id10305 . -1) (undo-tree-id10306 . -1) (undo-tree-id10307 . 1) (undo-tree-id10308 . -1) 758) nil (23394 6400 926438 0) 0 nil]) ((754 . 758)) nil (23394 6400 926440 0) 0 nil]) ((#("\"" 0 1 (fontified t font-lock-face font-lock-string-face help-echo "unterminated string literal" cursor-sensor-functions #1#)) . -754) (undo-tree-id10309 . -1) (undo-tree-id10310 . -1) (undo-tree-id10311 . -1) (undo-tree-id10312 . -1) (undo-tree-id10313 . -1) (undo-tree-id10314 . -1) (undo-tree-id10315 . -1) (undo-tree-id10316 . -1) (undo-tree-id10317 . -1) (undo-tree-id10318 . -1) (undo-tree-id10319 . -1) (undo-tree-id10320 . -1) (undo-tree-id10321 . -1) (undo-tree-id10322 . -1) (undo-tree-id10323 . -1) (undo-tree-id10324 . -1) (undo-tree-id10325 . -1) (undo-tree-id10326 . -1) (undo-tree-id10327 . -1) (undo-tree-id10328 . -1) (undo-tree-id10329 . -1) (undo-tree-id10330 . -1) (undo-tree-id10331 . -1) (undo-tree-id10332 . -1) (undo-tree-id10333 . -1) (undo-tree-id10334 . -1) 755) nil (23394 6400 926477 0) 0 nil]) ((#("200" 0 3 (fontified t font-lock-face font-lock-string-face help-echo "missing ; after statement" cursor-sensor-functions #1#)) . 755) (undo-tree-id10335 . -3) (undo-tree-id10336 . -3) (undo-tree-id10337 . 3) (undo-tree-id10338 . -1) (undo-tree-id10339 . 2) (undo-tree-id10340 . -2) (undo-tree-id10341 . 1) (undo-tree-id10342 . -3) (undo-tree-id10343 . -3) (undo-tree-id10344 . -3) (undo-tree-id10345 . -3) (undo-tree-id10346 . -3) (undo-tree-id10347 . 1) (undo-tree-id10348 . -2) (undo-tree-id10349 . 2) (undo-tree-id10350 . 1) (undo-tree-id10351 . -1) (undo-tree-id10352 . 3) (undo-tree-id10353 . 2) (undo-tree-id10354 . 3) (undo-tree-id10355 . 3) (undo-tree-id10356 . 3) (undo-tree-id10357 . -3) (undo-tree-id10358 . -3) (undo-tree-id10359 . -3) (undo-tree-id10360 . -3) (undo-tree-id10361 . -3) (undo-tree-id10362 . -3) (undo-tree-id10363 . -3) (undo-tree-id10364 . -3) (undo-tree-id10365 . 1) (undo-tree-id10366 . -2) (undo-tree-id10367 . 2) (undo-tree-id10368 . 1) (undo-tree-id10369 . -1) (undo-tree-id10370 . 3) (undo-tree-id10371 . 2)) nil (23394 6400 926530 0) 0 nil]) ((#("p" 0 1 (fontified t font-lock-face font-lock-string-face help-echo "missing ; after statement" cursor-sensor-functions #1#)) . -758) (undo-tree-id10372 . -1) (undo-tree-id10373 . -1) (undo-tree-id10374 . -1) (undo-tree-id10375 . 1) (undo-tree-id10376 . -1) (undo-tree-id10377 . -1) (undo-tree-id10378 . -1) (undo-tree-id10379 . 1) (undo-tree-id10380 . 1) (undo-tree-id10381 . -1) (undo-tree-id10382 . -1) (undo-tree-id10383 . -1) (undo-tree-id10384 . -1) (undo-tree-id10385 . -1) (#("x" 0 1 (fontified t font-lock-face font-lock-string-face help-echo "missing ; after statement" cursor-sensor-functions #1#)) . -759) (undo-tree-id10386 . -1) (undo-tree-id10387 . -1) (undo-tree-id10388 . -1) (undo-tree-id10389 . 1) (undo-tree-id10390 . -1) (undo-tree-id10391 . 1) (undo-tree-id10392 . 1) (undo-tree-id10393 . -1) (undo-tree-id10394 . -1) (undo-tree-id10395 . -1) (undo-tree-id10396 . -1) (#("\"" 0 1 (fontified t font-lock-face font-lock-string-face help-echo "missing ; after statement" cursor-sensor-functions #1#)) . -760) (undo-tree-id10397 . -1) (undo-tree-id10398 . -1) (undo-tree-id10399 . -1) (undo-tree-id10400 . -1) (undo-tree-id10401 . 1) (undo-tree-id10402 . -1) 761) nil (23394 6400 926577 0) 0 nil]) ((754 . 755) (759 . 760)) nil (23394 6400 926581 0) 0 nil]) ((754 . 759)) nil (23394 6400 926583 0) 0 nil]) ((750 . 754)) nil (23394 6400 926585 0) 0 nil]) ((748 . 750)) nil (23394 6400 926586 0) 0 nil]) ((#("d" 0 1 (fontified t font-lock-face font-lock-variable-name-face help-echo "missing ; after statement" cursor-sensor-functions #1#)) . -748) (undo-tree-id10403 . -1) (undo-tree-id10404 . -1) (undo-tree-id10405 . -1) (undo-tree-id10406 . 1) (undo-tree-id10407 . -1) 749) nil (23394 6400 926595 0) 0 nil]) ((748 . 749)) nil (23394 6400 926601 0) 0 nil]) ((#("i" 0 1 (fontified t font-lock-face font-lock-variable-name-face help-echo "missing ; after statement" cursor-sensor-functions #1#)) . -748) (undo-tree-id10408 . -1) (undo-tree-id10409 . -1) (undo-tree-id10410 . -1) (undo-tree-id10411 . 1) (undo-tree-id10412 . -1) (undo-tree-id10413 . -1) (undo-tree-id10414 . -1) (undo-tree-id10415 . -1) (undo-tree-id10416 . -1) (undo-tree-id10417 . -1) (undo-tree-id10418 . -1) (undo-tree-id10419 . -1) (undo-tree-id10420 . -1) (#("d" 0 1 (fontified t font-lock-face font-lock-variable-name-face help-echo "missing ; after statement" cursor-sensor-functions #1#)) . -749) (undo-tree-id10421 . -1) (undo-tree-id10422 . -1) (undo-tree-id10423 . -1) (undo-tree-id10424 . 1) (undo-tree-id10425 . -1) 750) nil (23394 6400 926629 0) 0 nil]) ((749 . 750)) nil (23394 6400 926633 0) 0 nil]) ((#("t" 0 1 (fontified t font-lock-face font-lock-variable-name-face help-echo "missing ; after statement" cursor-sensor-functions #1#)) . -749) (undo-tree-id10426 . -1) (undo-tree-id10427 . -1) (undo-tree-id10428 . -1) (undo-tree-id10429 . 1) (undo-tree-id10430 . -1) (undo-tree-id10431 . -1) (undo-tree-id10432 . -1) (undo-tree-id10433 . -1) (undo-tree-id10434 . -1) (#("h" 0 1 (fontified t font-lock-face font-lock-keyword-face help-echo "missing variable name" cursor-sensor-functions #1#)) . -750) (undo-tree-id10435 . -1) (undo-tree-id10436 . -1) (undo-tree-id10437 . -1) (undo-tree-id10438 . -1) (undo-tree-id10439 . -1) (undo-tree-id10440 . 1) (undo-tree-id10441 . -1) (undo-tree-id10442 . -1) 751) nil (23394 6400 926657 0) 0 nil]) ((746 . 751)) nil (23394 6400 926660 0) 0 nil]) ((#(" " 0 1 (fontified t)) . -746) (undo-tree-id10443 . -1) (undo-tree-id10444 . -1) (undo-tree-id10445 . 1) (undo-tree-id10446 . -1) 747) nil (23394 6400 926668 0) 0 nil]) ((744 . 747)) nil (23394 6400 926671 0) 0 nil]) ((#("t" 0 1 (fontified t help-echo "missing ; after statement" cursor-sensor-functions #1#)) . -744) (undo-tree-id10447 . -1) (undo-tree-id10448 . -1) (undo-tree-id10449 . -1) (undo-tree-id10450 . -1) (undo-tree-id10451 . -1) (undo-tree-id10452 . 1) (undo-tree-id10453 . -1) 745) nil (23394 6400 926682 0) 0 nil]) ((743 . 745)) nil (23394 6400 926685 0) 0 nil]) ((#("s" 0 1 (fontified t help-echo "missing ; after statement" cursor-sensor-functions #1#)) . -743) (undo-tree-id10454 . -1) (undo-tree-id10455 . -1) (undo-tree-id10456 . -1) (undo-tree-id10457 . 1) (undo-tree-id10458 . -1) (undo-tree-id10459 . -1) (undo-tree-id10460 . -1) (undo-tree-id10461 . -1) (undo-tree-id10462 . -1) (undo-tree-id10463 . -1) (undo-tree-id10464 . -1) (undo-tree-id10465 . -1) (undo-tree-id10466 . -1) (undo-tree-id10467 . -1) (undo-tree-id10468 . -1) (undo-tree-id10469 . -1) (#("n" 0 1 (fontified t help-echo "missing ; after statement" cursor-sensor-functions #1#)) . -744) (undo-tree-id10470 . -1) (undo-tree-id10471 . -1) (undo-tree-id10472 . -1) (undo-tree-id10473 . 1) (undo-tree-id10474 . -1) (undo-tree-id10475 . -1) (undo-tree-id10476 . -1) (undo-tree-id10477 . -1) (undo-tree-id10478 . -1) (undo-tree-id10479 . -1) (undo-tree-id10480 . -1) (undo-tree-id10481 . -1) (undo-tree-id10482 . -1) (undo-tree-id10483 . -1) (#("t" 0 1 (fontified t help-echo "missing ; after statement" cursor-sensor-functions #1#)) . -745) (undo-tree-id10484 . -1) (undo-tree-id10485 . -1) (undo-tree-id10486 . -1) (undo-tree-id10487 . 1) (undo-tree-id10488 . -1) (undo-tree-id10489 . -1) (undo-tree-id10490 . -1) (undo-tree-id10491 . -1) (undo-tree-id10492 . -1) (undo-tree-id10493 . -1) (undo-tree-id10494 . -1) (undo-tree-id10495 . -1) (#(" " 0 1 (fontified t)) . -746) (undo-tree-id10496 . -1) (undo-tree-id10497 . -1) (undo-tree-id10498 . -1) (undo-tree-id10499 . 1) (undo-tree-id10500 . -1) (undo-tree-id10501 . -1) (undo-tree-id10502 . -1) (#("=" 0 1 (fontified t)) . -747) (undo-tree-id10503 . -1) (undo-tree-id10504 . -1) (undo-tree-id10505 . 1) (undo-tree-id10506 . -1) 748) nil (23394 6400 926758 0) 0 nil]) ((741 . 748)) nil (23394 6400 926765 0) 0 nil]) ((736 . 741)) nil (23394 6400 926766 0) 0 nil]) ((#("w" 0 1 (fontified t help-echo "Undeclared variable or function 'scalew'" cursor-sensor-functions #1#)) . -825) (undo-tree-id10507 . -1) (undo-tree-id10508 . -1) (undo-tree-id10509 . -1) (undo-tree-id10510 . 1) (undo-tree-id10511 . -1) 826) nil (23394 6400 926775 0) 0 nil]) ((825 . 826)) nil (23394 6400 926778 0) 0 nil]) ((#("*" 0 1 (fontified t help-echo "missing `}' after expression" cursor-sensor-functions #1#)) . -825) (undo-tree-id10512 . -1) (undo-tree-id10513 . -1) (undo-tree-id10514 . -1) (undo-tree-id10515 . 1) (undo-tree-id10516 . -1) (undo-tree-id10517 . -1) (undo-tree-id10518 . -1) (undo-tree-id10519 . -1) (undo-tree-id10520 . -1) (undo-tree-id10521 . -1) (undo-tree-id10522 . -1) (undo-tree-id10523 . -1) (#("0" 0 1 (fontified t)) . -826) (undo-tree-id10524 . -1) (undo-tree-id10525 . -1) (undo-tree-id10526 . -1) (undo-tree-id10527 . 1) (undo-tree-id10528 . -1) (undo-tree-id10529 . -1) (undo-tree-id10530 . -1) (undo-tree-id10531 . -1) (undo-tree-id10532 . -1) (undo-tree-id10533 . -1) (#("." 0 1 (fontified t)) . -827) (undo-tree-id10534 . -1) (undo-tree-id10535 . -1) (undo-tree-id10536 . -1) (undo-tree-id10537 . 1) (undo-tree-id10538 . -1) (undo-tree-id10539 . -1) (undo-tree-id10540 . -1) (undo-tree-id10541 . -1) (#("5" 0 1 (fontified t)) . -828) (undo-tree-id10542 . -1) (undo-tree-id10543 . -1) (undo-tree-id10544 . -1) (undo-tree-id10545 . 1) (undo-tree-id10546 . -1) (undo-tree-id10547 . -1) (undo-tree-id10548 . -1) 829 (t 23394 6340 467306 914000)) nil (23394 6400 926829 0) 0 nil]) ((#("             " 0 13 (fontified t)) . -830) (undo-tree-id10277 . 13) (undo-tree-id10278 . -13) 829) nil (23394 6340 441337 0) 0 nil]) ((825 . 829)) nil (23394 6340 441343 0) 0 nil]) ((#("{" 0 1 (fontified t help-echo "missing `}' after expression" cursor-sensor-functions #1# face (rainbow-delimiters-depth-6-face))) . -820) (undo-tree-id10279 . -1) (undo-tree-id10280 . -1) (undo-tree-id10281 . -1) (undo-tree-id10282 . 1) (undo-tree-id10283 . -1) (undo-tree-id10284 . -1) (undo-tree-id10285 . -1) 821) nil (23394 6340 441356 0) 0 nil]) ((#("}" 0 1 (fontified t help-echo "missing `}' after expression" cursor-sensor-functions #1# face (rainbow-delimiters-depth-6-face))) . 821) (undo-tree-id10286 . -1) (undo-tree-id10287 . 1)) nil (23394 6340 441363 0) 0 nil]) ((820 . 822) (#("{" 0 1 (fontified nil)) . -820) (820 . 821)) nil (23394 6340 441366 0) 0 nil]) ((#("*" 0 1 (fontified t help-echo "missing `}' after expression" cursor-sensor-functions #1#)) . -825) (undo-tree-id10288 . -1) (undo-tree-id10289 . -1) (undo-tree-id10290 . -1) (undo-tree-id10291 . 1) (undo-tree-id10292 . -1) 826) nil (23394 6340 441376 0) 0 nil]) ((820 . 826)) nil (23394 6340 441378 0) 0 nil]) ((812 . 820)) nil (23394 6340 441380 0) 0 nil]) ((798 . 812)) nil (23394 6340 441382 0) 0 nil]) ((797 . 798)) nil (23394 6340 441384 0) 0 nil]) ((798 . 811) (#("             " 0 13 (fontified nil)) . 799) (798 . 812) (#("             " 0 13 (fontified t)) . 798) (undo-tree-id10293 . -13) (undo-tree-id10294 . -13) (undo-tree-id10295 . -13) (undo-tree-id10296 . -13) (undo-tree-id10297 . -13) 811) nil (23394 6340 441395 0) 0 nil]) ((798 . 811) (#("     " 0 5 (fontified nil)) . -783) (802 . 803) (t 23394 6297 123061 145000)) nil (23394 6340 441400 0) 0 nil]) ((798 . 799) (t 23394 6292 513620 195000)) nil (23394 6297 98148 0) 0 nil]) ((813 . 814) (#("}" 0 1 (fontified nil help-echo "missing `}' after expression" cursor-sensor-functions #1#)) . -813) (813 . 814)) nil (23394 6292 133192 0) 0 nil]) ((#("]" 0 1 (help-echo "missing } after property list" cursor-sensor-functions #1# fontified t face (rainbow-delimiters-mismatched-face))) . -813) (undo-tree-id10258 . -1) (undo-tree-id10259 . -1) (undo-tree-id10260 . 1) (undo-tree-id10261 . -1) (undo-tree-id10262 . -1) (undo-tree-id10263 . 1) (undo-tree-id10264 . 1) (undo-tree-id10265 . 1) (undo-tree-id10266 . 1) (undo-tree-id10267 . 1) (undo-tree-id10268 . -1) (undo-tree-id10269 . -1) (undo-tree-id10270 . -1) (undo-tree-id10271 . -1) (undo-tree-id10272 . 1) (undo-tree-id10273 . 1) (undo-tree-id10274 . 1) (undo-tree-id10275 . -1) (undo-tree-id10276 . -1) 814 (t 23394 6285 183462 377000)) nil (23394 6292 133232 0) 0 nil]) ((795 . 796) (799 . 800) (t 23394 6277 499312 962000)) nil (23394 6285 154295 0) 0 nil]) ((#("\"" 0 1 (fontified t font-lock-face font-lock-string-face help-echo "unterminated string literal" cursor-sensor-functions #1#)) . 767) (undo-tree-id10244 . 1) (undo-tree-id10245 . -1) (undo-tree-id10246 . -1) (undo-tree-id10247 . -1) (undo-tree-id10248 . 1)) nil (23394 6277 470276 0) 0 nil]) ((#("\"" 0 1 (fontified t font-lock-face font-lock-string-face help-echo "unterminated string literal" cursor-sensor-functions #1#)) . -814) (undo-tree-id10249 . -1) (undo-tree-id10250 . -1) (undo-tree-id10251 . -1) (undo-tree-id10252 . 1) (undo-tree-id10253 . -1) (undo-tree-id10254 . -1) (undo-tree-id10255 . -1) (undo-tree-id10256 . -1) (undo-tree-id10257 . -1) 815 (t 23394 6245 876228 960000)) nil (23394 6277 470296 0) 0 nil]) ((#("\"" 0 1 (font-lock-face font-lock-string-face help-echo "invalid JSX identifier" cursor-sensor-functions #1# fontified t)) . -815) (undo-tree-id10238 . -1) (undo-tree-id10239 . -1) (undo-tree-id10240 . 1) (undo-tree-id10241 . 1) (undo-tree-id10242 . -1) (undo-tree-id10243 . -1) 816 (t 23394 6242 384565 572000)) nil (23394 6245 845702 0) 0 nil]) ((796 . 797)) nil (23394 6242 352191 0) 0 nil]) ((#("\"" 0 1 (fontified t font-lock-face font-lock-string-face help-echo "unterminated string literal" cursor-sensor-functions #1#)) . -796) (undo-tree-id10210 . -1) (undo-tree-id10211 . -1) (undo-tree-id10212 . -1) (undo-tree-id10213 . -1) (undo-tree-id10214 . -1) (undo-tree-id10215 . -1) (undo-tree-id10216 . -1) (undo-tree-id10217 . -1) (#("2" 0 1 (fontified t font-lock-face font-lock-string-face help-echo "invalid JSX identifier" cursor-sensor-functions #1#)) . -797) (undo-tree-id10218 . -1) (undo-tree-id10219 . -1) (undo-tree-id10220 . 1) (undo-tree-id10221 . -1) (undo-tree-id10222 . -1) (undo-tree-id10223 . 1) (undo-tree-id10224 . 1) (undo-tree-id10225 . 1) (undo-tree-id10226 . 1) (undo-tree-id10227 . -1) 798) nil (23394 6242 352231 0) 0 nil]) ((#("\"" 0 1 (font-lock-face font-lock-string-face help-echo "invalid JSX identifier" cursor-sensor-functions #1# fontified t)) . -801) (undo-tree-id10228 . -1) (undo-tree-id10229 . -1) (undo-tree-id10230 . -1) (undo-tree-id10231 . 1) (undo-tree-id10232 . -1) (undo-tree-id10233 . -1) (undo-tree-id10234 . -1) (undo-tree-id10235 . -1) (undo-tree-id10236 . -1) (undo-tree-id10237 . -1) 802 (t 23394 6228 138192 383000)) nil (23394 6242 352253 0) 0 nil]) ((111 . 113)) nil (23394 6228 105204 0) 0 nil]) ((#(" " 0 1 (fontified t)) . -111) (undo-tree-id10174 . -1) (undo-tree-id10175 . -1) (undo-tree-id10176 . 1) (undo-tree-id10177 . -1) (undo-tree-id10178 . -1) 112) nil (23394 6228 105224 0) 0 nil]) ((111 . 112)) nil (23394 6228 105227 0) 0 nil]) ((#("=" 0 1 (fontified t)) . -111) (undo-tree-id10179 . -1) (undo-tree-id10180 . -1) (undo-tree-id10181 . 1) (undo-tree-id10182 . -1) 112) nil (23394 6228 105234 0) 0 nil]) ((110 . 112)) nil (23394 6228 105240 0) 0 nil]) ((#("=" 0 1 (fontified t)) . -110) (undo-tree-id10183 . -1) (undo-tree-id10184 . -1) (undo-tree-id10185 . 1) (undo-tree-id10186 . -1) (undo-tree-id10187 . -1) (undo-tree-id10188 . -1) (#(" " 0 1 (fontified t)) . -111) (undo-tree-id10189 . -1) (undo-tree-id10190 . -1) (undo-tree-id10191 . 1) (undo-tree-id10192 . -1) 112) nil (23394 6228 105268 0) 0 nil]) ((110 . 112)) nil (23394 6228 105271 0) 0 nil]) ((#(":" 0 1 (fontified t help-echo "missing ; before statement" cursor-sensor-functions #1#)) . -110) (undo-tree-id10193 . -1) (undo-tree-id10194 . -1) (undo-tree-id10195 . -1) (undo-tree-id10196 . -1) (undo-tree-id10197 . -1) (undo-tree-id10198 . -1) (undo-tree-id10199 . -1) (undo-tree-id10200 . -1) (undo-tree-id10201 . -1) (undo-tree-id10202 . -1) (#(" " 0 1 (fontified t)) . -111) (undo-tree-id10203 . -1) (undo-tree-id10204 . -1) (undo-tree-id10205 . -1) (undo-tree-id10206 . -1) (undo-tree-id10207 . -1) (undo-tree-id10208 . -1) (undo-tree-id10209 . -1) 112 (t 23394 6218 243693 131000)) nil (23394 6228 105295 0) 0 nil]) ((#("  }" 0 2 (fontified t help-echo #3="missing ; after statement" cursor-sensor-functions #1#) 2 3 (fontified t help-echo #3# cursor-sensor-functions #1# face (rainbow-delimiters-depth-2-face))) . 145) (undo-tree-id10013 . 3) (undo-tree-id10014 . 3) (undo-tree-id10015 . 3) (undo-tree-id10016 . 3) (undo-tree-id10017 . 3) (undo-tree-id10018 . 3) (undo-tree-id10019 . 3) (undo-tree-id10020 . 1) (undo-tree-id10021 . 3) (undo-tree-id10022 . 3) (undo-tree-id10023 . 3) (undo-tree-id10024 . 3) (undo-tree-id10025 . 3) (undo-tree-id10026 . 3) (undo-tree-id10027 . 3) (undo-tree-id10028 . 3) (undo-tree-id10029 . 3) (undo-tree-id10030 . 3) (undo-tree-id10031 . 3) (undo-tree-id10032 . 3) (undo-tree-id10033 . 3) (undo-tree-id10034 . 3) (undo-tree-id10035 . 3) (undo-tree-id10036 . 3) (undo-tree-id10037 . 3) (undo-tree-id10038 . 3) (undo-tree-id10039 . 3) (undo-tree-id10040 . 3) (undo-tree-id10041 . 3) (undo-tree-id10042 . 3) (undo-tree-id10043 . 3) (undo-tree-id10044 . 3) (undo-tree-id10045 . 3) (undo-tree-id10046 . 3) (undo-tree-id10047 . 3) (undo-tree-id10048 . 3) (undo-tree-id10049 . 3) (undo-tree-id10050 . 3) (undo-tree-id10051 . 3) (undo-tree-id10052 . -3) (undo-tree-id10053 . 3) (undo-tree-id10054 . 3) (undo-tree-id10055 . -3)) nil (23394 6218 214432 0) 0 nil]) ((#("
" 0 1 (fontified t)) . 145) (undo-tree-id10056 . 1) (undo-tree-id10057 . 1) (undo-tree-id10058 . 1) (undo-tree-id10059 . 1) (undo-tree-id10060 . 1) (undo-tree-id10061 . 1) (undo-tree-id10062 . 1) (undo-tree-id10063 . 1) (undo-tree-id10064 . 1) (undo-tree-id10065 . 1) (undo-tree-id10066 . 1) (undo-tree-id10067 . 1) (undo-tree-id10068 . 1) (undo-tree-id10069 . 1) (undo-tree-id10070 . 1) (undo-tree-id10071 . 1) (undo-tree-id10072 . 1) (undo-tree-id10073 . 1) (undo-tree-id10074 . 1) (undo-tree-id10075 . 1) (undo-tree-id10076 . 1) (undo-tree-id10077 . 1) (undo-tree-id10078 . 1) (undo-tree-id10079 . 1) (undo-tree-id10080 . 1) (undo-tree-id10081 . 1) (undo-tree-id10082 . 1) (undo-tree-id10083 . 1) (undo-tree-id10084 . 1) (undo-tree-id10085 . 1) (undo-tree-id10086 . 1) (undo-tree-id10087 . 1) (undo-tree-id10088 . 1) (undo-tree-id10089 . 1) (undo-tree-id10090 . 1) (undo-tree-id10091 . 1) (undo-tree-id10092 . -1) (undo-tree-id10093 . 1) (undo-tree-id10094 . 1) (undo-tree-id10095 . -1)) nil (23394 6218 214503 0) 0 nil]) ((#("    width:" 0 4 (fontified t) 4 9 (fontified t font-lock-face js2-object-property) 9 10 (fontified t)) . 145) (undo-tree-id10096 . 10) (undo-tree-id10097 . 10) (undo-tree-id10098 . 10) (undo-tree-id10099 . 10) (undo-tree-id10100 . 10) (undo-tree-id10101 . 10) (undo-tree-id10102 . 10) (undo-tree-id10103 . 10) (undo-tree-id10104 . 10) (undo-tree-id10105 . 10) (undo-tree-id10106 . -4) (undo-tree-id10107 . 6) (undo-tree-id10108 . -5) (undo-tree-id10109 . 5) (undo-tree-id10110 . -6) (undo-tree-id10111 . 4) (undo-tree-id10112 . -7) (undo-tree-id10113 . 3) (undo-tree-id10114 . -8) (undo-tree-id10115 . 2) (undo-tree-id10116 . -9) (undo-tree-id10117 . 1) (undo-tree-id10118 . -10) (undo-tree-id10119 . -10) (undo-tree-id10120 . 10) (undo-tree-id10121 . 10) (undo-tree-id10122 . 10) (undo-tree-id10123 . 10) (undo-tree-id10124 . 10) (undo-tree-id10125 . 10) (undo-tree-id10126 . 10) (undo-tree-id10127 . 10) (undo-tree-id10128 . 10) (undo-tree-id10129 . -10)) nil (23394 6218 214558 0) 0 nil]) ((#("
" 0 1 (fontified t)) . 145) (undo-tree-id10130 . 1) (undo-tree-id10131 . 1) (undo-tree-id10132 . 1) (undo-tree-id10133 . 1) (undo-tree-id10134 . 1) (undo-tree-id10135 . 1) (undo-tree-id10136 . 1) (undo-tree-id10137 . 1) (undo-tree-id10138 . 1) (undo-tree-id10139 . 1) (undo-tree-id10140 . 1) (undo-tree-id10141 . 1) (undo-tree-id10142 . 1) (undo-tree-id10143 . 1) (undo-tree-id10144 . 1) (undo-tree-id10145 . 1) (undo-tree-id10146 . 1) (undo-tree-id10147 . -1)) nil (23394 6218 214588 0) 0 nil]) ((#("  root: {" 0 2 (fontified t) 2 6 (fontified t font-lock-face js2-object-property) 6 8 (fontified t) 8 9 (fontified t face (rainbow-delimiters-depth-3-face))) . 145) (undo-tree-id10148 . -9) (undo-tree-id10149 . 9) (undo-tree-id10150 . -2) (undo-tree-id10151 . 7) (undo-tree-id10152 . -3) (undo-tree-id10153 . 6) (undo-tree-id10154 . -4) (undo-tree-id10155 . 5) (undo-tree-id10156 . -5) (undo-tree-id10157 . 4) (undo-tree-id10158 . -6) (undo-tree-id10159 . -6) (undo-tree-id10160 . -6) (undo-tree-id10161 . -6) (undo-tree-id10162 . -6) (undo-tree-id10163 . 3) (undo-tree-id10164 . -7) (undo-tree-id10165 . 2) (undo-tree-id10166 . -8) (undo-tree-id10167 . 1) (undo-tree-id10168 . -9) (undo-tree-id10169 . -9) (undo-tree-id10170 . -9) (undo-tree-id10171 . -9) (undo-tree-id10172 . 9) (undo-tree-id10173 . -9) (t 23394 6213 58212 291000)) nil (23394 6218 214628 0) 0 nil]) ((#("    " 0 4 (fontified t)) . -322) (undo-tree-id9959 . -4) (undo-tree-id9960 . -4) (#(" " 0 1 (fontified t)) . -165) (undo-tree-id9961 . 1) (undo-tree-id9962 . -1) 830) nil (23394 6213 30179 0) 0 nil]) ((824 . 825) (828 . 829)) nil (23394 6213 30186 0) 0 nil]) ((821 . 828)) nil (23394 6213 30188 0) 0 nil]) ((#(":" 0 1 (fontified t font-lock-face rjsx-attr help-echo "invalid JSX identifier" cursor-sensor-functions #1#)) . -821) (undo-tree-id9963 . -1) (undo-tree-id9964 . -1) (undo-tree-id9965 . -1) (undo-tree-id9966 . 1) (undo-tree-id9967 . -1) 822) nil (23394 6213 30194 0) 0 nil]) ((821 . 822)) nil (23394 6213 30196 0) 0 nil]) ((#("j" 0 1 (fontified t font-lock-face rjsx-attr)) . -821) (undo-tree-id9968 . -1) (undo-tree-id9969 . -1) (undo-tree-id9970 . -1) (undo-tree-id9971 . 1) (undo-tree-id9972 . -1) 822) nil (23394 6213 30202 0) 0 nil]) ((819 . 822)) nil (23394 6213 30203 0) 0 nil]) ((#("d" 0 1 (fontified t font-lock-face rjsx-attr)) . -819) (undo-tree-id9973 . -1) (undo-tree-id9974 . -1) (undo-tree-id9975 . 1) (undo-tree-id9976 . -1) 820) nil (23394 6213 30208 0) 0 nil]) ((819 . 820)) nil (23394 6213 30210 0) 0 nil]) ((#("t" 0 1 (fontified t font-lock-face rjsx-attr)) . -819) (undo-tree-id9977 . -1) (undo-tree-id9978 . -1) (undo-tree-id9979 . -1) (undo-tree-id9980 . 1) (undo-tree-id9981 . -1) (undo-tree-id9982 . -1) (undo-tree-id9983 . -1) (undo-tree-id9984 . -1) (undo-tree-id9985 . -1) (#("h" 0 1 (fontified t font-lock-face font-lock-keyword-face help-echo "invalid JSX identifier" cursor-sensor-functions #1#)) . -820) (undo-tree-id9986 . -1) (undo-tree-id9987 . -1) (undo-tree-id9988 . -1) (undo-tree-id9989 . 1) (undo-tree-id9990 . -1) (undo-tree-id9991 . -1) (undo-tree-id9992 . -1) (undo-tree-id9993 . -1) (#(":" 0 1 (fontified t help-echo "invalid JSX identifier" cursor-sensor-functions #1#)) . -821) (undo-tree-id9994 . -1) (undo-tree-id9995 . -1) (undo-tree-id9996 . -1) (undo-tree-id9997 . -1) (undo-tree-id9998 . 1) (undo-tree-id9999 . -1) 822) nil (23394 6213 30248 0) 0 nil]) ((817 . 822)) nil (23394 6213 30252 0) 0 nil]) ((798 . 817)) nil (23394 6213 30253 0) 0 nil]) ((812 . 814) (#("\"" 0 1 (fontified nil)) . -812) (812 . 813) (#("\"" 0 1 (help-echo "invalid JSX identifier" cursor-sensor-functions #1# fontified nil)) . -812) (812 . 813)) nil (23394 6213 30255 0) 0 nil]) ((#("\"" 0 1 (fontified t font-lock-face font-lock-string-face help-echo "syntax error" cursor-sensor-functions #1#)) . 796) (undo-tree-id10000 . -1) (undo-tree-id10001 . -1) (undo-tree-id10002 . 1)) nil (23394 6213 30260 0) 0 nil]) ((795 . 797) (#("\"" 0 1 (fontified nil)) . -795) (795 . 796) (#("\"" 0 1 (help-echo "syntax error" cursor-sensor-functions #1# fontified nil)) . -795) (795 . 796)) nil (23394 6213 30266 0) 0 nil]) ((322 . 327)) nil (23394 6213 30267 0) 0 nil]) ((159 . 166)) nil (23394 6213 30268 0) 0 nil]) ((155 . 159) (156 . 158) (#("    " 0 4 (fontified nil face (rainbow-delimiters-depth-3-face))) . 155) (155 . 159) (154 . 156)) nil (23394 6213 30271 0) 0 nil]) ((153 . 155) (#("{" 0 1 (fontified nil)) . -153) (151 . 154)) nil (23394 6213 30273 0) 0 nil]) ((#("-" 0 1 (fontified t help-echo "missing : after property id" cursor-sensor-functions #1#)) . -151) (undo-tree-id10003 . -1) (undo-tree-id10004 . -1) (undo-tree-id10005 . -1) (undo-tree-id10006 . 1) (undo-tree-id10007 . -1) 152) nil (23394 6213 30284 0) 0 nil]) ((151 . 152)) nil (23394 6213 30286 0) 0 nil]) ((#("(" 0 1 (fontified nil face (rainbow-delimiters-depth-3-face))) . -151) (undo-tree-id10008 . -1) (undo-tree-id10009 . -1) (undo-tree-id10010 . 1) (undo-tree-id10011 . -1) (#(")" 0 1 (fontified t face (rainbow-delimiters-depth-3-face))) . 152) (undo-tree-id10012 . 1)) nil (23394 6213 30293 0) 0 nil]) ((151 . 153) (#("(" 0 1 (fontified nil font-lock-face js2-object-property help-echo "Undeclared variable or function 'root'" cursor-sensor-functions #1#)) . -151) (147 . 152)) nil (23394 6213 30296 0) 0 nil]) ((145 . 147) (t 23394 6103 686368 404000)) nil (23394 6213 30298 0) 0 nil]) ((#("  " 0 2 (fontified t)) . -145) (undo-tree-id9837 . 2) (undo-tree-id9838 . -2) (undo-tree-id9839 . 2) (undo-tree-id9840 . 2) 116) nil (23394 6103 656892 0) 0 nil]) ((99 . 105)) nil (23394 6103 656901 0) 0 nil]) ((110 . 111)) nil (23394 6103 656904 0) 0 nil]) ((#("  " 0 2 (fontified t)) . -99) (undo-tree-id9841 . 2) 112) nil (23394 6103 656914 0) 0 nil]) ((99 . 112)) nil (23394 6103 656916 0) 0 nil]) ((98 . 99)) nil (23394 6103 656918 0) 0 nil]) ((#("  scale: 0.5;" 0 2 (fontified t) 2 7 (font-lock-face js2-object-property fontified t) 7 13 (fontified t)) . 167) (undo-tree-id9842 . -13) (undo-tree-id9843 . 13) (undo-tree-id9844 . -2) (undo-tree-id9845 . 11) (undo-tree-id9846 . -3) (undo-tree-id9847 . -3) (undo-tree-id9848 . -3) (undo-tree-id9849 . 10) (undo-tree-id9850 . -4) (undo-tree-id9851 . 9) (undo-tree-id9852 . -5) (undo-tree-id9853 . 8) (undo-tree-id9854 . -6) (undo-tree-id9855 . 7) (undo-tree-id9856 . -7) (undo-tree-id9857 . -7) (undo-tree-id9858 . -7) (undo-tree-id9859 . 6) (undo-tree-id9860 . -8) (undo-tree-id9861 . 5) (undo-tree-id9862 . -9) (undo-tree-id9863 . -9) (undo-tree-id9864 . -9) (undo-tree-id9865 . -9) (undo-tree-id9866 . -9) (undo-tree-id9867 . 4) (undo-tree-id9868 . -10) (undo-tree-id9869 . 3) (undo-tree-id9870 . -11) (undo-tree-id9871 . -11) (undo-tree-id9872 . -11) (undo-tree-id9873 . -11) (undo-tree-id9874 . -11) (undo-tree-id9875 . -11) (undo-tree-id9876 . -11) (undo-tree-id9877 . 2) (undo-tree-id9878 . -12) (undo-tree-id9879 . 1) (undo-tree-id9880 . -13) (undo-tree-id9881 . -13) (undo-tree-id9882 . -13) (undo-tree-id9883 . -13) (undo-tree-id9884 . -13) (undo-tree-id9885 . 13) (undo-tree-id9886 . -13)) nil (23394 6103 657042 0) 0 nil]) ((126 . 128)) nil (23394 6103 657047 0) 0 nil]) ((761 . 773)) nil (23394 6103 657049 0) 0 nil]) ((#("}" 0 1 (fontified nil)) . -762) (762 . 763) (#("}" 0 1 (fontified nil help-echo "invalid property id" cursor-sensor-functions #1# face (rainbow-delimiters-mismatched-face))) . -762) (761 . 763) (#("]" 0 1 (fontified nil help-echo "missing `}' after expression" cursor-sensor-functions #1# face (rainbow-delimiters-depth-5-face))) . -761) (761 . 762)) nil (23394 6103 657053 0) 0 nil]) ((#(".className" 0 1 (fontified t help-echo "invalid property id" cursor-sensor-functions #1#) 1 10 (fontified t help-echo "missing } after property list" cursor-sensor-functions #1#)) . 761) (undo-tree-id9887 . 10) (undo-tree-id9888 . 10) (undo-tree-id9889 . 10) (undo-tree-id9890 . 10) (undo-tree-id9891 . 10) (undo-tree-id9892 . 10) (undo-tree-id9893 . 10) (undo-tree-id9894 . 10) (undo-tree-id9895 . 10) (undo-tree-id9896 . 10) (undo-tree-id9897 . 10) (undo-tree-id9898 . 10) (undo-tree-id9899 . 10) (undo-tree-id9900 . 10) (undo-tree-id9901 . -10) (undo-tree-id9902 . -1) (undo-tree-id9903 . -10) (undo-tree-id9904 . -1) (undo-tree-id9905 . 10) (undo-tree-id9906 . 10) (undo-tree-id9907 . -10)) nil (23394 6103 657096 0) 0 nil]) ((#(".props" 0 1 (fontified t help-echo "invalid property id" cursor-sensor-functions #1#) 1 6 (fontified t help-echo "missing } after property list" cursor-sensor-functions #1#)) . 761) (undo-tree-id9908 . 4) (undo-tree-id9909 . -2) (undo-tree-id9910 . 4) (undo-tree-id9911 . 4) (undo-tree-id9912 . -2) (undo-tree-id9913 . 3) (undo-tree-id9914 . 4) (undo-tree-id9915 . -3) (undo-tree-id9916 . 3) (undo-tree-id9917 . 3) (undo-tree-id9918 . -3) (undo-tree-id9919 . 3) (undo-tree-id9920 . 6) (undo-tree-id9921 . 6) (undo-tree-id9922 . 6) (undo-tree-id9923 . 6) (undo-tree-id9924 . -1) (undo-tree-id9925 . -6) (undo-tree-id9926 . -1) (undo-tree-id9927 . 6) (undo-tree-id9928 . 6) (undo-tree-id9929 . -6)) nil (23394 6103 657140 0) 0 nil]) ((#("this" 0 4 (fontified t font-lock-face js2-object-property help-echo "missing `}' after expression" cursor-sensor-functions #1#)) . 761) (undo-tree-id9930 . 4) (undo-tree-id9931 . 4) (undo-tree-id9932 . -4) (undo-tree-id9933 . 4) (undo-tree-id9934 . 4) (undo-tree-id9935 . -4) (undo-tree-id9936 . -4)) nil (23394 6103 657156 0) 0 nil]) ((#("}" 0 1 (fontified t help-echo "missing `}' after expression" cursor-sensor-functions #1# face (rainbow-delimiters-depth-5-face))) . 761) (undo-tree-id9937 . 1)) nil (23394 6103 657161 0) 0 nil]) ((760 . 762) (#("{" 0 1 (fontified nil face (rainbow-delimiters-depth-4-face))) . -760) (760 . 761)) nil (23394 6103 657164 0) 0 nil]) ((756 . 758)) nil (23394 6103 657166 0) 0 nil]) ((#("e" 0 1 (fontified t font-lock-face rjsx-attr)) . -756) (undo-tree-id9938 . -1) (undo-tree-id9939 . -1) (undo-tree-id9940 . 1) (undo-tree-id9941 . -1) (undo-tree-id9942 . -1) (undo-tree-id9943 . -1) (#("l" 0 1 (fontified t font-lock-face rjsx-attr)) . -757) (undo-tree-id9944 . -1) (undo-tree-id9945 . -1) (undo-tree-id9946 . 1) (undo-tree-id9947 . -1) 758) nil (23394 6103 657194 0) 0 nil]) ((753 . 758)) nil (23394 6103 657197 0) 0 nil]) ((#("className" 0 3 (font-lock-face rjsx-attr fontified t) 3 9 (font-lock-face rjsx-attr fontified t)) . -753) (undo-tree-id9948 . -8) (undo-tree-id9949 . -9) (undo-tree-id9950 . -9) (undo-tree-id9951 . -9) (undo-tree-id9952 . -2) (undo-tree-id9953 . 1) (undo-tree-id9954 . -8) (undo-tree-id9955 . 1) (undo-tree-id9956 . -9) (undo-tree-id9957 . -9) (undo-tree-id9958 . -9) 762 (t 23394 6034 516793 11000)) nil (23394 6103 657219 0) 0 nil]) ((#("  " 0 2 (fontified t)) . -179) (undo-tree-id9792 . -2) 178) nil (23394 6034 491141 0) 0 nil]) ((176 . 178)) nil (23394 6034 491147 0) 0 nil]) ((#("4" 0 1 (fontified t)) . -176) (undo-tree-id9793 . -1) (undo-tree-id9794 . -1) (undo-tree-id9795 . 1) (undo-tree-id9796 . -1) (undo-tree-id9797 . -1) (undo-tree-id9798 . -1) (#("5" 0 1 (fontified t)) . -177) (undo-tree-id9799 . -1) (undo-tree-id9800 . -1) (undo-tree-id9801 . 1) (undo-tree-id9802 . -1) 178) nil (23394 6034 491166 0) 0 nil]) ((176 . 178)) nil (23394 6034 491169 0) 0 nil]) ((#("t" 0 1 (fontified t font-lock-face js2-object-property help-echo "Undeclared variable or function 't'" cursor-sensor-functions #1#)) . -176) (undo-tree-id9803 . -1) (undo-tree-id9804 . -1) (undo-tree-id9805 . -1) (undo-tree-id9806 . 1) (undo-tree-id9807 . -1) 177) nil (23394 6034 491179 0) 0 nil]) ((174 . 177)) nil (23394 6034 491184 0) 0 nil]) ((#("2" 0 1 (fontified t)) . -174) (undo-tree-id9808 . -1) (undo-tree-id9809 . -1) (undo-tree-id9810 . -1) (undo-tree-id9811 . 1) (undo-tree-id9812 . -1) (undo-tree-id9813 . -1) 175) nil (23394 6034 491194 0) 0 nil]) ((174 . 175)) nil (23394 6034 491197 0) 0 nil]) ((#("0" 0 1 (fontified t)) . -174) (undo-tree-id9814 . -1) (undo-tree-id9815 . -1) (undo-tree-id9816 . -1) (undo-tree-id9817 . 1) (undo-tree-id9818 . -1) (undo-tree-id9819 . -1) 175) nil (23394 6034 491208 0) 0 nil]) ((172 . 175)) nil (23394 6034 491210 0) 0 nil]) ((#("\"" 0 1 (fontified nil font-lock-face font-lock-string-face help-echo #4="missing : after property id" cursor-sensor-functions #1#)) . -172) (undo-tree-id9820 . -1) (undo-tree-id9821 . -1) (undo-tree-id9822 . -1) (undo-tree-id9823 . 1) (undo-tree-id9824 . -1) (#("\"" 0 1 (fontified t font-lock-face font-lock-string-face help-echo #4# cursor-sensor-functions #1#)) . 173) (undo-tree-id9825 . -1) (undo-tree-id9826 . 1)) nil (23394 6034 491223 0) 0 nil]) ((172 . 174) (#("\"" 0 1 (fontified nil)) . -172) (172 . 173) (#("\"" 0 1 (fontified nil font-lock-face js2-object-property help-echo "Undeclared variable or function 'scale'" cursor-sensor-functions #1#)) . -172) (168 . 173)) nil (23394 6034 491229 0) 0 nil]) ((#("s" 0 1 (fontified t font-lock-face js2-object-property help-echo "Undeclared variable or function 'ss'" cursor-sensor-functions #1#)) . -168) (undo-tree-id9827 . -1) (undo-tree-id9828 . -1) (undo-tree-id9829 . -1) (undo-tree-id9830 . 1) (undo-tree-id9831 . -1) 169) nil (23394 6034 491239 0) 0 nil]) ((167 . 169)) nil (23394 6034 491242 0) 0 nil]) ((165 . 167)) nil (23394 6034 491243 0) 0 nil]) ((166 . 168) (#("  " 0 2 (fontified nil)) . 165) (165 . 167) (165 . 166) (#("  " 0 2 (fontified t)) . 165) (undo-tree-id9832 . -2) (undo-tree-id9833 . -2) (undo-tree-id9834 . -2) (undo-tree-id9835 . 2) (undo-tree-id9836 . -2) 167) nil (23394 6034 491254 0) 0 nil]) ((165 . 167) (t 23394 5759 491361 798000)) nil (23394 6034 491257 0) 0 nil]) ((1724 . 1725)) nil (23394 5759 466997 0) 0 nil]) ((#("2" 0 1 (fontified t)) . -1724) (undo-tree-id9786 . -1) (undo-tree-id9787 . -1) (undo-tree-id9788 . 1) (undo-tree-id9789 . 1) (undo-tree-id9790 . -1) (undo-tree-id9791 . -1) 1725 (t 23394 5746 887538 122000)) nil (23394 5759 467021 0) 0 nil]) ((1708 . 1709)) nil (23394 5746 314139 0) 0 nil]) ((#("0" 0 1 (fontified t)) . -1708) (undo-tree-id9783 . -1) (undo-tree-id9784 . -1) (undo-tree-id9785 . -1) 1709 (t 23394 5742 310346 879000)) nil (23394 5746 314158 0) 0 nil]) ((1681 . 1712)) nil (23394 5742 276003 0) 0 nil] [nil nil ((#("this.state.stringPositions[0].y" 0 4 (fontified t font-lock-face font-lock-builtin-face) 4 5 (fontified t) 5 10 (fontified t font-lock-face js2-object-property-access) 10 11 (fontified t) 11 26 (fontified t font-lock-face js2-object-property-access) 26 27 (fontified t face (rainbow-delimiters-depth-5-face)) 27 28 (fontified t) 28 29 (fontified t face (rainbow-delimiters-depth-5-face)) 29 30 (fontified t) 30 31 (fontified t font-lock-face js2-object-property-access)) . -1644) (undo-tree-id9673 . -31) (undo-tree-id9674 . -31) (undo-tree-id9675 . 31) (undo-tree-id9676 . -1) (undo-tree-id9677 . -1) (undo-tree-id9678 . -1) (undo-tree-id9679 . -1) (undo-tree-id9680 . -1) (undo-tree-id9681 . 30) (undo-tree-id9682 . -2) (undo-tree-id9683 . 29) (undo-tree-id9684 . -3) (undo-tree-id9685 . -3) (undo-tree-id9686 . -3) (undo-tree-id9687 . 28) (undo-tree-id9688 . -4) (undo-tree-id9689 . 27) (undo-tree-id9690 . -5) (undo-tree-id9691 . 26) (undo-tree-id9692 . -6) (undo-tree-id9693 . 25) (undo-tree-id9694 . -7) (undo-tree-id9695 . 24) (undo-tree-id9696 . -8) (undo-tree-id9697 . 23) (undo-tree-id9698 . -9) (undo-tree-id9699 . 22) (undo-tree-id9700 . -10) (undo-tree-id9701 . 21) (undo-tree-id9702 . -11) (undo-tree-id9703 . 20) (undo-tree-id9704 . -12) (undo-tree-id9705 . -12) (undo-tree-id9706 . -12) (undo-tree-id9707 . 19) (undo-tree-id9708 . -13) (undo-tree-id9709 . 18) (undo-tree-id9710 . -14) (undo-tree-id9711 . 17) (undo-tree-id9712 . -15) (undo-tree-id9713 . 16) (undo-tree-id9714 . -16) (undo-tree-id9715 . 15) (undo-tree-id9716 . -17) (undo-tree-id9717 . 14) (undo-tree-id9718 . -18) (undo-tree-id9719 . 13) (undo-tree-id9720 . -19) (undo-tree-id9721 . 12) (undo-tree-id9722 . -20) (undo-tree-id9723 . -20) (undo-tree-id9724 . -20) (undo-tree-id9725 . 11) (undo-tree-id9726 . -21) (undo-tree-id9727 . 10) (undo-tree-id9728 . -22) (undo-tree-id9729 . 9) (undo-tree-id9730 . -23) (undo-tree-id9731 . 8) (undo-tree-id9732 . -24) (undo-tree-id9733 . -24) (undo-tree-id9734 . 7) (undo-tree-id9735 . -25) (undo-tree-id9736 . 6) (undo-tree-id9737 . -26) (undo-tree-id9738 . 3) (undo-tree-id9739 . 5) (undo-tree-id9740 . -27) (undo-tree-id9741 . 3) (undo-tree-id9742 . 4) (undo-tree-id9743 . -28) (undo-tree-id9744 . 3) (undo-tree-id9745 . -29) (undo-tree-id9746 . 2) (undo-tree-id9747 . -30) (undo-tree-id9748 . 1) (undo-tree-id9749 . -31) (undo-tree-id9750 . 1) (undo-tree-id9751 . -30) (undo-tree-id9752 . 4) (undo-tree-id9753 . 1) (undo-tree-id9754 . -27) (undo-tree-id9755 . 20) (undo-tree-id9756 . 4) (undo-tree-id9757 . -11) (undo-tree-id9758 . 26) (undo-tree-id9759 . 20) (undo-tree-id9760 . -5) (undo-tree-id9761 . 31) (undo-tree-id9762 . 26) (undo-tree-id9763 . 31) (undo-tree-id9764 . 31) (undo-tree-id9765 . -31) (undo-tree-id9766 . 27) (undo-tree-id9767 . 31) (undo-tree-id9768 . -4) (undo-tree-id9769 . 21) (undo-tree-id9770 . 27) (undo-tree-id9771 . -10) (undo-tree-id9772 . 5) (undo-tree-id9773 . 21) (undo-tree-id9774 . -26) (undo-tree-id9775 . 3) (undo-tree-id9776 . 5) (undo-tree-id9777 . -28) (undo-tree-id9778 . 3) (undo-tree-id9779 . -30) (undo-tree-id9780 . -31) (undo-tree-id9781 . -31) (undo-tree-id9782 . -31) 1675) ((1644 . 1675)) (23394 5740 114377 0) 0 nil] [nil nil ((#("y1={" 0 2 (fontified t font-lock-face rjsx-attr) 2 3 (fontified t) 3 4 (fontified t help-echo "empty `{}' expression" cursor-sensor-functions #1# face (rainbow-delimiters-depth-4-face))) . -1677) (undo-tree-id9476 . -4) (undo-tree-id9477 . -4) (undo-tree-id9478 . -4) (undo-tree-id9479 . -4) (undo-tree-id9480 . -4) (undo-tree-id9481 . -4) (undo-tree-id9482 . -4) (undo-tree-id9483 . -4) (undo-tree-id9484 . -4) (undo-tree-id9485 . -4) (undo-tree-id9486 . -4) (undo-tree-id9487 . -4) (undo-tree-id9488 . 1) (undo-tree-id9489 . -3) (undo-tree-id9490 . 2) (undo-tree-id9491 . 1) (undo-tree-id9492 . -2) (undo-tree-id9493 . 3) (undo-tree-id9494 . 2) (undo-tree-id9495 . -1) (undo-tree-id9496 . 4) (undo-tree-id9497 . 3) (undo-tree-id9498 . 4) (undo-tree-id9499 . -4) (undo-tree-id9500 . -4) (undo-tree-id9501 . 4) (undo-tree-id9502 . 4) (undo-tree-id9503 . -4) (undo-tree-id9504 . -4) (undo-tree-id9505 . -3) (undo-tree-id9506 . -4) 1681) ((1677 . 1681)) (23394 5730 436291 0) 0 nil]) ((#("string." 0 6 (fontified t help-echo "missing `}' after expression" cursor-sensor-functions #1#) 6 7 (fontified t help-echo "missing name after . operator" cursor-sensor-functions #1#)) . -1681) (undo-tree-id9507 . -7) (undo-tree-id9508 . -7) (undo-tree-id9509 . 7) (undo-tree-id9510 . 7) (undo-tree-id9511 . 7) (undo-tree-id9512 . 7) (undo-tree-id9513 . 2) (undo-tree-id9514 . -5) (undo-tree-id9515 . -5) (undo-tree-id9516 . 2) (undo-tree-id9517 . 2) (undo-tree-id9518 . -5) (undo-tree-id9519 . 3) (undo-tree-id9520 . 2) (undo-tree-id9521 . -4) (undo-tree-id9522 . 4) (undo-tree-id9523 . 3) (undo-tree-id9524 . -3) (undo-tree-id9525 . 5) (undo-tree-id9526 . 4) (undo-tree-id9527 . -2) (undo-tree-id9528 . 6) (undo-tree-id9529 . 5) (undo-tree-id9530 . -1) (undo-tree-id9531 . 7) (undo-tree-id9532 . 6) (undo-tree-id9533 . 7) (undo-tree-id9534 . -7) (undo-tree-id9535 . 7) (undo-tree-id9536 . 7) (undo-tree-id9537 . -7) (undo-tree-id9538 . -6) (undo-tree-id9539 . -6) (undo-tree-id9540 . -7) (undo-tree-id9541 . -7) 1688) nil (23394 5740 114918 0) 0 nil]) ((#("y" 0 1 (fontified t font-lock-face js2-object-property-access)) . -1688) (undo-tree-id9542 . -1) (undo-tree-id9543 . -1) (undo-tree-id9544 . 1) (undo-tree-id9545 . 1) (undo-tree-id9546 . -1) (undo-tree-id9547 . -1) 1689) nil (23394 5730 436351 0) 0 nil]) ((1673 . 1675)) nil (23394 5730 436353 0) 0 nil]) ((#("]" 0 1 (fontified nil)) . -1672) (1672 . 1673) (#("]" 0 1 (fontified nil)) . -1672) (1671 . 1673) (1670 . 1672) (#("[" 0 1 (fontified nil font-lock-face js2-object-property-access)) . -1670) (1664 . 1671)) nil (23394 5730 436358 0) 0 nil]) ((#("t" 0 1 (fontified t font-lock-face js2-object-property-access)) . -1664) (undo-tree-id9548 . -1) (undo-tree-id9549 . -1) (undo-tree-id9550 . 1) (undo-tree-id9551 . -1) 1665) nil (23394 5730 436364 0) 0 nil]) ((1656 . 1665)) nil (23394 5730 436366 0) 0 nil]) ((#("p" 0 1 (fontified t font-lock-face js2-object-property-access)) . -1656) (undo-tree-id9552 . -1) (undo-tree-id9553 . -1) (undo-tree-id9554 . -1) (undo-tree-id9555 . 1) (undo-tree-id9556 . -1) 1657) nil (23394 5730 436378 0) 0 nil]) ((1650 . 1657)) nil (23394 5730 436380 0) 0 nil]) ((1647 . 1650)) nil (23394 5730 436382 0) 0 nil]) ((#("s" 0 1 (fontified t font-lock-face font-lock-builtin-face)) . -1647) (undo-tree-id9557 . -1) (undo-tree-id9558 . -1) (undo-tree-id9559 . 1) (undo-tree-id9560 . -1) 1648) nil (23394 5730 436393 0) 0 nil]) ((1645 . 1648)) nil (23394 5730 436396 0) 0 nil]) ((#("j" 0 1 (fontified t help-echo "Undeclared variable or function 'tj'" cursor-sensor-functions #1#)) . -1645) (undo-tree-id9561 . -1) (undo-tree-id9562 . -1) (undo-tree-id9563 . 1) (undo-tree-id9564 . -1) (undo-tree-id9565 . -1) (undo-tree-id9566 . -1) (undo-tree-id9567 . -1) (#("o" 0 1 (fontified t help-echo "Undeclared variable or function 'tjo'" cursor-sensor-functions #1#)) . -1646) (undo-tree-id9568 . -1) (undo-tree-id9569 . -1) (undo-tree-id9570 . -1) (undo-tree-id9571 . 1) (undo-tree-id9572 . -1) 1647) nil (23394 5730 436411 0) 0 nil]) ((1644 . 1647) (1643 . 1645) (#("{" 0 1 (fontified nil help-echo "missing value after prop `y2'" cursor-sensor-functions #1#)) . -1643) (1643 . 1644)) nil (23394 5730 436414 0) 0 nil]) ((#("{" 0 1 (fontified nil help-echo #5="empty `{}' expression" cursor-sensor-functions #1# face (rainbow-delimiters-depth-4-face))) . -1643) (undo-tree-id9573 . -1) (undo-tree-id9574 . -1) (undo-tree-id9575 . -1) (undo-tree-id9576 . -1) (undo-tree-id9577 . 1) (undo-tree-id9578 . -1) (#("}" 0 1 (fontified t help-echo #5# cursor-sensor-functions #1# face (rainbow-delimiters-depth-4-face))) . 1644) (undo-tree-id9579 . -1) (undo-tree-id9580 . 1)) nil (23394 5730 436428 0) 0 nil]) ((1643 . 1645) (#("{" 0 1 (fontified nil help-echo "missing value after prop `y2'" cursor-sensor-functions #1#)) . -1643) (1643 . 1644)) nil (23394 5730 436431 0) 0 nil]) ((#("{" 0 1 (fontified nil help-echo #6="empty `{}' expression" cursor-sensor-functions #1# face (rainbow-delimiters-depth-4-face))) . -1643) (undo-tree-id9581 . -1) (undo-tree-id9582 . -1) (undo-tree-id9583 . 1) (undo-tree-id9584 . 1) (undo-tree-id9585 . -1) (undo-tree-id9586 . -1) (undo-tree-id9587 . -1) (undo-tree-id9588 . -1) (undo-tree-id9589 . -1) (undo-tree-id9590 . -1) (undo-tree-id9591 . -1) (undo-tree-id9592 . -1) (undo-tree-id9593 . -1) (undo-tree-id9594 . -1) (undo-tree-id9595 . -1) (undo-tree-id9596 . -1) (undo-tree-id9597 . -1) (undo-tree-id9598 . -1) (undo-tree-id9599 . -1) (undo-tree-id9600 . -1) (undo-tree-id9601 . -1) (undo-tree-id9602 . -1) (#("}" 0 1 (fontified t help-echo #6# cursor-sensor-functions #1# face (rainbow-delimiters-depth-4-face))) . 1644) (undo-tree-id9603 . 1) (undo-tree-id9604 . 1) (undo-tree-id9605 . 1) (undo-tree-id9606 . 1) (undo-tree-id9607 . 1) (undo-tree-id9608 . 1) (undo-tree-id9609 . 1) (undo-tree-id9610 . 1) (undo-tree-id9611 . 1) (undo-tree-id9612 . 1) (undo-tree-id9613 . 1) (undo-tree-id9614 . 1) (undo-tree-id9615 . -1) (undo-tree-id9616 . 1) (undo-tree-id9617 . 1) (undo-tree-id9618 . 1) (undo-tree-id9619 . 1) (undo-tree-id9620 . 1) (undo-tree-id9621 . 1) (undo-tree-id9622 . 1) (undo-tree-id9623 . 1) (undo-tree-id9624 . 1) (undo-tree-id9625 . 1) (undo-tree-id9626 . 1) (undo-tree-id9627 . 1) (undo-tree-id9628 . 1) (undo-tree-id9629 . 1) (undo-tree-id9630 . 1) (undo-tree-id9631 . 1) (undo-tree-id9632 . 1) (undo-tree-id9633 . -1) (undo-tree-id9634 . 1) (undo-tree-id9635 . 1)) nil (23394 5730 436501 0) 0 nil]) ((#("." 0 1 (fontified t help-echo "syntax error" cursor-sensor-functions #1#)) . -1644) (undo-tree-id9636 . -1) (undo-tree-id9637 . -1) (undo-tree-id9638 . 1) (undo-tree-id9639 . 1) (undo-tree-id9640 . 1) (undo-tree-id9641 . 1) (undo-tree-id9642 . 1) (undo-tree-id9643 . 1) (undo-tree-id9644 . 1) (undo-tree-id9645 . 1) (undo-tree-id9646 . 1) (undo-tree-id9647 . 1) (undo-tree-id9648 . 1) (undo-tree-id9649 . 1) (undo-tree-id9650 . -1) (undo-tree-id9651 . -1) (undo-tree-id9652 . -1) (undo-tree-id9653 . -1) (undo-tree-id9654 . 1) (undo-tree-id9655 . 1) (undo-tree-id9656 . 1) (undo-tree-id9657 . 1) (undo-tree-id9658 . -1) (undo-tree-id9659 . -1) (undo-tree-id9660 . -1) (#("y" 0 1 (fontified t help-echo "syntax error" cursor-sensor-functions #1#)) . -1645) (undo-tree-id9661 . -1) (undo-tree-id9662 . -1) (undo-tree-id9663 . -1) (undo-tree-id9664 . 1) (undo-tree-id9665 . 1) (undo-tree-id9666 . -1) (undo-tree-id9667 . 1) (undo-tree-id9668 . 1) (undo-tree-id9669 . 1) (undo-tree-id9670 . 1) (undo-tree-id9671 . -1) (undo-tree-id9672 . -1) 1646 (t 23394 5696 127650 812000)) nil (23394 5730 436553 0) 0 nil]) ((1672 . 1673)) nil (23394 5696 88664 0) 0 nil]) ((#("string." 0 5 (fontified t help-echo #7="missing `}' after expression" cursor-sensor-functions #1#) 5 6 (fontified t help-echo #7# cursor-sensor-functions #1#) 6 7 (fontified t help-echo "missing name after . operator" cursor-sensor-functions #1#)) . -1672) (undo-tree-id9409 . -7) (undo-tree-id9410 . -7) (undo-tree-id9411 . -7) (undo-tree-id9412 . -7) (undo-tree-id9413 . -7) (undo-tree-id9414 . -7) (undo-tree-id9415 . -7) (undo-tree-id9416 . -7) (undo-tree-id9417 . -7) (undo-tree-id9418 . -7) (undo-tree-id9419 . 1) (undo-tree-id9420 . -6) (undo-tree-id9421 . 2) (undo-tree-id9422 . 1) (undo-tree-id9423 . -5) (undo-tree-id9424 . 2) (undo-tree-id9425 . -7) (undo-tree-id9426 . -6) (undo-tree-id9427 . -6) (undo-tree-id9428 . -7) (undo-tree-id9429 . -7) 1679) nil (23394 5696 88706 0) 0 nil]) ((#("x1" 0 1 (fontified t font-lock-face js2-object-property-access) 1 2 (fontified t font-lock-face js2-object-property-access)) . -1679) (undo-tree-id9430 . -2) (undo-tree-id9431 . -2) (undo-tree-id9432 . 1) (undo-tree-id9433 . -1) (undo-tree-id9434 . 1) (undo-tree-id9435 . 1) (undo-tree-id9436 . -1) (undo-tree-id9437 . 1) (undo-tree-id9438 . 1) (undo-tree-id9439 . -1) (undo-tree-id9440 . 1) (undo-tree-id9441 . 1) (undo-tree-id9442 . -1) (undo-tree-id9443 . 1) (undo-tree-id9444 . -2) (undo-tree-id9445 . -2) (undo-tree-id9446 . 1) (undo-tree-id9447 . -1) (undo-tree-id9448 . 2) (undo-tree-id9449 . 1) (undo-tree-id9450 . 2) (undo-tree-id9451 . -2) 1681) nil (23394 5696 88750 0) 0 nil]) ((1687 . 1688) (1686 . 1688) (#("{" 0 1 (fontified nil help-echo "missing value after prop `x2'" cursor-sensor-functions #1#)) . -1686) (1686 . 1687)) nil (23394 5696 88755 0) 0 nil]) ((#("1" 0 1 (fontified t help-echo "invalid JSX identifier" cursor-sensor-functions #1#)) . -1686) (undo-tree-id9452 . -1) (undo-tree-id9453 . -1) (undo-tree-id9454 . -1) (undo-tree-id9455 . -1) (undo-tree-id9456 . 1) (undo-tree-id9457 . -1) (undo-tree-id9458 . 1) (undo-tree-id9459 . 1) (undo-tree-id9460 . -1) 1687) nil (23394 5696 88771 0) 0 nil]) ((1686 . 1687)) nil (23394 5696 88774 0) 0 nil]) ((#("{" 0 1 (fontified t help-echo "missing `}' after expression" cursor-sensor-functions #1# face (rainbow-delimiters-depth-4-face))) . -1686) (undo-tree-id9461 . -1) (undo-tree-id9462 . -1) (undo-tree-id9463 . -1) (undo-tree-id9464 . -1) (undo-tree-id9465 . -1) (#("." 0 1 (fontified t help-echo "syntax error" cursor-sensor-functions #1#)) . -1687) (undo-tree-id9466 . -1) (undo-tree-id9467 . -1) (undo-tree-id9468 . -1) (undo-tree-id9469 . -1) (#("}" 0 1 (rear-nonsticky t fontified t help-echo "syntax error" cursor-sensor-functions #1# face (rainbow-delimiters-depth-4-face))) . -1688) (undo-tree-id9470 . -1) (undo-tree-id9471 . -1) (undo-tree-id9472 . -1) (undo-tree-id9473 . 1) (undo-tree-id9474 . -1) (undo-tree-id9475 . -1) 1689) nil (23394 5696 88793 0) 0 nil] [nil nil ((#("x2={.}" 0 2 (fontified t font-lock-face rjsx-attr) 2 3 (fontified t) 3 4 (fontified t help-echo #8="syntax error" cursor-sensor-functions #1# face (rainbow-delimiters-depth-4-face)) 4 5 (fontified t help-echo #8# cursor-sensor-functions #1#) 5 6 (rear-nonsticky t fontified t help-echo #8# cursor-sensor-functions #1# face (rainbow-delimiters-depth-4-face))) . -1683) (undo-tree-id9095 . -6) (undo-tree-id9096 . -5) (undo-tree-id9097 . -6) (undo-tree-id9098 . 2) (undo-tree-id9099 . -4) (undo-tree-id9100 . 2) (undo-tree-id9101 . 2) (undo-tree-id9102 . -4) (undo-tree-id9103 . 2) (undo-tree-id9104 . 2) (undo-tree-id9105 . -4) (undo-tree-id9106 . 2) (undo-tree-id9107 . 2) (undo-tree-id9108 . -4) (undo-tree-id9109 . 2) (undo-tree-id9110 . 2) (undo-tree-id9111 . -4) (undo-tree-id9112 . 2) (undo-tree-id9113 . 2) (undo-tree-id9114 . -4) (undo-tree-id9115 . 2) (undo-tree-id9116 . 2) (undo-tree-id9117 . -4) (undo-tree-id9118 . 2) (undo-tree-id9119 . 2) (undo-tree-id9120 . -4) (undo-tree-id9121 . 2) (undo-tree-id9122 . 2) (undo-tree-id9123 . -4) (undo-tree-id9124 . 2) (undo-tree-id9125 . 2) (undo-tree-id9126 . -4) (undo-tree-id9127 . 2) (undo-tree-id9128 . -6) (undo-tree-id9129 . -6) (undo-tree-id9130 . -6) (undo-tree-id9131 . 1) (undo-tree-id9132 . -5) (undo-tree-id9133 . 1) (undo-tree-id9134 . 1) (undo-tree-id9135 . -5) (undo-tree-id9136 . 1) (undo-tree-id9137 . 1) (undo-tree-id9138 . -5) (undo-tree-id9139 . 2) (undo-tree-id9140 . 1) (undo-tree-id9141 . -4) (undo-tree-id9142 . 2) (undo-tree-id9143 . 2) (undo-tree-id9144 . -4) (undo-tree-id9145 . 2) (undo-tree-id9146 . 2) (undo-tree-id9147 . -4) (undo-tree-id9148 . 2) (undo-tree-id9149 . 2) (undo-tree-id9150 . -4) (undo-tree-id9151 . 2) (undo-tree-id9152 . 2) (undo-tree-id9153 . -4) (undo-tree-id9154 . 2) (undo-tree-id9155 . 2) (undo-tree-id9156 . -4) (undo-tree-id9157 . 2) (undo-tree-id9158 . 2) (undo-tree-id9159 . -4) (undo-tree-id9160 . 3) (undo-tree-id9161 . 2) (undo-tree-id9162 . -3) (undo-tree-id9163 . 4) (undo-tree-id9164 . 3) (undo-tree-id9165 . -2) (undo-tree-id9166 . 5) (undo-tree-id9167 . 4) (undo-tree-id9168 . -1) (undo-tree-id9169 . 6) (undo-tree-id9170 . 5) (undo-tree-id9171 . 6) (undo-tree-id9172 . -6) (undo-tree-id9173 . 1) (undo-tree-id9174 . -5) (undo-tree-id9175 . 1) (undo-tree-id9176 . 1) (undo-tree-id9177 . -5) (undo-tree-id9178 . 1) (undo-tree-id9179 . 1) (undo-tree-id9180 . -5) (undo-tree-id9181 . 2) (undo-tree-id9182 . 1) (undo-tree-id9183 . -4) (undo-tree-id9184 . 2) (undo-tree-id9185 . 2) (undo-tree-id9186 . -4) (undo-tree-id9187 . 2) (undo-tree-id9188 . -6) (undo-tree-id9189 . -6) (undo-tree-id9190 . 1) (undo-tree-id9191 . -5) (undo-tree-id9192 . -3) (undo-tree-id9193 . -6) (undo-tree-id9194 . 1) (undo-tree-id9195 . 1) (undo-tree-id9196 . -5) (undo-tree-id9197 . 1) (undo-tree-id9198 . 1) (undo-tree-id9199 . -6) (undo-tree-id9200 . 3) (undo-tree-id9201 . -4) (undo-tree-id9202 . -6) 1689) ((1683 . 1689)) (23394 5687 259027 0) 0 nil]) ((#("x2" 0 2 (fontified t help-echo "syntax error" cursor-sensor-functions #1#)) . -1688) (undo-tree-id9203 . -2) (undo-tree-id9204 . -2) (undo-tree-id9205 . -2) (undo-tree-id9206 . 1) (undo-tree-id9207 . -1) (undo-tree-id9208 . 2) (undo-tree-id9209 . 1) (undo-tree-id9210 . 2) (undo-tree-id9211 . -2) (undo-tree-id9212 . 1) (undo-tree-id9213 . -1) (undo-tree-id9214 . 2) (undo-tree-id9215 . 1) (undo-tree-id9216 . 2) (undo-tree-id9217 . -2) 1690) nil (23394 5687 259782 0) 0 nil]) ((#("string" 0 6 (help-echo "Undeclared variable or function 'string'" cursor-sensor-functions #1# fontified t)) . -1687) (undo-tree-id9218 . -6) (undo-tree-id9219 . -6) (undo-tree-id9220 . 6) (undo-tree-id9221 . 6) (undo-tree-id9222 . 4) (undo-tree-id9223 . -2) (undo-tree-id9224 . 4) (undo-tree-id9225 . 4) (undo-tree-id9226 . -2) (undo-tree-id9227 . 4) (undo-tree-id9228 . 4) (undo-tree-id9229 . -2) (undo-tree-id9230 . 4) (undo-tree-id9231 . 4) (undo-tree-id9232 . -2) (undo-tree-id9233 . 4) (undo-tree-id9234 . 4) (undo-tree-id9235 . -2) (undo-tree-id9236 . 4) (undo-tree-id9237 . 4) (undo-tree-id9238 . -2) (undo-tree-id9239 . 4) (undo-tree-id9240 . 4) (undo-tree-id9241 . -2) (undo-tree-id9242 . 1) (undo-tree-id9243 . 4) (undo-tree-id9244 . -5) (undo-tree-id9245 . 1) (undo-tree-id9246 . 1) (undo-tree-id9247 . -5) (undo-tree-id9248 . 1) (undo-tree-id9249 . -6) (undo-tree-id9250 . -6) (undo-tree-id9251 . 1) (undo-tree-id9252 . -5) (undo-tree-id9253 . 2) (undo-tree-id9254 . 1) (undo-tree-id9255 . -4) (undo-tree-id9256 . 3) (undo-tree-id9257 . 2) (undo-tree-id9258 . -3) (undo-tree-id9259 . 4) (undo-tree-id9260 . 3) (undo-tree-id9261 . -2) (undo-tree-id9262 . 5) (undo-tree-id9263 . 4) (undo-tree-id9264 . -1) (undo-tree-id9265 . 6) (undo-tree-id9266 . 5) (undo-tree-id9267 . 6) (undo-tree-id9268 . -6) 1693) nil (23394 5687 259119 0) 0 nil]) ((#("string" 0 5 (fontified t help-echo #9="Undeclared variable or function 'string'" cursor-sensor-functions #1#) 5 6 (fontified t help-echo #9# cursor-sensor-functions #1#)) . -1644) (undo-tree-id9269 . -6) (undo-tree-id9270 . -6) (undo-tree-id9271 . -6) (undo-tree-id9272 . 6) (undo-tree-id9273 . 5) (undo-tree-id9274 . 6) (undo-tree-id9275 . -1) (undo-tree-id9276 . 4) (undo-tree-id9277 . 5) (undo-tree-id9278 . -2) (undo-tree-id9279 . 5) (undo-tree-id9280 . 4) (undo-tree-id9281 . -1) (undo-tree-id9282 . 6) (undo-tree-id9283 . 5) (undo-tree-id9284 . 6) (undo-tree-id9285 . 6) (undo-tree-id9286 . 6) (undo-tree-id9287 . -6) (undo-tree-id9288 . -6) 1650) nil (23394 5687 259160 0) 0 nil]) ((#(" " 0 1 (fontified t)) . -1640) (undo-tree-id9289 . 1) (undo-tree-id9290 . 1) (undo-tree-id9291 . 1) (undo-tree-id9292 . 1) (undo-tree-id9293 . 1) (undo-tree-id9294 . 1) (undo-tree-id9295 . 1) (undo-tree-id9296 . 1) (undo-tree-id9297 . 1) (undo-tree-id9298 . 1) (undo-tree-id9299 . 1) (undo-tree-id9300 . 1) (undo-tree-id9301 . 1) (undo-tree-id9302 . 1) (undo-tree-id9303 . 1) (undo-tree-id9304 . 1) (undo-tree-id9305 . 1) (undo-tree-id9306 . 1) (undo-tree-id9307 . 1) (undo-tree-id9308 . 1) (undo-tree-id9309 . 1) (undo-tree-id9310 . 1) (undo-tree-id9311 . 1) (undo-tree-id9312 . 1) (undo-tree-id9313 . 1)) nil (23394 5687 259194 0) 0 nil]) ((#("key={`" 0 3 (fontified t font-lock-face rjsx-attr help-echo #10="syntax error" cursor-sensor-functions #1#) 3 4 (fontified t help-echo #10# cursor-sensor-functions #1#) 4 5 (fontified t help-echo "missing `}' after expression" cursor-sensor-functions #1# face (rainbow-delimiters-depth-4-face)) 5 6 (fontified t font-lock-face font-lock-string-face help-echo "unterminated string literal" cursor-sensor-functions #1#)) . -1640) (undo-tree-id9314 . -6) (undo-tree-id9315 . -6) (undo-tree-id9316 . -6) (undo-tree-id9317 . -6) (undo-tree-id9318 . -6) (undo-tree-id9319 . -6) (undo-tree-id9320 . -6) (undo-tree-id9321 . -6) (undo-tree-id9322 . -6) (undo-tree-id9323 . -6) (undo-tree-id9324 . -6) (undo-tree-id9325 . -6) (undo-tree-id9326 . -6) (undo-tree-id9327 . -6) (undo-tree-id9328 . -4) (undo-tree-id9329 . -5) (undo-tree-id9330 . -6) (undo-tree-id9331 . -6) 1646) nil (23394 5687 259235 0) 0 nil]) ((#("str${" 0 4 (fontified t font-lock-face font-lock-string-face) 4 5 (fontified t font-lock-face font-lock-string-face)) . -1646) (undo-tree-id9332 . -5) (undo-tree-id9333 . -5) (undo-tree-id9334 . -5) (undo-tree-id9335 . -5) (undo-tree-id9336 . -5) (undo-tree-id9337 . -5) (undo-tree-id9338 . -5) (undo-tree-id9339 . -5) (undo-tree-id9340 . -5) (undo-tree-id9341 . -5) (undo-tree-id9342 . -5) (undo-tree-id9343 . -5) (undo-tree-id9344 . -5) (undo-tree-id9345 . -5) 1651) nil (23394 5687 259255 0) 0 nil]) ((#("number}`" 0 6 (fontified t help-echo #11="missing `}' after expression" cursor-sensor-functions #1#) 6 7 (fontified t font-lock-face font-lock-string-face help-echo #11# cursor-sensor-functions #1#) 7 8 (fontified t font-lock-face font-lock-string-face help-echo #11# cursor-sensor-functions #1#)) . -1651) (undo-tree-id9346 . -8) (undo-tree-id9347 . -5) (undo-tree-id9348 . -8) (undo-tree-id9349 . 6) (undo-tree-id9350 . -2) (undo-tree-id9351 . 6) (undo-tree-id9352 . 6) (undo-tree-id9353 . -2) (undo-tree-id9354 . 6) (undo-tree-id9355 . 3) (undo-tree-id9356 . -5) (undo-tree-id9357 . -5) (undo-tree-id9358 . 3) (undo-tree-id9359 . 3) (undo-tree-id9360 . -5) (undo-tree-id9361 . 2) (undo-tree-id9362 . 3) (undo-tree-id9363 . -6) (undo-tree-id9364 . 1) (undo-tree-id9365 . 2) (undo-tree-id9366 . -7) (undo-tree-id9367 . 1) (undo-tree-id9368 . -8) (undo-tree-id9369 . -8) (undo-tree-id9370 . -6) (undo-tree-id9371 . -8) 1659) nil (23394 5687 259290 0) 0 nil]) ((#("}" 0 1 (fontified t face (rainbow-delimiters-depth-4-face))) . -1659) (undo-tree-id9372 . -1) (undo-tree-id9373 . -1) (undo-tree-id9374 . 1) (undo-tree-id9375 . 1) (undo-tree-id9376 . 1) (undo-tree-id9377 . -1) (undo-tree-id9378 . -1) 1660) nil (23394 5687 259301 0) 0 nil]) ((#("                          " 0 26 (fontified t)) . -1695) 1742) nil (23394 5687 259304 0) 0 nil]) ((1626 . 1634) (#("      " 0 6 (fontified t font-lock-face rjsx-text syntax-table #18=#^[nil #^[#13=(0) nil syntax-table #16=
#^^[3 0 #12=(1) #12# #12# #12# #12# #12# #12# #12# #12# #13# #13# #12# #13# #13# #12# #12# #12# #12# #12# #12# #12# #12# #12# #12# #12# #12# #12# #12# #12# #12# #12# #12# #13# #12# (7) #12# #14=(2) #14# #15=(3) #12# (4 . 41) (5 . 40) #15# #15# #12# #15# #12# #15# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #12# #12# #15# #15# #15# #12# #12# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# (4 . 93) (9) (5 . 91) #12# #15# #12# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# (4 . 125) #15# (5 . 123) #12# #12#] #^^[1 0 #^^[2 0 #16# 










#^^[3 8192 #13# #13# #13# #13# #13# #13# #13# #13# #13# #13# #13# #13# #12# #12# #12# #12# #15# #15# #15# #15# #15# #15# #15# #12# #12# #12# #12# #12# #12# #12# #12# #12# #15# #15# #15# #15# #15# #15# #15# #14# #12# #12# #12# #12# #12# #12# #12# #12# #12# #12# #12# #12# #12# #12# #12# #12# #12# #12# #12# #12# #12# #12# #12# #12# #12# #12# #12# #12# #12# (4 . 8262) (5 . 8261) #12# #12# #12# #12# #12# #12# #12# #12# #12# #12# #12# #12# #12# #12# #12# #12# #12# #12# #12# #12# #12# #12# #12# #12# #12# #12# #12# #12# #12# #12# #12# #12# #12# #12# #12# #12# #12# #12# #12# #12# #12# #14# #14# #14# #14# #15# #14# #14# #14# #14# #14# #14# #14# #14# (4 . 8318) (5 . 8317) #15#] 



#^^[3 8960 #12# #12# #12# #12# #12# #12# #12# #12# #12# #12# #12# #12# #12# #12# #12# #12# #12# #12# #12# #12# #12# #12# #12# #12# #12# #12# #12# #12# #12# #12# #12# #12# #12# #12# #12# #12# #12# #12# #12# #12# #12# (4 . 9002) (5 . 9001) #12# #12# #12# #12# #12# #12# #12# #12# #12# #12# #12# #12# #12# #12# #12# #12# #12# #12# #12# #12# #12# #12# #12# #12# #12# #12# #12# #12# #12# #12# #12# #12# #12# #12# #12# #12# #12# #12# #12# #12# #12# #12# #12# #12# #12# #12# #12# #12# #12# #12# #12# #12# #12# #12# #12# #12# #12# #12# #12# #12# #12# #12# #12# #12# #12# #12# #12# #12# #12# #12# #12# #12# #12# #12# #12# #12# #12# #12# #12# #12# #12# #12# #12# #12# #12#] 
#^^[3 9088 #12# #12# #12# #12# #12# #12# #12# #12# #12# #12# #12# #12# #12# #12# #12# #12# #12# #12# #12# #12# #12# #12# #12# #12# #12# #12# #12# #12# #12# #12# #12# #12# #12# #12# #12# #12# #12# #12# #12# #12# #12# #12# #12# #12# #12# #12# #12# #12# #12# #12# #12# #12# (4 . 9141) (5 . 9140) #12# #12# #12# #12# #12# #12# #12# #12# #12# #12# #12# #12# #12# #12# #12# #12# #12# #12# #12# #12# #12# #12# #12# #12# #12# #12# #12# #12# #12# #12# #12# #12# #12# #12# #12# #12# #12# #12# #12# #12# #12# #12# #12# #12# #12# #12# #12# #12# #12# #12# #12# #12# #12# #12# #12# #12# #12# #12# #12# #12# #12# #12# #12# #12# #12# #12# #12# #12# #12# #12# #12# #12# #12# #12#] 
#^^[3 9216 #15# #15# #15# #15# #15# #15# #15# #15# #15# #15# #15# #15# #15# #15# #15# #15# #15# #15# #15# #15# #15# #15# #15# #15# #15# #15# #15# #15# #15# #15# #15# #15# #15# #15# #15# #15# #15# #15# #15# #15# #15# #15# #15# #15# #15# #15# #15# #15# #15# #15# #15# #15# #15# #15# #15# #15# #15# #15# #15# #15# #15# #15# #15# #15# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #15# #15# #15# #15# #15# #15# #15# #15# #15# #15# #15# #15# #15# #15# #15# #14# #14# #14# #14# #14# #15# #15# #15# #15# #15# #15# #15# #15# #15# #15# #15# #15#] 






#^^[3 10624 #14# #14# #14# (4 . 10628) (5 . 10627) (4 . 10630) (5 . 10629) (4 . 10632) (5 . 10631) (4 . 10634) (5 . 10633) (4 . 10636) (5 . 10635) (4 . 10638) (5 . 10637) (4 . 10640) (5 . 10639) (4 . 10642) (5 . 10641) (4 . 10644) (5 . 10643) (4 . 10646) (5 . 10645) (4 . 10648) (5 . 10647) #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# (4 . 10749) (5 . 10748) #14# #14#] #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14#] #^^[2 12288 
#^^[3 12288 #15# #15# #15# #15# #14# #14# #14# #14# (4 . 12297) (5 . 12296) (4 . 12299) (5 . 12298) (4 . 12301) (5 . 12300) (4 . 12303) (5 . 12302) (4 . 12305) (5 . 12304) #15# #15# (4 . 12309) (5 . 12308) (4 . 12311) (5 . 12310) (4 . 12313) (5 . 12312) (4 . 12315) (5 . 12314) #15# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14#] 




#^^[3 64768 #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# (4 . 64831) (5 . 64830) #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14#] #14# 
#^^[3 65024 #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# (4 . 65078) (5 . 65077) (4 . 65080) (5 . 65079) (4 . 65082) (5 . 65081) (4 . 65084) (5 . 65083) (4 . 65086) (5 . 65085) (4 . 65088) (5 . 65087) (4 . 65090) (5 . 65089) (4 . 65092) (5 . 65091) #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# (4 . 65114) (5 . 65113) (4 . 65116) (5 . 65115) (4 . 65118) (5 . 65117) #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14#] #14# 
#^^[3 65280 #14# #15# #14# #15# #15# #15# #15# #14# (4 . 65289) (5 . 65288) #15# #15# #15# #14# #15# #15# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #15# #15# #15# #15# #15# #15# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# (4 . 65341) #15# (5 . 65339) #15# #15# #15# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# (4 . 65373) #15# (5 . 65371) #15# (4 . 65376) (5 . 65375) #12# (4 . 65379) (5 . 65378) #12# #12# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14#] 



#^^[3 1114880 #15# #15# #15# #15# #15# #15# #15# #15# #15# #15# #15# #15# #15# #15# #15# #15# #15# #15# #15# #15# #15# #15# #15# #15# #15# #15# #15# #15# #15# #15# #15# #15# #15# #15# #15# #15# #15# #15# #15# #15# #15# #15# #15# #15# #15# #15# #15# #15# #15# #15# #15# #15# #15# #15# #15# #15# #15# #15# #15# #15# #15# #15# #15# #15# #15# #15# #15# #15# #15# #15# #15# #15# #15# #15# #15# #15# #15# #15# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14#] #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14#] #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14#] #14# #14# #^^[1 1310720 #^^[2 1310720 #15# 







#^^[3 2597504 #15# #15# #15# #15# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #15# #15# #15# #15# #15# #15# #15# #15# #15# #15# #15# #15# #15# #15# #15# #15# #15# #15# #15# #15# #15# #15# #15# #15# #15# #15# #15# #15# #15# #15# #15# #15# #15# #15# #15# #15# #15# #15# #15# #15# #15# #15# #15# #15# #15# #15# #15# #15# #15# #15# #15# #15# #15# #15# #15# #15# #15# #15# #15# #15# #15# #15# #15# #15# #15# #15# #15# #15# #15# #15# #15# #15# #15# #15# #15# #15# #15# #15# #15# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14#] #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14#] #14# #14# #14# #14# #14#] #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14# #14#] syntax-table #17=
#^^[3 0 nil nil nil nil nil nil nil nil nil nil #12# nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil] #^^[1 0 #^^[2 0 #17# nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil] nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil] nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil])) . 1626) (undo-tree-id9379 . -6) (undo-tree-id9380 . -6) (undo-tree-id9381 . -6) (undo-tree-id9382 . -6) (undo-tree-id9383 . -6) (undo-tree-id9384 . -6) (undo-tree-id9385 . -6) (undo-tree-id9386 . -6) (undo-tree-id9387 . -6) (undo-tree-id9388 . -6) (undo-tree-id9389 . -6) (undo-tree-id9390 . -6) (undo-tree-id9391 . -6) (undo-tree-id9392 . -6) (undo-tree-id9393 . -6) (undo-tree-id9394 . -6) (undo-tree-id9395 . -6) (undo-tree-id9396 . -6) (undo-tree-id9397 . -6) (undo-tree-id9398 . 6) (undo-tree-id9399 . -6) (undo-tree-id9400 . -6) (undo-tree-id9401 . -6) (undo-tree-id9402 . -6) (undo-tree-id9403 . -6) (undo-tree-id9404 . -6) (undo-tree-id9405 . -6) (undo-tree-id9406 . -6) (undo-tree-id9407 . -6) (undo-tree-id9408 . -6) 1677) nil (23394 5687 259349 0) 0 nil]) ((#("                          " 0 21 (fontified t) 21 26 (fontified t)) . -1755) 1826) nil (23394 5687 259353 0) 0 nil]) ((1632 . 1826)) nil (23394 5687 259355 0) 0 nil] [nil nil ((#("<line key={`str${number}`} y2={string.y} y1={string.y}
                                x1={string.x1} x2={string.x2}
                                strokeWidth=\"0.01\" stroke=\"#333\" fill=\"non\"/>" 0 1 (fontified t font-lock-face rjsx-tag-bracket-face) 1 4 (fontified t font-lock-face rjsx-tag) 4 5 (fontified t font-lock-face rjsx-tag) 5 6 (fontified t) 6 9 (fontified t font-lock-face rjsx-attr) 9 10 (fontified t) 10 11 (fontified t face (rainbow-delimiters-depth-8-face)) 11 12 (fontified t font-lock-face font-lock-string-face) 12 16 (fontified t font-lock-face font-lock-string-face) 16 17 (fontified t font-lock-face font-lock-string-face) 17 23 (fontified t) 23 24 (fontified t font-lock-face font-lock-string-face) 24 25 (fontified t font-lock-face font-lock-string-face) 25 26 (fontified t face (rainbow-delimiters-depth-8-face)) 26 27 (fontified t) 27 29 (fontified t font-lock-face rjsx-attr) 29 30 (fontified t) 30 31 (fontified t face (rainbow-delimiters-depth-8-face)) 31 36 (fontified t) 36 37 (fontified t) 37 38 (fontified t) 38 39 (fontified t font-lock-face js2-object-property-access) 39 40 (fontified t face (rainbow-delimiters-depth-8-face)) 40 41 (fontified t) 41 43 (fontified t font-lock-face rjsx-attr) 43 44 (fontified t) 44 45 (fontified t face (rainbow-delimiters-depth-8-face)) 45 51 (fontified t) 51 52 (fontified t) 52 53 (fontified t font-lock-face js2-object-property-access) 53 54 (rear-nonsticky t fontified t face (rainbow-delimiters-depth-8-face)) 54 55 (fontified t) 55 87 (fontified t) 87 88 (fontified t font-lock-face rjsx-attr) 88 89 (fontified t font-lock-face rjsx-attr) 89 90 (fontified t) 90 91 (fontified t face (rainbow-delimiters-depth-8-face)) 91 96 (fontified t) 96 97 (fontified t) 97 98 (fontified t) 98 99 (fontified t font-lock-face js2-object-property-access) 99 100 (fontified t font-lock-face js2-object-property-access) 100 101 (fontified t face (rainbow-delimiters-depth-8-face)) 101 102 (fontified t) 102 104 (fontified t font-lock-face rjsx-attr) 104 105 (fontified t) 105 106 (fontified t face (rainbow-delimiters-depth-8-face)) 106 112 (fontified t) 112 113 (fontified t) 113 115 (fontified t font-lock-face js2-object-property-access) 115 116 (rear-nonsticky t fontified t face (rainbow-delimiters-depth-8-face)) 116 117 (fontified t) 117 144 (fontified t) 144 149 (fontified t) 149 160 (fontified t font-lock-face rjsx-attr) 160 161 (fontified t) 161 165 (fontified t font-lock-face font-lock-string-face) 165 166 (fontified t font-lock-face font-lock-string-face) 166 167 (fontified t font-lock-face font-lock-string-face) 167 168 (fontified t) 168 174 (fontified t font-lock-face rjsx-attr) 174 175 (fontified t) 175 181 (fontified t font-lock-face font-lock-string-face) 181 182 (fontified t) 182 186 (fontified t font-lock-face rjsx-attr) 186 187 (fontified t) 187 192 (fontified t font-lock-face font-lock-string-face) 192 193 (rjsx-class self-closing-slash fontified t font-lock-face rjsx-tag-bracket-face) 193 194 (fontified t font-lock-face rjsx-tag-bracket-face)) . 1398) (undo-tree-id8921 . -194) (undo-tree-id8922 . -1) (undo-tree-id8923 . 185) (undo-tree-id8924 . 185) (undo-tree-id8925 . 185) (undo-tree-id8926 . 185) (undo-tree-id8927 . -177) (undo-tree-id8928 . -177) (undo-tree-id8929 . -194) (undo-tree-id8930 . -194) (undo-tree-id8931 . 71) (undo-tree-id8932 . -123) (undo-tree-id8933 . 133) (undo-tree-id8934 . 71) (undo-tree-id8935 . -61) (undo-tree-id8936 . 133) (undo-tree-id8937 . 194) (undo-tree-id8938 . 193) (undo-tree-id8939 . 194) (undo-tree-id8940 . -1) (undo-tree-id8941 . 194) (undo-tree-id8942 . 193) (undo-tree-id8943 . 115) (undo-tree-id8944 . 194) (undo-tree-id8945 . -79) (undo-tree-id8946 . 78) (undo-tree-id8947 . 115) (undo-tree-id8948 . -116) (undo-tree-id8949 . 16) (undo-tree-id8950 . 78) (undo-tree-id8951 . -178) (undo-tree-id8952 . 16) (undo-tree-id8953 . -194) (undo-tree-id8954 . -194) (undo-tree-id8955 . -194) (undo-tree-id8956 . 78) (undo-tree-id8957 . -116) (undo-tree-id8958 . 141) (undo-tree-id8959 . 78) (undo-tree-id8960 . -53) (undo-tree-id8961 . 141) (undo-tree-id8962 . 141) (undo-tree-id8963 . -53) (undo-tree-id8964 . 142) (undo-tree-id8965 . 141) (undo-tree-id8966 . -52) (undo-tree-id8967 . 149) (undo-tree-id8968 . 142) (undo-tree-id8969 . -45) (undo-tree-id8970 . 153) (undo-tree-id8971 . 149) (undo-tree-id8972 . -41) (undo-tree-id8973 . 156) (undo-tree-id8974 . 153) (undo-tree-id8975 . -38) (undo-tree-id8976 . 163) (undo-tree-id8977 . 156) (undo-tree-id8978 . -31) (undo-tree-id8979 . 167) (undo-tree-id8980 . 163) (undo-tree-id8981 . -27) (undo-tree-id8982 . 177) (undo-tree-id8983 . 167) (undo-tree-id8984 . -17) (undo-tree-id8985 . 182) (undo-tree-id8986 . 177) (undo-tree-id8987 . -12) (undo-tree-id8988 . 188) (undo-tree-id8989 . 182) (undo-tree-id8990 . -6) (undo-tree-id8991 . 193) (undo-tree-id8992 . 188) (undo-tree-id8993 . -1) (undo-tree-id8994 . 194) (undo-tree-id8995 . 193)) ((1398 . 1592)) (23394 5416 501296 0) 0 nil]) ((#("(" 0 1 (fontified nil font-lock-face rjsx-text syntax-table #18# face (rainbow-delimiters-depth-4-face rjsx-text))) . -1632) (undo-tree-id8996 . -1) (undo-tree-id8997 . -1) (undo-tree-id8998 . 1) (undo-tree-id8999 . -1) (#(")" 0 1 (fontified t font-lock-face rjsx-text syntax-table #18# face (rainbow-delimiters-depth-4-face rjsx-text))) . 1633) (undo-tree-id9000 . 1)) nil (23394 5416 502198 0) 0 nil]) ((1633 . 1634) (nil fontified nil 1632 . 1633) (nil font-lock-face rjsx-text 1632 . 1633) (1632 . 1633) (#("(" 0 1 (fontified nil font-lock-face rjsx-text)) . -1632) (1632 . 1633)) nil (23394 5416 501328 0) 0 nil]) ((#("      " 0 6 (fontified t font-lock-face rjsx-text syntax-table #18#)) . -1632) (undo-tree-id9001 . -6) (undo-tree-id9002 . 6) (undo-tree-id9003 . 6) (undo-tree-id9004 . 6) (undo-tree-id9005 . 6) (undo-tree-id9006 . 6) (undo-tree-id9007 . -6) (undo-tree-id9008 . -6) (undo-tree-id9009 . 6) (undo-tree-id9010 . 6) (undo-tree-id9011 . 6) (undo-tree-id9012 . 6)) nil (23394 5416 501351 0) 0 nil]) ((#("
" 0 1 (fontified t font-lock-face rjsx-text syntax-table #18#)) . 1632) (undo-tree-id9013 . -1) (undo-tree-id9014 . -1) (undo-tree-id9015 . -1) (undo-tree-id9016 . -1) (undo-tree-id9017 . 1) (undo-tree-id9018 . 1) (undo-tree-id9019 . 1) (undo-tree-id9020 . 1) (undo-tree-id9021 . -1) (undo-tree-id9022 . -1) (undo-tree-id9023 . -1) (undo-tree-id9024 . -1) (undo-tree-id9025 . -1) (undo-tree-id9026 . -1) (undo-tree-id9027 . -1) (undo-tree-id9028 . -1) (undo-tree-id9029 . -1) (undo-tree-id9030 . -1) (undo-tree-id9031 . -1) (undo-tree-id9032 . 1) (undo-tree-id9033 . 1) (undo-tree-id9034 . -1)) nil (23394 5416 501394 0) 0 nil]) ((1626 . 1632)) nil (23394 5416 501398 0) 0 nil]) ((#("
" 0 1 (fontified t font-lock-face rjsx-text syntax-table #18#)) . 1633) (undo-tree-id9035 . -1) (undo-tree-id9036 . 1) (undo-tree-id9037 . 1) (undo-tree-id9038 . 1) (undo-tree-id9039 . 1) (undo-tree-id9040 . 1) (undo-tree-id9041 . 1) (undo-tree-id9042 . 1) (undo-tree-id9043 . 1) (undo-tree-id9044 . 1) (undo-tree-id9045 . 1) (undo-tree-id9046 . 1) (undo-tree-id9047 . 1) (undo-tree-id9048 . 1) (undo-tree-id9049 . 1) (undo-tree-id9050 . 1) (undo-tree-id9051 . 1) (undo-tree-id9052 . 1) (undo-tree-id9053 . 1) (undo-tree-id9054 . 1) (undo-tree-id9055 . 1) (undo-tree-id9056 . 1) (undo-tree-id9057 . 1) (undo-tree-id9058 . 1) (undo-tree-id9059 . 1) (undo-tree-id9060 . -1)) nil (23394 5416 501436 0) 0 nil]) ((1627 . 1633)) nil (23394 5416 501440 0) 0 nil]) ((#("            <title> end</title>" 0 1 (fontified t font-lock-face rjsx-text syntax-table #18#) 1 7 (fontified t font-lock-face rjsx-text syntax-table #18#) 7 12 (fontified t font-lock-face rjsx-text syntax-table #18#) 12 13 (fontified t font-lock-face rjsx-tag-bracket-face) 13 15 (fontified t font-lock-face rjsx-tag) 15 18 (fontified t font-lock-face rjsx-tag) 18 19 (fontified t font-lock-face rjsx-tag-bracket-face) 19 20 (fontified t font-lock-face rjsx-text syntax-table #18#) 20 21 (fontified t font-lock-face rjsx-text syntax-table #18#) 21 22 (fontified t font-lock-face rjsx-text syntax-table #18#) 22 23 (fontified t font-lock-face rjsx-text syntax-table #18#) 23 24 (fontified t font-lock-face rjsx-tag-bracket-face) 24 25 (fontified t font-lock-face rjsx-tag-bracket-face) 25 30 (fontified t font-lock-face rjsx-tag) 30 31 (fontified t font-lock-face rjsx-tag-bracket-face)) . 1627) (undo-tree-id9061 . -31) (undo-tree-id9062 . -31) (undo-tree-id9063 . -31) (undo-tree-id9064 . -31) (undo-tree-id9065 . -31) (undo-tree-id9066 . -31) (undo-tree-id9067 . 8) (undo-tree-id9068 . -20) (undo-tree-id9069 . -20) (undo-tree-id9070 . 8) (undo-tree-id9071 . 8) (undo-tree-id9072 . -20) (undo-tree-id9073 . 8) (undo-tree-id9074 . 8) (undo-tree-id9075 . -20) (undo-tree-id9076 . 8) (undo-tree-id9077 . 11) (undo-tree-id9078 . -21) (undo-tree-id9079 . 8) (undo-tree-id9080 . 10) (undo-tree-id9081 . -22) (undo-tree-id9082 . 8) (undo-tree-id9083 . 9) (undo-tree-id9084 . -23) (undo-tree-id9085 . 31) (undo-tree-id9086 . 8) (undo-tree-id9087 . -31)) nil (23394 5416 501486 0) 0 nil]) ((1647 . 1650)) nil (23394 5416 501491 0) 0 nil]) ((#("horizontal" 0 5 (font-lock-face rjsx-text syntax-table #18# fontified t) 5 9 (font-lock-face rjsx-text syntax-table #18# fontified t) 9 10 (font-lock-face rjsx-text syntax-table #18# fontified t)) . -1647) (undo-tree-id9088 . -10) (undo-tree-id9089 . -10) (undo-tree-id9090 . -10) (undo-tree-id9091 . -10) (undo-tree-id9092 . -10) (undo-tree-id9093 . -10) (undo-tree-id9094 . -10) 1657 (t 23394 5070 996739 661000)) nil (23394 5416 501502 0) 0 nil]) ((#("\"" 0 1 (fontified t font-lock-face font-lock-string-face help-echo "unterminated string literal" cursor-sensor-functions #1#)) . 771) (undo-tree-id8918 . 1) (undo-tree-id8919 . -1) (undo-tree-id8920 . -1)) ((771 . 772) (t 23394 5070 996739 661000)) (23394 5087 235769 0) 0 nil]) ((#("\"" 0 1 (fontified t font-lock-face font-lock-string-face)) . 749) (undo-tree-id8910 . -1) (undo-tree-id8911 . -1) (undo-tree-id8912 . -1) (undo-tree-id8913 . -1) (undo-tree-id8914 . -1) (undo-tree-id8915 . 1) (undo-tree-id8916 . 1) (undo-tree-id8917 . -1)) ((749 . 750)) (23394 5086 793515 0) 0 nil]) ((761 . 771)) nil (23394 5081 889659 0) 0 nil]) ((751 . 761) (750 . 752) (#("{" 0 1 (fontified nil font-lock-face font-lock-string-face)) . -750) (750 . 751)) nil (23394 4887 58450 0) 0 nil]) ((#("root" 0 4 (font-lock-face font-lock-string-face fontified t)) . -750) (undo-tree-id8870 . -4) (undo-tree-id8871 . -2) (undo-tree-id8872 . -4) (undo-tree-id8873 . 2) (undo-tree-id8874 . -2) (undo-tree-id8875 . -2) (undo-tree-id8876 . 2) (undo-tree-id8877 . 2) (undo-tree-id8878 . -2) (undo-tree-id8879 . 1) (undo-tree-id8880 . 2) (undo-tree-id8881 . -3) (undo-tree-id8882 . 1) (undo-tree-id8883 . -4) 754 (t 23394 4862 816537 755000)) nil (23394 4887 58479 0) 0 nil]) ((#(")" 0 1 (fontified t face (rainbow-delimiters-depth-3-face))) . -339) (undo-tree-id8860 . -1) (undo-tree-id8861 . -1) (undo-tree-id8862 . -1) (undo-tree-id8863 . -1) (undo-tree-id8864 . -1) (undo-tree-id8865 . -1) (undo-tree-id8866 . 1) (undo-tree-id8867 . -1) (undo-tree-id8868 . -1) (undo-tree-id8869 . -1) 340) nil (23394 4862 795129 0) 0 nil] [nil nil ((#("log()" 0 3 (fontified t font-lock-face js2-function-call) 3 4 (fontified t face (rainbow-delimiters-depth-3-face)) 4 5 (fontified t face (rainbow-delimiters-depth-3-face))) . 335) (undo-tree-id8846 . -5) (undo-tree-id8847 . -5) (undo-tree-id8848 . -5) (undo-tree-id8849 . -5) (undo-tree-id8850 . -5) (undo-tree-id8851 . -5) (undo-tree-id8852 . 5) (undo-tree-id8853 . 1) (undo-tree-id8854 . -5) (undo-tree-id8855 . 2) (undo-tree-id8856 . -4) (undo-tree-id8857 . -5) (undo-tree-id8858 . -5) (undo-tree-id8859 . -5) 340) ((335 . 340) (t 23394 4861 97764 634000)) (23394 4861 75291 0) 0 nil] [nil nil ((#("log()" 0 3 (fontified t font-lock-face js2-function-call) 3 4 (fontified t face #19=(rainbow-delimiters-depth-3-face)) 4 5 (fontified t face #20=(rainbow-delimiters-depth-3-face))) . -335)) ((335 . 340)) (23394 4860 218127 0) 0 (:region [335 340 nil nil])]) ((undo-tree-id8831 . -5) (undo-tree-id8832 . -5) (undo-tree-id8833 . 3) (undo-tree-id8834 . -3) (undo-tree-id8835 . 1) (undo-tree-id8836 . 2) (undo-tree-id8837 . -4) (undo-tree-id8838 . 1) (undo-tree-id8839 . -5) (undo-tree-id8840 . -5) (undo-tree-id8841 . 1) (undo-tree-id8842 . -5) (undo-tree-id8843 . 2) (undo-tree-id8844 . -4) (undo-tree-id8845 . -5) 340) nil (23394 4861 474063 0) 0 nil] [nil nil ((#("log()" 0 3 (fontified nil font-lock-face js2-function-call) 3 4 (fontified nil face #19#) 4 5 (fontified nil face #20#)) . 335)) ((335 . 340)) (23394 4860 218125 0) 0 nil]) ((344 . 345) (#(")" 0 1 (fontified nil font-lock-face font-lock-builtin-face help-echo "missing ; before statement" cursor-sensor-functions #1#)) . -344) (344 . 345)) nil (23394 4860 217980 0) 0 nil]) ((338 . 340) (#("(" 0 1 (fontified nil font-lock-face js2-object-property-access help-echo "Code has no side effects" cursor-sensor-functions #1#)) . -338) (327 . 339) (t 23394 4845 394156 393000)) nil (23394 4860 217625 0) 0 nil]) ((331 . 332)) nil (23394 4845 360647 0) 0 nil]) ((#("." 0 1 (fontified t help-echo "missing name after . operator" cursor-sensor-functions #1#)) . -331) (undo-tree-id8826 . -1) (undo-tree-id8827 . -1) (undo-tree-id8828 . -1) (undo-tree-id8829 . 1) (undo-tree-id8830 . -1) 332) nil (23394 4845 360712 0) 0 nil]) ((327 . 332)) nil (23394 4845 360716 0) 0 nil]) ((322 . 327) (t 23394 4790 536093 607000)) nil (23394 4845 360718 0) 0 nil]) ((727 . 731) (727 . 728) (nil fontified nil 726 . 727) (nil help-echo #21="invalid JSX identifier" 726 . 727) (nil cursor-sensor-functions #1# 726 . 727) (nil prettify-symbols-start 725 726 . 727) (nil prettify-symbols-end 727 726 . 727) (726 . 727) (#("\"" 0 1 (fontified nil)) . -726) (nil fontified nil 726 . 727) (nil help-echo #21# 726 . 727) (nil cursor-sensor-functions #1# 726 . 727) (nil prettify-symbols-start 725 726 . 727) (nil prettify-symbols-end 727 726 . 727) (726 . 727) (nil composition (0 2 #23=[8658]) 726 . 727) (#("\"" 0 1 (fontified nil help-echo #21# cursor-sensor-functions #1# prettify-symbols-start 725 prettify-symbols-end 727)) . -726) (726 . 727)) nil (23394 4790 505644 0) 0 nil]) ((#("r" 0 1 (fontified t font-lock-face rjsx-attr)) . -726) (undo-tree-id8735 . -1) (undo-tree-id8736 . -1) (undo-tree-id8737 . 1) (undo-tree-id8738 . -1) 727) nil (23394 4790 505679 0) 0 nil]) ((726 . 727)) nil (23394 4790 505682 0) 0 nil]) ((#("{" 0 1 (fontified t help-echo "missing `}' after expression" cursor-sensor-functions #1# face (rainbow-delimiters-depth-4-face))) . -726) (undo-tree-id8739 . -1) (undo-tree-id8740 . -1) (undo-tree-id8741 . -1) (undo-tree-id8742 . 1) (undo-tree-id8743 . -1) (undo-tree-id8744 . -1) (undo-tree-id8745 . -1) (undo-tree-id8746 . -1) (undo-tree-id8747 . -1) (undo-tree-id8748 . -1) (undo-tree-id8749 . -1) (undo-tree-id8750 . -1) (undo-tree-id8751 . -1) (undo-tree-id8752 . -1) (undo-tree-id8753 . -1) (undo-tree-id8754 . -1) (undo-tree-id8755 . -1) (undo-tree-id8756 . -1) (undo-tree-id8757 . -1) (undo-tree-id8758 . -1) (undo-tree-id8759 . -1) (undo-tree-id8760 . -1) (undo-tree-id8761 . -1) (undo-tree-id8762 . -1) (undo-tree-id8763 . -1) (undo-tree-id8764 . 1) (undo-tree-id8765 . 1) (undo-tree-id8766 . 1) (undo-tree-id8767 . 1) (undo-tree-id8768 . -1) (undo-tree-id8769 . 1) (undo-tree-id8770 . 1) (undo-tree-id8771 . -1) (undo-tree-id8772 . -1) (undo-tree-id8773 . -1) (undo-tree-id8774 . -1) (undo-tree-id8775 . -1) 727) nil (23394 4790 505729 0) 0 nil]) ((#("classes.}" 0 7 (fontified t help-echo #22="missing `}' after expression" cursor-sensor-functions #1#) 7 8 (fontified t help-echo "missing name after . operator" cursor-sensor-functions #1#) 8 9 (fontified t help-echo #22# cursor-sensor-functions #1# face (rainbow-delimiters-depth-4-face))) . -727) (undo-tree-id8776 . -9) (undo-tree-id8777 . -8) (undo-tree-id8778 . -9) (undo-tree-id8779 . 1) (undo-tree-id8780 . 1) (undo-tree-id8781 . 1) (undo-tree-id8782 . 1) (undo-tree-id8783 . 1) (undo-tree-id8784 . 1) (undo-tree-id8785 . 1) (undo-tree-id8786 . 1) (undo-tree-id8787 . 1) (undo-tree-id8788 . 1) (undo-tree-id8789 . 1) (undo-tree-id8790 . 1) (undo-tree-id8791 . 1) (undo-tree-id8792 . 1) (undo-tree-id8793 . 1) (undo-tree-id8794 . 1) (undo-tree-id8795 . 1) (undo-tree-id8796 . 1) (undo-tree-id8797 . 1) (undo-tree-id8798 . 1) (undo-tree-id8799 . 1) (undo-tree-id8800 . 1) (undo-tree-id8801 . 1) (undo-tree-id8802 . 1) (undo-tree-id8803 . 1) (undo-tree-id8804 . 1) (undo-tree-id8805 . 1) (undo-tree-id8806 . 1) (undo-tree-id8807 . 1) (undo-tree-id8808 . 1) (undo-tree-id8809 . 1) (undo-tree-id8810 . 1) (undo-tree-id8811 . 1) (undo-tree-id8812 . 1) (undo-tree-id8813 . 1) (undo-tree-id8814 . 1) (undo-tree-id8815 . 1) (undo-tree-id8816 . 1) (undo-tree-id8817 . -7) (undo-tree-id8818 . -8) (undo-tree-id8819 . 1) (undo-tree-id8820 . -8) (undo-tree-id8821 . 1) (undo-tree-id8822 . -9) (undo-tree-id8823 . 1) (undo-tree-id8824 . -9) (undo-tree-id8825 . -9) 736) nil (23394 4790 505798 0) 0 nil] [nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil nil ((719 . 721)) ((#("le" 0 2 (fontified t font-lock-face rjsx-attr)) . 719) (undo-tree-id8690 . -2) (undo-tree-id8691 . -2) (undo-tree-id8692 . 2) (undo-tree-id8693 . -1) (undo-tree-id8694 . 1) (undo-tree-id8695 . -2) (undo-tree-id8696 . -2) (undo-tree-id8697 . -2)) (23394 4782 140577 0) 0 nil]) ((#("k" 0 1 (fontified t font-lock-face rjsx-attr)) . -719) (undo-tree-id8608 . -1) (undo-tree-id8609 . -1) (undo-tree-id8610 . 1) (undo-tree-id8611 . -1) (undo-tree-id8612 . -1) (undo-tree-id8613 . -1) (undo-tree-id8614 . -1) (undo-tree-id8615 . -1) (undo-tree-id8616 . -1) (undo-tree-id8617 . -1) (undo-tree-id8618 . -1) (undo-tree-id8619 . -1) (#("l" 0 1 (fontified t font-lock-face rjsx-attr)) . -720) (undo-tree-id8620 . -1) (undo-tree-id8621 . -1) (undo-tree-id8622 . 1) (undo-tree-id8623 . -1) 721) ((719 . 721)) (23394 4782 141188 0) 0 nil]) ((720 . 721)) ((#("l" 0 1 (fontified t font-lock-face rjsx-attr)) . 720) (undo-tree-id8698 . -1) (undo-tree-id8699 . -1) (undo-tree-id8700 . -1)) (23394 4782 348905 0) 0 nil]) ((#("l" 0 1 (fontified t font-lock-face rjsx-attr)) . -720) (undo-tree-id8624 . -1) (undo-tree-id8625 . -1) (undo-tree-id8626 . 1) (undo-tree-id8627 . -1) 721) ((720 . 721)) (23394 4782 532804 0) 0 nil]) ((720 . 721)) ((#("l" 0 1 (fontified t font-lock-face rjsx-attr)) . 720) (undo-tree-id8701 . -1) (undo-tree-id8702 . -1) (undo-tree-id8703 . 1) (undo-tree-id8704 . -1)) (23394 4782 764867 0) 0 nil]) ((#("l" 0 1 (fontified t font-lock-face rjsx-attr)) . -720) (undo-tree-id8628 . -1) (undo-tree-id8629 . -1) (undo-tree-id8630 . 1) (undo-tree-id8631 . -1) (undo-tree-id8632 . -1) (undo-tree-id8633 . -1) (#("e" 0 1 (fontified t font-lock-face rjsx-attr)) . -721) (undo-tree-id8634 . -1) (undo-tree-id8635 . -1) (undo-tree-id8636 . 1) (undo-tree-id8637 . -1) 722) ((720 . 722)) (23394 4783 20782 0) 0 nil]) ((716 . 722)) ((#("stykle" 0 3 (fontified t font-lock-face rjsx-attr) 3 4 (fontified t font-lock-face rjsx-attr) 4 5 (fontified t font-lock-face rjsx-attr) 5 6 (fontified t font-lock-face rjsx-attr)) . 716) (undo-tree-id8705 . -6) (undo-tree-id8706 . -6) (undo-tree-id8707 . 6) (undo-tree-id8708 . -1) (undo-tree-id8709 . 5) (undo-tree-id8710 . -2) (undo-tree-id8711 . 4) (undo-tree-id8712 . -3) (undo-tree-id8713 . -3) (undo-tree-id8714 . -3) (undo-tree-id8715 . -3) (undo-tree-id8716 . -3) (undo-tree-id8717 . -3) (undo-tree-id8718 . -3) (undo-tree-id8719 . -3) (undo-tree-id8720 . -3) (undo-tree-id8721 . -3) (undo-tree-id8722 . -3) (undo-tree-id8723 . -3) (undo-tree-id8724 . -3) (undo-tree-id8725 . -3) (undo-tree-id8726 . -3) (undo-tree-id8727 . -3) (undo-tree-id8728 . 3) (undo-tree-id8729 . -4) (undo-tree-id8730 . -4) (undo-tree-id8731 . -4) (undo-tree-id8732 . -4) (undo-tree-id8733 . 2) (undo-tree-id8734 . -6)) (23394 4783 276921 0) 0 nil]) ((#("className" 0 3 (fontified t font-lock-face rjsx-attr) 3 9 (fontified t font-lock-face rjsx-attr)) . -716) (undo-tree-id8638 . -9) (undo-tree-id8639 . -9) (undo-tree-id8640 . -9) 725) ((716 . 725)) (23394 4783 508713 0) 0 nil]) ((#("classes." 0 7 (fontified t help-echo "missing `}' after expression" cursor-sensor-functions #1#) 7 8 (fontified t help-echo "missing name after . operator" cursor-sensor-functions #1#)) . -727) (undo-tree-id8641 . -8) (undo-tree-id8642 . -8) (undo-tree-id8643 . -8) (undo-tree-id8644 . 8) (undo-tree-id8645 . -1) (undo-tree-id8646 . 7) (undo-tree-id8647 . -2) (undo-tree-id8648 . 6) (undo-tree-id8649 . -3) (undo-tree-id8650 . 5) (undo-tree-id8651 . -4) (undo-tree-id8652 . 4) (undo-tree-id8653 . -5) (undo-tree-id8654 . 3) (undo-tree-id8655 . -6) (undo-tree-id8656 . 2) (undo-tree-id8657 . -7) (undo-tree-id8658 . 1) (undo-tree-id8659 . -8) (undo-tree-id8660 . -8) (undo-tree-id8661 . -8) (undo-tree-id8662 . -8) (undo-tree-id8663 . -8) (undo-tree-id8664 . -8) (undo-tree-id8665 . -8) (undo-tree-id8666 . -8) (undo-tree-id8667 . -8) (undo-tree-id8668 . -8) (undo-tree-id8669 . -8) (undo-tree-id8670 . -7) (undo-tree-id8671 . -8) (undo-tree-id8672 . -8) 735) ((727 . 735)) (23394 4783 756817 0) 0 nil]) ((#("root" 0 4 (font-lock-face js2-object-property-access fontified t)) . -735) (undo-tree-id8673 . -4) (undo-tree-id8674 . -4) (undo-tree-id8675 . -4) (undo-tree-id8676 . 4) (undo-tree-id8677 . -1) (undo-tree-id8678 . 3) (undo-tree-id8679 . -2) (undo-tree-id8680 . 2) (undo-tree-id8681 . -3) (undo-tree-id8682 . 1) (undo-tree-id8683 . -4) (undo-tree-id8684 . -4) (undo-tree-id8685 . -4) (undo-tree-id8686 . -4) (undo-tree-id8687 . -4) (undo-tree-id8688 . -4) (undo-tree-id8689 . -4) 739 (t 23394 4641 218383 244000)) nil (23394 4784 532814 0) 0 nil]) ((#("    " 0 4 (fontified t)) . -662) (undo-tree-id8607 . 4) 695 (t 23394 4638 921764 155000)) nil (23394 4641 191233 0) 0 nil]) ((662 . 695)) nil (23394 4638 894863 0) 0 nil]) ((657 . 662) (t 23394 4626 583783 427000)) nil (23394 4638 894872 0) 0 nil]) ((693 . 705) (693 . 694) (nil fontified nil 692 . 693) (nil help-echo #24="invalid JSX identifier" 692 . 693) (nil cursor-sensor-functions #1# 692 . 693) (nil prettify-symbols-start 691 692 . 693) (nil prettify-symbols-end 693 692 . 693) (692 . 693) (nil composition (0 2 #23#) 692 . 693) (#("{" 0 1 (fontified nil help-echo #24# cursor-sensor-functions #1# prettify-symbols-start 691 prettify-symbols-end 693)) . -692) (692 . 693)) nil (23394 4626 558734 0) 0 nil]) ((#("\"" 0 1 (fontified t font-lock-face font-lock-string-face help-echo "unterminated string literal" cursor-sensor-functions #1#)) . -692) (undo-tree-id8238 . -1) (undo-tree-id8239 . -1) (undo-tree-id8240 . -1) (undo-tree-id8241 . -1) (undo-tree-id8242 . -1) (undo-tree-id8243 . -1) (undo-tree-id8244 . -1) (undo-tree-id8245 . -1) (undo-tree-id8246 . -1) (undo-tree-id8247 . -1) (undo-tree-id8248 . -1) (undo-tree-id8249 . -1) (undo-tree-id8250 . -1) (undo-tree-id8251 . -1) (undo-tree-id8252 . -1) (undo-tree-id8253 . -1) (undo-tree-id8254 . -1) (undo-tree-id8255 . -1) (undo-tree-id8256 . -1) (undo-tree-id8257 . -1) (undo-tree-id8258 . -1) (undo-tree-id8259 . -1) (undo-tree-id8260 . -1) (undo-tree-id8261 . -1) (undo-tree-id8262 . -1) (undo-tree-id8263 . -1) (undo-tree-id8264 . -1) (undo-tree-id8265 . -1) (undo-tree-id8266 . -1) (undo-tree-id8267 . -1) (undo-tree-id8268 . -1) (undo-tree-id8269 . -1) (undo-tree-id8270 . -1) (undo-tree-id8271 . -1) (undo-tree-id8272 . -1) (undo-tree-id8273 . -1) (undo-tree-id8274 . -1) (undo-tree-id8275 . -1) (undo-tree-id8276 . -1) (undo-tree-id8277 . -1) (undo-tree-id8278 . -1) (undo-tree-id8279 . -1) (undo-tree-id8280 . -1) (undo-tree-id8281 . -1) (undo-tree-id8282 . -1) (undo-tree-id8283 . -1) (undo-tree-id8284 . -1) (undo-tree-id8285 . -1) (undo-tree-id8286 . -1) (undo-tree-id8287 . -1) (#("\"" 0 1 (fontified t font-lock-face font-lock-string-face)) . -693) (undo-tree-id8288 . -1) (undo-tree-id8289 . -1) (undo-tree-id8290 . 1) (undo-tree-id8291 . 1) (undo-tree-id8292 . 1) (undo-tree-id8293 . 1) (undo-tree-id8294 . 1) (undo-tree-id8295 . 1) (undo-tree-id8296 . 1) (undo-tree-id8297 . 1) (undo-tree-id8298 . -1) (undo-tree-id8299 . 1) (undo-tree-id8300 . 1) (undo-tree-id8301 . 1) (undo-tree-id8302 . 1) (undo-tree-id8303 . 1) (undo-tree-id8304 . 1) (undo-tree-id8305 . 1) (undo-tree-id8306 . 1) (undo-tree-id8307 . 1) (undo-tree-id8308 . 1) (undo-tree-id8309 . 1) (undo-tree-id8310 . 1) (undo-tree-id8311 . 1) (undo-tree-id8312 . 1) (undo-tree-id8313 . 1) (undo-tree-id8314 . 1) (undo-tree-id8315 . 1) (undo-tree-id8316 . 1) (undo-tree-id8317 . 1) (undo-tree-id8318 . 1) (undo-tree-id8319 . 1) (undo-tree-id8320 . 1) (undo-tree-id8321 . 1) (undo-tree-id8322 . 1) (undo-tree-id8323 . 1) (undo-tree-id8324 . 1) (undo-tree-id8325 . 1) (undo-tree-id8326 . 1) (undo-tree-id8327 . 1) (undo-tree-id8328 . 1) (undo-tree-id8329 . 1) (undo-tree-id8330 . 1) (undo-tree-id8331 . 1) (undo-tree-id8332 . 1) (undo-tree-id8333 . 1) (undo-tree-id8334 . 1) (undo-tree-id8335 . 1) (undo-tree-id8336 . 1) (undo-tree-id8337 . 1) (undo-tree-id8338 . 1) (undo-tree-id8339 . 1) (undo-tree-id8340 . 1) (undo-tree-id8341 . 1) (undo-tree-id8342 . 1) (undo-tree-id8343 . 1) (undo-tree-id8344 . 1) (undo-tree-id8345 . 1) (undo-tree-id8346 . 1) (undo-tree-id8347 . 1) (undo-tree-id8348 . 1) (undo-tree-id8349 . 1) (undo-tree-id8350 . 1) (undo-tree-id8351 . 1) (undo-tree-id8352 . 1) (undo-tree-id8353 . 1) (undo-tree-id8354 . 1) (undo-tree-id8355 . 1) (undo-tree-id8356 . 1) (undo-tree-id8357 . 1) (undo-tree-id8358 . 1) (undo-tree-id8359 . 1) (undo-tree-id8360 . 1) (undo-tree-id8361 . 1) (undo-tree-id8362 . 1) (undo-tree-id8363 . 1) (undo-tree-id8364 . 1) (undo-tree-id8365 . 1) (undo-tree-id8366 . 1) (undo-tree-id8367 . 1) (undo-tree-id8368 . 1) (undo-tree-id8369 . 1) (undo-tree-id8370 . 1) (undo-tree-id8371 . 1) (undo-tree-id8372 . 1) (undo-tree-id8373 . 1) (undo-tree-id8374 . 1) (undo-tree-id8375 . 1) (undo-tree-id8376 . 1) (undo-tree-id8377 . 1) (undo-tree-id8378 . 1) (undo-tree-id8379 . 1) (undo-tree-id8380 . 1) (undo-tree-id8381 . 1) (undo-tree-id8382 . 1) (undo-tree-id8383 . 1) (undo-tree-id8384 . 1) (undo-tree-id8385 . 1) (undo-tree-id8386 . 1) (undo-tree-id8387 . 1) (undo-tree-id8388 . 1) (undo-tree-id8389 . 1) (undo-tree-id8390 . 1) (undo-tree-id8391 . 1) (undo-tree-id8392 . 1) (undo-tree-id8393 . 1) (undo-tree-id8394 . 1) (undo-tree-id8395 . 1) (undo-tree-id8396 . 1) (undo-tree-id8397 . 1) (undo-tree-id8398 . 1) (undo-tree-id8399 . 1) (undo-tree-id8400 . 1) (undo-tree-id8401 . 1) (undo-tree-id8402 . 1) (undo-tree-id8403 . 1) (undo-tree-id8404 . 1) (undo-tree-id8405 . 1) (undo-tree-id8406 . 1) (undo-tree-id8407 . 1) (undo-tree-id8408 . 1) (undo-tree-id8409 . 1) (undo-tree-id8410 . 1) (undo-tree-id8411 . 1) (undo-tree-id8412 . 1) (undo-tree-id8413 . 1) (undo-tree-id8414 . 1) (undo-tree-id8415 . 1) (undo-tree-id8416 . 1) (undo-tree-id8417 . 1) (undo-tree-id8418 . 1) (undo-tree-id8419 . 1) (undo-tree-id8420 . 1) (undo-tree-id8421 . 1) (undo-tree-id8422 . 1) (undo-tree-id8423 . 1) (undo-tree-id8424 . 1) (undo-tree-id8425 . 1) (undo-tree-id8426 . 1) (undo-tree-id8427 . 1) (undo-tree-id8428 . 1) (undo-tree-id8429 . 1) (undo-tree-id8430 . 1) (undo-tree-id8431 . 1) (undo-tree-id8432 . 1) (undo-tree-id8433 . 1) (undo-tree-id8434 . 1) (undo-tree-id8435 . 1) (undo-tree-id8436 . 1) (undo-tree-id8437 . 1) (undo-tree-id8438 . 1) (undo-tree-id8439 . 1) (undo-tree-id8440 . 1) (undo-tree-id8441 . 1) (undo-tree-id8442 . 1) (undo-tree-id8443 . 1) (undo-tree-id8444 . 1) (undo-tree-id8445 . 1) (undo-tree-id8446 . 1) (undo-tree-id8447 . 1) (undo-tree-id8448 . 1) (undo-tree-id8449 . 1) (undo-tree-id8450 . 1) (undo-tree-id8451 . 1) (undo-tree-id8452 . 1) (undo-tree-id8453 . 1) (undo-tree-id8454 . 1) (undo-tree-id8455 . 1) (undo-tree-id8456 . 1) (undo-tree-id8457 . 1) (undo-tree-id8458 . 1) (undo-tree-id8459 . 1) (undo-tree-id8460 . 1) (undo-tree-id8461 . 1) (undo-tree-id8462 . 1) (undo-tree-id8463 . 1) (undo-tree-id8464 . 1) (undo-tree-id8465 . 1) (undo-tree-id8466 . 1) (undo-tree-id8467 . 1) (undo-tree-id8468 . 1) (undo-tree-id8469 . 1) (undo-tree-id8470 . 1) (undo-tree-id8471 . 1) (undo-tree-id8472 . 1) (undo-tree-id8473 . 1) (undo-tree-id8474 . 1) (undo-tree-id8475 . 1) (undo-tree-id8476 . 1) (undo-tree-id8477 . 1) (undo-tree-id8478 . 1) (undo-tree-id8479 . 1) (undo-tree-id8480 . 1) (undo-tree-id8481 . 1) (undo-tree-id8482 . 1) (undo-tree-id8483 . 1) (undo-tree-id8484 . 1) (undo-tree-id8485 . 1) (undo-tree-id8486 . 1) (undo-tree-id8487 . 1) (undo-tree-id8488 . 1) (undo-tree-id8489 . 1) (undo-tree-id8490 . 1) (undo-tree-id8491 . 1) (undo-tree-id8492 . 1) (undo-tree-id8493 . 1) (undo-tree-id8494 . 1) (undo-tree-id8495 . 1) (undo-tree-id8496 . 1) (undo-tree-id8497 . 1) (undo-tree-id8498 . 1) (undo-tree-id8499 . 1) (undo-tree-id8500 . 1) (undo-tree-id8501 . 1) (undo-tree-id8502 . 1) (undo-tree-id8503 . 1) (undo-tree-id8504 . 1) (undo-tree-id8505 . 1) (undo-tree-id8506 . 1) (undo-tree-id8507 . 1) (undo-tree-id8508 . 1) (undo-tree-id8509 . 1) (undo-tree-id8510 . 1) (undo-tree-id8511 . 1) (undo-tree-id8512 . 1) (undo-tree-id8513 . 1) (undo-tree-id8514 . 1) (undo-tree-id8515 . 1) (undo-tree-id8516 . 1) (undo-tree-id8517 . 1) (undo-tree-id8518 . 1) (undo-tree-id8519 . 1) (undo-tree-id8520 . 1) (undo-tree-id8521 . 1) (undo-tree-id8522 . 1) (undo-tree-id8523 . 1) (undo-tree-id8524 . 1) (undo-tree-id8525 . 1) (undo-tree-id8526 . 1) (undo-tree-id8527 . 1) (undo-tree-id8528 . 1) (undo-tree-id8529 . 1) (undo-tree-id8530 . 1) (undo-tree-id8531 . 1) (undo-tree-id8532 . 1) (undo-tree-id8533 . 1) (undo-tree-id8534 . 1) (undo-tree-id8535 . 1) (undo-tree-id8536 . 1) (undo-tree-id8537 . 1) (undo-tree-id8538 . 1) (undo-tree-id8539 . 1) (undo-tree-id8540 . 1) (undo-tree-id8541 . 1) (undo-tree-id8542 . 1) (undo-tree-id8543 . 1) (undo-tree-id8544 . 1) (undo-tree-id8545 . 1) (undo-tree-id8546 . 1) (undo-tree-id8547 . 1) (undo-tree-id8548 . 1) (undo-tree-id8549 . 1) (undo-tree-id8550 . 1) (undo-tree-id8551 . 1) (undo-tree-id8552 . 1) (undo-tree-id8553 . 1) (undo-tree-id8554 . 1) (undo-tree-id8555 . 1) (undo-tree-id8556 . 1) (undo-tree-id8557 . 1) (undo-tree-id8558 . 1) (undo-tree-id8559 . 1) (undo-tree-id8560 . 1) (undo-tree-id8561 . 1) (undo-tree-id8562 . 1) (undo-tree-id8563 . 1) (undo-tree-id8564 . 1) (undo-tree-id8565 . 1) (undo-tree-id8566 . 1) (undo-tree-id8567 . 1) (undo-tree-id8568 . 1) (undo-tree-id8569 . 1) (undo-tree-id8570 . 1) (undo-tree-id8571 . 1) (undo-tree-id8572 . 1) (undo-tree-id8573 . 1) (undo-tree-id8574 . 1) (undo-tree-id8575 . 1) (undo-tree-id8576 . 1) (undo-tree-id8577 . -1) 694) nil (23394 4626 559234 0) 0 nil]) ((#("root" 0 4 (fontified t font-lock-face font-lock-string-face)) . -693) (undo-tree-id8578 . -4) (undo-tree-id8579 . -4) (undo-tree-id8580 . -4) (undo-tree-id8581 . 4) (undo-tree-id8582 . -1) (undo-tree-id8583 . 3) (undo-tree-id8584 . -2) (undo-tree-id8585 . 2) (undo-tree-id8586 . -3) (undo-tree-id8587 . 1) (undo-tree-id8588 . -4) (undo-tree-id8589 . -4) (undo-tree-id8590 . -3) (undo-tree-id8591 . 1) (undo-tree-id8592 . -3) (undo-tree-id8593 . -3) (undo-tree-id8594 . 1) (undo-tree-id8595 . 1) (undo-tree-id8596 . -3) (undo-tree-id8597 . 1) (undo-tree-id8598 . 1) (undo-tree-id8599 . -3) (undo-tree-id8600 . 1) (undo-tree-id8601 . 1) (undo-tree-id8602 . -3) (undo-tree-id8603 . 1) (undo-tree-id8604 . -4) (undo-tree-id8605 . -4) (undo-tree-id8606 . -4) 697 (t 23394 4533 28907 960000)) nil (23394 4626 559295 0) 0 nil]) ((#("," 0 1 (fontified t)) . -1725) (undo-tree-id8170 . -1) (undo-tree-id8171 . -1) (undo-tree-id8172 . -1) (undo-tree-id8173 . -1) (undo-tree-id8174 . -1) (undo-tree-id8175 . -1) (undo-tree-id8176 . -1) (undo-tree-id8177 . -1) (undo-tree-id8178 . -1) (undo-tree-id8179 . -1) (undo-tree-id8180 . -1) (undo-tree-id8181 . -1) (undo-tree-id8182 . -1) (#(" " 0 1 (fontified t)) . -1726) (undo-tree-id8183 . -1) (undo-tree-id8184 . -1) (undo-tree-id8185 . -1) (undo-tree-id8186 . -1) (undo-tree-id8187 . -1) (undo-tree-id8188 . -1) (undo-tree-id8189 . -1) (undo-tree-id8190 . -1) (undo-tree-id8191 . -1) (undo-tree-id8192 . -1) (undo-tree-id8193 . -1) (undo-tree-id8194 . -1) (#("{" 0 1 (fontified t face (rainbow-delimiters-depth-2-face))) . -1727) (undo-tree-id8195 . -1) (undo-tree-id8196 . -1) (undo-tree-id8197 . -1) (undo-tree-id8198 . -1) (undo-tree-id8199 . -1) (undo-tree-id8200 . -1) (undo-tree-id8201 . -1) (undo-tree-id8202 . -1) (undo-tree-id8203 . -1) (undo-tree-id8204 . -1) (undo-tree-id8205 . -1) (undo-tree-id8206 . -1) (#(" " 0 1 (fontified t)) . -1728) (undo-tree-id8207 . -1) (undo-tree-id8208 . -1) (undo-tree-id8209 . -1) (undo-tree-id8210 . -1) (undo-tree-id8211 . -1) (undo-tree-id8212 . -1) (undo-tree-id8213 . -1) (undo-tree-id8214 . -1) (undo-tree-id8215 . -1) (undo-tree-id8216 . -1) (undo-tree-id8217 . -1) 1729) nil (23394 4533 2067 0) 0 nil]) ((#("withTheme: " 0 7 (fontified t font-lock-face js2-object-property) 7 9 (fontified t font-lock-face js2-object-property) 9 11 (fontified t)) . -1729) (undo-tree-id8218 . -11) (undo-tree-id8219 . -11) (undo-tree-id8220 . -11) (undo-tree-id8221 . -11) (undo-tree-id8222 . -11) (undo-tree-id8223 . -11) (undo-tree-id8224 . -11) (undo-tree-id8225 . -11) (undo-tree-id8226 . -11) (undo-tree-id8227 . -11) 1740) nil (23394 4533 2103 0) 0 nil]) ((#("true }" 0 4 (font-lock-face font-lock-constant-face fontified t) 4 5 (fontified t) 5 6 (fontified t face (rainbow-delimiters-depth-2-face))) . -1740) (undo-tree-id8228 . -6) (undo-tree-id8229 . -6) (undo-tree-id8230 . -6) (undo-tree-id8231 . -6) (undo-tree-id8232 . -6) (undo-tree-id8233 . -6) (undo-tree-id8234 . -6) (undo-tree-id8235 . 1) (undo-tree-id8236 . -6) (undo-tree-id8237 . -6) 1746 (t 23394 4487 687305 522000)) nil (23394 4533 2126 0) 0 nil]) ((693 . 697)) nil (23394 4487 659424 0) 0 nil]) ((#("tabBar" 0 6 (fontified t font-lock-face font-lock-string-face)) . -693) (undo-tree-id7997 . -6) (undo-tree-id7998 . -6) (undo-tree-id7999 . -6) (undo-tree-id8000 . -4) (undo-tree-id8001 . 2) (undo-tree-id8002 . -4) (undo-tree-id8003 . -4) (undo-tree-id8004 . 2) (undo-tree-id8005 . 2) (undo-tree-id8006 . -4) (undo-tree-id8007 . 1) (undo-tree-id8008 . 2) (undo-tree-id8009 . -5) (undo-tree-id8010 . 1) (undo-tree-id8011 . -6) (undo-tree-id8012 . -6) (undo-tree-id8013 . 1) (undo-tree-id8014 . -5) (undo-tree-id8015 . 2) (undo-tree-id8016 . 1) (undo-tree-id8017 . -4) (undo-tree-id8018 . 3) (undo-tree-id8019 . 2) (undo-tree-id8020 . -3) (undo-tree-id8021 . 4) (undo-tree-id8022 . 3) (undo-tree-id8023 . -2) (undo-tree-id8024 . 5) (undo-tree-id8025 . 4) (undo-tree-id8026 . 5) (undo-tree-id8027 . 5) (undo-tree-id8028 . 5) (undo-tree-id8029 . 6) (undo-tree-id8030 . -1) (undo-tree-id8031 . 5) (undo-tree-id8032 . 5) (undo-tree-id8033 . -1) (undo-tree-id8034 . 5) (undo-tree-id8035 . 5) (undo-tree-id8036 . -1) (undo-tree-id8037 . 5) (undo-tree-id8038 . 5) (undo-tree-id8039 . -1) (undo-tree-id8040 . 5) (undo-tree-id8041 . 5) (undo-tree-id8042 . -1) (undo-tree-id8043 . 5) (undo-tree-id8044 . 5) (undo-tree-id8045 . -1) (undo-tree-id8046 . 5) (undo-tree-id8047 . 5) (undo-tree-id8048 . -1) (undo-tree-id8049 . 5) (undo-tree-id8050 . 5) (undo-tree-id8051 . -1) (undo-tree-id8052 . 5) (undo-tree-id8053 . 5) (undo-tree-id8054 . -1) (undo-tree-id8055 . 5) (undo-tree-id8056 . 5) (undo-tree-id8057 . -1) (undo-tree-id8058 . 5) (undo-tree-id8059 . 5) (undo-tree-id8060 . -1) (undo-tree-id8061 . 5) (undo-tree-id8062 . 5) (undo-tree-id8063 . -1) (undo-tree-id8064 . 5) (undo-tree-id8065 . 5) (undo-tree-id8066 . 5) (undo-tree-id8067 . 5) (undo-tree-id8068 . 5) (undo-tree-id8069 . 5) (undo-tree-id8070 . 5) (undo-tree-id8071 . 5) (undo-tree-id8072 . 5) (undo-tree-id8073 . 5) (undo-tree-id8074 . 5) (undo-tree-id8075 . 5) (undo-tree-id8076 . 5) (undo-tree-id8077 . 5) (undo-tree-id8078 . 5) (undo-tree-id8079 . 5) (undo-tree-id8080 . 5) (undo-tree-id8081 . 5) (undo-tree-id8082 . 5) (undo-tree-id8083 . 5) (undo-tree-id8084 . 5) (undo-tree-id8085 . 5) (undo-tree-id8086 . 5) (undo-tree-id8087 . 5) (undo-tree-id8088 . 5) (undo-tree-id8089 . 5) (undo-tree-id8090 . 5) (undo-tree-id8091 . 5) (undo-tree-id8092 . 5) (undo-tree-id8093 . 5) (undo-tree-id8094 . 5) (undo-tree-id8095 . 5) (undo-tree-id8096 . 5) (undo-tree-id8097 . 5) (undo-tree-id8098 . 5) (undo-tree-id8099 . 5) (undo-tree-id8100 . 5) (undo-tree-id8101 . 5) (undo-tree-id8102 . 5) (undo-tree-id8103 . 5) (undo-tree-id8104 . 5) (undo-tree-id8105 . 5) (undo-tree-id8106 . 5) (undo-tree-id8107 . 5) (undo-tree-id8108 . 5) (undo-tree-id8109 . 5) (undo-tree-id8110 . 5) (undo-tree-id8111 . 5) (undo-tree-id8112 . 5) (undo-tree-id8113 . 5) (undo-tree-id8114 . 5) (undo-tree-id8115 . 5) (undo-tree-id8116 . 5) (undo-tree-id8117 . 5) (undo-tree-id8118 . 5) (undo-tree-id8119 . 5) (undo-tree-id8120 . 5) (undo-tree-id8121 . 5) (undo-tree-id8122 . 5) (undo-tree-id8123 . 5) (undo-tree-id8124 . 5) (undo-tree-id8125 . 5) (undo-tree-id8126 . 5) (undo-tree-id8127 . 5) (undo-tree-id8128 . 5) (undo-tree-id8129 . 5) (undo-tree-id8130 . 5) (undo-tree-id8131 . 5) (undo-tree-id8132 . 5) (undo-tree-id8133 . 5) (undo-tree-id8134 . 5) (undo-tree-id8135 . 5) (undo-tree-id8136 . 5) (undo-tree-id8137 . 5) (undo-tree-id8138 . 5) (undo-tree-id8139 . 5) (undo-tree-id8140 . 5) (undo-tree-id8141 . 5) (undo-tree-id8142 . 5) (undo-tree-id8143 . 5) (undo-tree-id8144 . 5) (undo-tree-id8145 . 5) (undo-tree-id8146 . 5) (undo-tree-id8147 . 5) (undo-tree-id8148 . 5) (undo-tree-id8149 . 5) (undo-tree-id8150 . 5) (undo-tree-id8151 . 5) (undo-tree-id8152 . 5) (undo-tree-id8153 . 5) (undo-tree-id8154 . 5) (undo-tree-id8155 . 5) (undo-tree-id8156 . 5) (undo-tree-id8157 . 5) (undo-tree-id8158 . 5) (undo-tree-id8159 . 5) (undo-tree-id8160 . 5) (undo-tree-id8161 . 5) (undo-tree-id8162 . 5) (undo-tree-id8163 . 5) (undo-tree-id8164 . 5) (undo-tree-id8165 . 5) (undo-tree-id8166 . 5) (undo-tree-id8167 . -6) (undo-tree-id8168 . -6) (undo-tree-id8169 . -6) 699 (t 23394 4251 73385 213000)) nil (23394 4487 659826 0) 0 nil]) ((693 . 694)) nil (23394 4251 50526 0) 0 nil]) ((#("T" 0 1 (font-lock-face font-lock-string-face fontified t)) . -693) (undo-tree-id7994 . -1) (undo-tree-id7995 . -1) (undo-tree-id7996 . -1) 694 (t 23394 4182 592123 706000)) nil (23394 4251 50573 0) 0 nil]) ((#("  " 0 2 (fontified nil)) . 126) (126 . 128) (126 . 127)) nil (23394 4182 571614 0) 0 nil]) ((#("}" 0 1 (fontified t help-echo "missing ; after statement" cursor-sensor-functions #1# face (rainbow-delimiters-depth-2-face))) . 126) (undo-tree-id7733 . 1) (undo-tree-id7734 . 1) (undo-tree-id7735 . 1) (undo-tree-id7736 . 1) (undo-tree-id7737 . 1) (undo-tree-id7738 . 1) (undo-tree-id7739 . 1) (undo-tree-id7740 . 1) (undo-tree-id7741 . 1) (undo-tree-id7742 . 1) (undo-tree-id7743 . 1) (undo-tree-id7744 . 1) (undo-tree-id7745 . 1) (undo-tree-id7746 . 1) (undo-tree-id7747 . 1) (undo-tree-id7748 . 1) (undo-tree-id7749 . 1) (undo-tree-id7750 . 1) (undo-tree-id7751 . 1) (undo-tree-id7752 . 1) (undo-tree-id7753 . 1) (undo-tree-id7754 . 1) (undo-tree-id7755 . 1) (undo-tree-id7756 . 1) (undo-tree-id7757 . 1) (undo-tree-id7758 . 1) (undo-tree-id7759 . 1) (undo-tree-id7760 . 1) (undo-tree-id7761 . -1) (undo-tree-id7762 . -1) (undo-tree-id7763 . -1) (undo-tree-id7764 . 1) (undo-tree-id7765 . 1) (#(" " 0 1 (fontified t help-echo "missing ; after statement" cursor-sensor-functions #1#)) . 126) (undo-tree-id7766 . 1) (undo-tree-id7767 . 1) (undo-tree-id7768 . 1) (undo-tree-id7769 . 1) (undo-tree-id7770 . 1) (undo-tree-id7771 . 1) (undo-tree-id7772 . 1) (undo-tree-id7773 . 1) (undo-tree-id7774 . 1) (undo-tree-id7775 . 1) (undo-tree-id7776 . 1) (undo-tree-id7777 . 1) (undo-tree-id7778 . 1) (undo-tree-id7779 . 1) (undo-tree-id7780 . 1) (undo-tree-id7781 . 1) (undo-tree-id7782 . 1) (undo-tree-id7783 . 1) (undo-tree-id7784 . 1) (undo-tree-id7785 . 1) (undo-tree-id7786 . 1) (undo-tree-id7787 . 1) (undo-tree-id7788 . 1) (undo-tree-id7789 . 1) (undo-tree-id7790 . 1) (undo-tree-id7791 . 1) (undo-tree-id7792 . 1) (undo-tree-id7793 . 1) (#(" " 0 1 (fontified t help-echo "missing ; after statement" cursor-sensor-functions #1#)) . 126) (undo-tree-id7794 . 1) (undo-tree-id7795 . 1) (undo-tree-id7796 . 1) (undo-tree-id7797 . 1) (undo-tree-id7798 . 1) (undo-tree-id7799 . 1) (undo-tree-id7800 . 1) (undo-tree-id7801 . 1) (undo-tree-id7802 . 1) (undo-tree-id7803 . 1) (undo-tree-id7804 . 1) (undo-tree-id7805 . 1) (undo-tree-id7806 . 1) (undo-tree-id7807 . 1) (undo-tree-id7808 . 1) (undo-tree-id7809 . 1) (undo-tree-id7810 . 1) (undo-tree-id7811 . 1) (undo-tree-id7812 . 1) (undo-tree-id7813 . 1) (undo-tree-id7814 . 1) (undo-tree-id7815 . 1) (undo-tree-id7816 . 1) (undo-tree-id7817 . 1) (undo-tree-id7818 . 1) (undo-tree-id7819 . 1) (#("
" 0 1 (fontified t)) . 126) (undo-tree-id7820 . 1) (undo-tree-id7821 . 1) (undo-tree-id7822 . 1) (undo-tree-id7823 . 1) (undo-tree-id7824 . 1) (undo-tree-id7825 . 1) (undo-tree-id7826 . 1) (undo-tree-id7827 . 1) (undo-tree-id7828 . 1) (undo-tree-id7829 . 1) (undo-tree-id7830 . 1) (undo-tree-id7831 . 1) (undo-tree-id7832 . 1) (undo-tree-id7833 . 1) (undo-tree-id7834 . 1) (undo-tree-id7835 . 1) (undo-tree-id7836 . 1) (undo-tree-id7837 . 1) (undo-tree-id7838 . 1) (undo-tree-id7839 . 1) (undo-tree-id7840 . 1) (undo-tree-id7841 . 1) (undo-tree-id7842 . -1) (undo-tree-id7843 . 1) (undo-tree-id7844 . 1)) nil (23394 4182 571766 0) 0 nil]) ((#("
" 0 1 (fontified t)) . 126) (undo-tree-id7845 . 1) (undo-tree-id7846 . 1) (undo-tree-id7847 . 1) (undo-tree-id7848 . 1) (undo-tree-id7849 . 1) (undo-tree-id7850 . 1) (undo-tree-id7851 . 1) (undo-tree-id7852 . 1) (undo-tree-id7853 . 1) (undo-tree-id7854 . 1) (undo-tree-id7855 . 1) (undo-tree-id7856 . 1) (undo-tree-id7857 . 1) (undo-tree-id7858 . 1) (undo-tree-id7859 . 1) (undo-tree-id7860 . 1) (undo-tree-id7861 . 1) (undo-tree-id7862 . 1) (undo-tree-id7863 . 1) (undo-tree-id7864 . 1) (undo-tree-id7865 . 1) (undo-tree-id7866 . 1) (undo-tree-id7867 . -1)) nil (23394 4182 571806 0) 0 nil]) ((#("    margin: '20px'," 0 4 (fontified t) 4 10 (fontified t font-lock-face js2-object-property) 10 11 (fontified t) 11 12 (fontified t) 12 18 (fontified t font-lock-face font-lock-string-face) 18 19 (fontified t)) . 126) (undo-tree-id7868 . 19) (undo-tree-id7869 . 19) (undo-tree-id7870 . 19) (undo-tree-id7871 . 19) (undo-tree-id7872 . 19) (undo-tree-id7873 . 19) (undo-tree-id7874 . 19) (undo-tree-id7875 . 19) (undo-tree-id7876 . 19) (undo-tree-id7877 . 19) (undo-tree-id7878 . 19) (undo-tree-id7879 . 19) (undo-tree-id7880 . 19) (undo-tree-id7881 . 19) (undo-tree-id7882 . 19) (undo-tree-id7883 . 19) (undo-tree-id7884 . 19) (undo-tree-id7885 . 19) (undo-tree-id7886 . 19) (undo-tree-id7887 . 19) (undo-tree-id7888 . -19)) nil (23394 4182 571837 0) 0 nil]) ((#("
" 0 1 (fontified t)) . 126) (undo-tree-id7889 . 1) (undo-tree-id7890 . 1) (undo-tree-id7891 . 1) (undo-tree-id7892 . 1) (undo-tree-id7893 . 1) (undo-tree-id7894 . 1) (undo-tree-id7895 . 1) (undo-tree-id7896 . 1) (undo-tree-id7897 . 1) (undo-tree-id7898 . 1) (undo-tree-id7899 . 1) (undo-tree-id7900 . 1) (undo-tree-id7901 . 1) (undo-tree-id7902 . 1) (undo-tree-id7903 . 1) (undo-tree-id7904 . 1) (undo-tree-id7905 . 1) (undo-tree-id7906 . 1) (undo-tree-id7907 . -1)) nil (23394 4182 571863 0) 0 nil]) ((#("    flexGrow:1," 0 4 (fontified t) 4 12 (fontified t font-lock-face js2-object-property) 12 13 (fontified t) 13 15 (fontified t)) . 126) (undo-tree-id7908 . 15) (undo-tree-id7909 . 15) (undo-tree-id7910 . 15) (undo-tree-id7911 . 15) (undo-tree-id7912 . 15) (undo-tree-id7913 . 15) (undo-tree-id7914 . 15) (undo-tree-id7915 . 15) (undo-tree-id7916 . 15) (undo-tree-id7917 . 15) (undo-tree-id7918 . 15) (undo-tree-id7919 . 15) (undo-tree-id7920 . 15) (undo-tree-id7921 . 15) (undo-tree-id7922 . 15) (undo-tree-id7923 . 15) (undo-tree-id7924 . -15)) nil (23394 4182 571886 0) 0 nil]) ((#("
" 0 1 (fontified t)) . 126) (undo-tree-id7925 . 1) (undo-tree-id7926 . 1) (undo-tree-id7927 . 1) (undo-tree-id7928 . 1) (undo-tree-id7929 . 1) (undo-tree-id7930 . 1) (undo-tree-id7931 . 1) (undo-tree-id7932 . 1) (undo-tree-id7933 . 1) (undo-tree-id7934 . 1) (undo-tree-id7935 . 1) (undo-tree-id7936 . 1) (undo-tree-id7937 . 1) (undo-tree-id7938 . 1) (undo-tree-id7939 . -1)) nil (23394 4182 571906 0) 0 nil]) ((#("  textField: {" 0 2 (fontified t) 2 11 (fontified t font-lock-face js2-object-property) 11 12 (fontified t) 12 13 (fontified t) 13 14 (fontified t face (rainbow-delimiters-depth-3-face))) . 126) (undo-tree-id7940 . 14) (undo-tree-id7941 . 14) (undo-tree-id7942 . 14) (undo-tree-id7943 . 14) (undo-tree-id7944 . 14) (undo-tree-id7945 . 14) (undo-tree-id7946 . 14) (undo-tree-id7947 . 14) (undo-tree-id7948 . 14) (undo-tree-id7949 . 14) (undo-tree-id7950 . 14) (undo-tree-id7951 . 14) (undo-tree-id7952 . -14)) nil (23394 4182 571924 0) 0 nil]) ((#("
" 0 1 (fontified t)) . 126) (undo-tree-id7953 . 1) (undo-tree-id7954 . 1) (undo-tree-id7955 . 1) (undo-tree-id7956 . 1) (undo-tree-id7957 . 1) (undo-tree-id7958 . 1) (undo-tree-id7959 . 1) (undo-tree-id7960 . 1) (undo-tree-id7961 . 1) (undo-tree-id7962 . 1) (undo-tree-id7963 . -1)) nil (23394 4182 571940 0) 0 nil]) ((#("  }," 0 2 (fontified t) 2 3 (fontified t face (rainbow-delimiters-depth-2-face)) 3 4 (fontified t)) . 126) (undo-tree-id7964 . 4) (undo-tree-id7965 . 4) (undo-tree-id7966 . 4) (undo-tree-id7967 . 4) (undo-tree-id7968 . 4) (undo-tree-id7969 . 4) (undo-tree-id7970 . 4) (undo-tree-id7971 . 4) (undo-tree-id7972 . -4)) nil (23394 4182 571953 0) 0 nil]) ((#("
" 0 1 (fontified nil)) . 126) (undo-tree-id7973 . 1) (undo-tree-id7974 . 1) (undo-tree-id7975 . 1) (undo-tree-id7976 . 1) (undo-tree-id7977 . 1) (undo-tree-id7978 . 1) (undo-tree-id7979 . -1)) nil (23394 4182 571964 0) 0 nil]) ((#("    margin: '10px'," 0 4 (fontified t) 4 10 (fontified t font-lock-face js2-object-property) 10 11 (fontified t) 11 12 (fontified t) 12 18 (fontified t font-lock-face font-lock-string-face) 18 19 (fontified t)) . 126) (undo-tree-id7980 . 19) (undo-tree-id7981 . 19) (undo-tree-id7982 . 19) (undo-tree-id7983 . 19) (undo-tree-id7984 . -19)) nil (23394 4182 571972 0) 0 nil]) ((#("
" 0 1 (fontified t)) . 126) (undo-tree-id7985 . 1) (undo-tree-id7986 . 1)) nil (23394 4182 571977 0) 0 nil]) ((#("  divider: {" 0 2 (fontified t) 2 9 (fontified t font-lock-face js2-object-property) 9 10 (fontified t) 10 11 (fontified t) 11 12 (fontified t face (rainbow-delimiters-depth-3-face))) . 126)) nil (23394 4182 571979 0) 0 nil]) ((#("
" 0 1 (fontified t)) . 126) (undo-tree-id7987 . -1) (undo-tree-id7988 . -1) (undo-tree-id7989 . -1) (undo-tree-id7990 . -1)) nil (23394 4182 571986 0) 0 nil]) ((#("  }," 0 2 (fontified t) 2 3 (fontified t face (rainbow-delimiters-depth-2-face)) 3 4 (fontified t)) . 126)) nil (23394 4182 571988 0) 0 nil]) ((#("
" 0 1 (fontified t)) . 126)) nil (23394 4182 571990 0) 0 nil]) ((#("    flexWrap: 'wrap'," 0 4 (fontified t) 4 12 (fontified t font-lock-face js2-object-property) 12 13 (fontified t) 13 14 (fontified t) 14 20 (fontified t font-lock-face font-lock-string-face) 20 21 (fontified t)) . 126)) nil (23394 4182 571992 0) 0 nil]) ((#("
" 0 1 (fontified t)) . 126)) nil (23394 4182 571994 0) 0 nil]) ((#("    display: 'flex'," 0 4 (fontified t) 4 11 (fontified t font-lock-face js2-object-property) 11 12 (fontified t) 12 13 (fontified t) 13 19 (fontified t font-lock-face font-lock-string-face) 19 20 (fontified t)) . 126)) nil (23394 4182 571995 0) 0 nil]) ((#("
" 0 1 (fontified t)) . 126)) nil (23394 4182 571997 0) 0 nil]) ((#("  container: {" 0 2 (fontified t) 2 11 (fontified t font-lock-face js2-object-property) 11 12 (fontified t) 12 13 (fontified t) 13 14 (fontified t face (rainbow-delimiters-depth-3-face))) . 126)) nil (23394 4182 571999 0) 0 nil]) ((#("
" 0 1 (fontified t)) . 126)) nil (23394 4182 572000 0) 0 nil]) ((#("  }," 0 2 (fontified t) 2 3 (fontified t face (rainbow-delimiters-depth-2-face)) 3 4 (fontified t)) . 126)) nil (23394 4182 572002 0) 0 nil]) ((#("
" 0 1 (fontified t)) . 126)) nil (23394 4182 572004 0) 0 nil]) ((#("    display: 'block'," 0 4 (fontified t) 4 11 (fontified t font-lock-face js2-object-property) 11 13 (fontified t) 13 20 (fontified t font-lock-face font-lock-string-face) 20 21 (fontified t)) . 126)) nil (23394 4182 572005 0) 0 nil]) ((#("
" 0 1 (fontified t)) . 126)) nil (23394 4182 572007 0) 0 nil]) ((#("
" 0 1 (fontified t)) . 126) (undo-tree-id7991 . -1)) nil (23394 4182 572010 0) 0 nil]) ((#("    flexGrow: 1," 0 4 (fontified t) 4 12 (fontified t font-lock-face js2-object-property) 12 16 (fontified t)) . 126)) nil (23394 4182 572012 0) 0 nil]) ((#("
" 0 1 (fontified t)) . 126)) nil (23394 4182 572014 0) 0 nil]) ((#("  root: {" 0 2 (fontified t) 2 6 (fontified t font-lock-face js2-object-property) 6 8 (fontified t) 8 9 (fontified t face (rainbow-delimiters-depth-3-face))) . 126) (undo-tree-id7992 . -9) (undo-tree-id7993 . -9) (t 23394 4130 471073 923000)) nil (23394 4182 572018 0) 0 nil]) ((#("    width: \"100%\"," 0 4 (fontified t) 4 9 (fontified t font-lock-face js2-object-property) 9 11 (fontified t) 11 17 (fontified t font-lock-face font-lock-string-face) 17 18 (fontified t)) . 153) (undo-tree-id7721 . -15) (undo-tree-id7722 . -15) (undo-tree-id7723 . 3) (undo-tree-id7724 . -15) (undo-tree-id7725 . -15) (undo-tree-id7726 . -15) (undo-tree-id7727 . 3) (undo-tree-id7728 . 3) (undo-tree-id7729 . -15) (undo-tree-id7730 . 18) (undo-tree-id7731 . 3) (undo-tree-id7732 . -18)) nil (23394 4130 438045 0) 0 nil] [nil nil ((#("export default  withStyles(styles, { withTheme: true })(TabBar);" 0 1 (font-lock-face font-lock-keyword-face fontified t) 1 6 (font-lock-face font-lock-keyword-face fontified t) 6 7 (fontified t) 7 8 (font-lock-face font-lock-keyword-face fontified t) 8 14 (font-lock-face font-lock-keyword-face fontified t) 14 15 (fontified t) 15 16 (fontified t) 16 26 (font-lock-face js2-function-call fontified t) 26 27 (fontified t face (rainbow-delimiters-depth-1-face)) 27 33 (fontified t) 33 34 (fontified t) 34 35 (fontified t) 35 36 (fontified t face (rainbow-delimiters-depth-2-face)) 36 37 (fontified t) 37 44 (font-lock-face js2-object-property fontified t) 44 46 (font-lock-face js2-object-property fontified t) 46 48 (fontified t) 48 52 (font-lock-face font-lock-constant-face fontified t) 52 53 (fontified t) 53 54 (fontified t face (rainbow-delimiters-depth-2-face)) 54 55 (fontified t face (rainbow-delimiters-depth-1-face)) 55 56 (fontified t face (rainbow-delimiters-depth-1-face)) 56 62 (fontified t) 62 63 (fontified t face (rainbow-delimiters-depth-1-face)) 63 64 (fontified t)) . 1922) (undo-tree-id7716 . -64) (undo-tree-id7717 . 64) (undo-tree-id7718 . 64) (undo-tree-id7719 . 64) (undo-tree-id7720 . -64)) ((1922 . 1986)) (23394 3593 991843 0) 0 nil] [nil nil ((#("import { withStyles } from '@material-ui/core/styles';" 0 6 (fontified t font-lock-face font-lock-keyword-face) 6 7 (fontified t) 7 8 (fontified t face #25=(rainbow-delimiters-depth-1-face)) 8 9 (fontified t) 9 19 (fontified t font-lock-face font-lock-variable-name-face) 19 20 (fontified t) 20 21 (fontified t face #26=(rainbow-delimiters-depth-1-face)) 21 22 (fontified t) 22 26 (fontified t font-lock-face font-lock-keyword-face) 26 27 (fontified t) 27 53 (fontified t font-lock-face font-lock-string-face) 53 54 (fontified t)) . 43)) ((43 . 97)) (23394 3587 137672 0) 0 (:region [43 97 nil nil])]) ((undo-tree-id7712 . 54) (undo-tree-id7713 . -6) (undo-tree-id7714 . -54)) nil (23394 3593 992122 0) 0 nil] [nil nil ((#("import { withStyles } from '@material-ui/core/styles';" 0 6 (fontified nil font-lock-face font-lock-keyword-face) 6 7 (fontified nil) 7 8 (fontified nil face #25#) 8 9 (fontified nil) 9 19 (fontified nil font-lock-face font-lock-variable-name-face) 19 20 (fontified nil) 20 21 (fontified nil face #26#) 21 22 (fontified nil) 22 26 (fontified nil font-lock-face font-lock-keyword-face) 26 27 (fontified nil) 27 53 (fontified nil font-lock-face font-lock-string-face) 53 54 (fontified nil)) . 43) (undo-tree-id7715 . 54) (t 23394 3515 689608 499000)) ((43 . 97)) (23394 3587 137665 0) 0 nil] [nil nil ((#("const styles = theme => ({
  root: {
    flexGrow: 1,
    width: \"100%\",
    display: 'block',
  },
  container: {
    display: 'flex',
    flexWrap: 'wrap',
  },
  divider: {
    margin: '10px',
  },
  textField: {
    flexGrow:1,
    margin: '20px',

  }});" 0 5 (fontified t font-lock-face font-lock-keyword-face) 5 6 (fontified t) 6 12 (fontified t font-lock-face font-lock-function-name-face) 12 15 (fontified t) 15 20 (fontified t font-lock-face js2-function-param) 20 21 (fontified t) 21 23 (fontified t composition (0 2 #23#) prettify-symbols-start 120 prettify-symbols-end 122) 23 24 (fontified t) 24 25 (fontified t face (rainbow-delimiters-depth-1-face)) 25 26 (fontified t face (rainbow-delimiters-depth-2-face)) 26 29 (fontified t) 29 33 (fontified t font-lock-face js2-object-property) 33 35 (fontified t) 35 36 (fontified t face (rainbow-delimiters-depth-3-face)) 36 41 (fontified t) 41 49 (fontified t font-lock-face js2-object-property) 49 54 (fontified t) 54 58 (fontified t) 58 63 (fontified t font-lock-face js2-object-property) 63 65 (fontified t) 65 71 (fontified t font-lock-face font-lock-string-face) 71 73 (fontified t) 73 77 (fontified t) 77 84 (fontified t font-lock-face js2-object-property) 84 86 (fontified t) 86 93 (fontified t font-lock-face font-lock-string-face) 93 97 (fontified t) 97 98 (fontified t face (rainbow-delimiters-depth-3-face)) 98 100 (fontified t) 100 102 (fontified t) 102 111 (fontified t font-lock-face js2-object-property) 111 113 (fontified t) 113 114 (fontified t face (rainbow-delimiters-depth-3-face)) 114 115 (fontified t) 115 119 (fontified t) 119 126 (fontified t font-lock-face js2-object-property) 126 128 (fontified t) 128 134 (fontified t font-lock-face font-lock-string-face) 134 136 (fontified t) 136 140 (fontified t) 140 148 (fontified t font-lock-face js2-object-property) 148 150 (fontified t) 150 156 (fontified t font-lock-face font-lock-string-face) 156 158 (fontified t) 158 160 (fontified t) 160 161 (fontified t face (rainbow-delimiters-depth-3-face)) 161 163 (fontified t) 163 165 (fontified t) 165 172 (fontified t font-lock-face js2-object-property) 172 174 (fontified t) 174 175 (fontified t face (rainbow-delimiters-depth-3-face)) 175 180 (fontified t) 180 186 (fontified t font-lock-face js2-object-property) 186 188 (fontified t) 188 194 (fontified t font-lock-face font-lock-string-face) 194 198 (fontified t) 198 199 (fontified t face (rainbow-delimiters-depth-3-face)) 199 201 (fontified t) 201 203 (fontified t) 203 212 (fontified t font-lock-face js2-object-property) 212 214 (fontified t) 214 215 (fontified t face (rainbow-delimiters-depth-3-face)) 215 216 (fontified t) 216 220 (fontified t) 220 228 (fontified t font-lock-face js2-object-property) 228 236 (fontified t) 236 242 (fontified t font-lock-face js2-object-property) 242 244 (fontified t) 244 250 (fontified t font-lock-face font-lock-string-face) 250 252 (fontified t) 252 253 (fontified t) 253 255 (fontified t) 255 256 (fontified t face (rainbow-delimiters-depth-3-face)) 256 257 (fontified t face (rainbow-delimiters-depth-2-face)) 257 258 (fontified t face (rainbow-delimiters-depth-1-face)) 258 259 (fontified t)) . -99) (undo-tree-id7493 . -259) (undo-tree-id7494 . -37) (undo-tree-id7495 . -253) (undo-tree-id7496 . -253) (undo-tree-id7497 . -253) (undo-tree-id7498 . -253) (undo-tree-id7499 . -253) (undo-tree-id7500 . -253) (undo-tree-id7501 . -253) (undo-tree-id7502 . -253) (undo-tree-id7503 . -253) (undo-tree-id7504 . -253) (undo-tree-id7505 . -253) (undo-tree-id7506 . -253) (undo-tree-id7507 . -259) (undo-tree-id7508 . -253) (undo-tree-id7509 . -253) (undo-tree-id7510 . -253) (undo-tree-id7511 . -253) (undo-tree-id7512 . -253) (undo-tree-id7513 . -253) (undo-tree-id7514 . -253) (undo-tree-id7515 . -253) (undo-tree-id7516 . -253) (undo-tree-id7517 . -253) (undo-tree-id7518 . -253) (undo-tree-id7519 . -253) (undo-tree-id7520 . -253) (undo-tree-id7521 . -253) (undo-tree-id7522 . -253) (undo-tree-id7523 . -253) (undo-tree-id7524 . -253) (undo-tree-id7525 . -253) (undo-tree-id7526 . -253) (undo-tree-id7527 . -253) (undo-tree-id7528 . -253) (undo-tree-id7529 . -253) (undo-tree-id7530 . -253) (undo-tree-id7531 . -253) (undo-tree-id7532 . -253) (undo-tree-id7533 . -253) (undo-tree-id7534 . -253) (undo-tree-id7535 . -253) (undo-tree-id7536 . -253) (undo-tree-id7537 . -253) (undo-tree-id7538 . -253) (undo-tree-id7539 . -253) (undo-tree-id7540 . -253) (undo-tree-id7541 . -253) (undo-tree-id7542 . -253) (undo-tree-id7543 . -253) (undo-tree-id7544 . -253) (undo-tree-id7545 . -253) (undo-tree-id7546 . -253) (undo-tree-id7547 . -253) (undo-tree-id7548 . -253) (undo-tree-id7549 . -253) (undo-tree-id7550 . -253) (undo-tree-id7551 . -253) (undo-tree-id7552 . -253) (undo-tree-id7553 . -253) (undo-tree-id7554 . -253) (undo-tree-id7555 . -253) (undo-tree-id7556 . -253) (undo-tree-id7557 . -253) (undo-tree-id7558 . -253) (undo-tree-id7559 . -253) (undo-tree-id7560 . -253) (undo-tree-id7561 . -253) (undo-tree-id7562 . -253) (undo-tree-id7563 . -253) (undo-tree-id7564 . -253) (undo-tree-id7565 . -253) (undo-tree-id7566 . -253) (undo-tree-id7567 . -253) (undo-tree-id7568 . -253) (undo-tree-id7569 . -253) (undo-tree-id7570 . -253) (undo-tree-id7571 . -253) (undo-tree-id7572 . -253) (undo-tree-id7573 . -253) (undo-tree-id7574 . -253) (undo-tree-id7575 . -253) (undo-tree-id7576 . -253) (undo-tree-id7577 . -253) (undo-tree-id7578 . -253) (undo-tree-id7579 . -253) (undo-tree-id7580 . -253) (undo-tree-id7581 . -253) (undo-tree-id7582 . -253) (undo-tree-id7583 . -253) (undo-tree-id7584 . -253) (undo-tree-id7585 . -253) (undo-tree-id7586 . -253) (undo-tree-id7587 . -253) (undo-tree-id7588 . -253) (undo-tree-id7589 . -253) (undo-tree-id7590 . -253) (undo-tree-id7591 . -253) (undo-tree-id7592 . -253) (undo-tree-id7593 . -253) (undo-tree-id7594 . -253) (undo-tree-id7595 . -253) (undo-tree-id7596 . -253) (undo-tree-id7597 . -253) (undo-tree-id7598 . -253) (undo-tree-id7599 . -253) (undo-tree-id7600 . -253) (undo-tree-id7601 . -253) (undo-tree-id7602 . -253) (undo-tree-id7603 . -253) (undo-tree-id7604 . -253) (undo-tree-id7605 . -253) (undo-tree-id7606 . -253) (undo-tree-id7607 . -253) (undo-tree-id7608 . -253) (undo-tree-id7609 . -253) (undo-tree-id7610 . -253) (undo-tree-id7611 . -253) (undo-tree-id7612 . -253) (undo-tree-id7613 . -253) (undo-tree-id7614 . -253) (undo-tree-id7615 . -253) (undo-tree-id7616 . -253) (undo-tree-id7617 . -253) (undo-tree-id7618 . -253) (undo-tree-id7619 . -253) (undo-tree-id7620 . -253) (undo-tree-id7621 . -253) (undo-tree-id7622 . -253) (undo-tree-id7623 . -253) (undo-tree-id7624 . -253) (undo-tree-id7625 . -253) (undo-tree-id7626 . -253) (undo-tree-id7627 . -253) (undo-tree-id7628 . -253) (undo-tree-id7629 . -252) (undo-tree-id7630 . -216) (undo-tree-id7631 . -176) (undo-tree-id7632 . -115) (undo-tree-id7633 . -37) (undo-tree-id7634 . -92) (undo-tree-id7635 . 167) (undo-tree-id7636 . -92) (undo-tree-id7637 . -92) (undo-tree-id7638 . 167) (undo-tree-id7639 . 167) (undo-tree-id7640 . -92) (undo-tree-id7641 . 223) (undo-tree-id7642 . 167) (undo-tree-id7643 . -36) (undo-tree-id7644 . 223) (undo-tree-id7645 . 223) (undo-tree-id7646 . -36) (undo-tree-id7647 . 233) (undo-tree-id7648 . 223) (undo-tree-id7649 . -26) (undo-tree-id7650 . 233) (undo-tree-id7651 . 233) (undo-tree-id7652 . -26) (undo-tree-id7653 . 259) (undo-tree-id7654 . 233) (undo-tree-id7655 . 259) (undo-tree-id7656 . 259) (undo-tree-id7657 . -259) (undo-tree-id7658 . 232) (undo-tree-id7659 . 259) (undo-tree-id7660 . -27) (undo-tree-id7661 . 222) (undo-tree-id7662 . 232) (undo-tree-id7663 . -37) (undo-tree-id7664 . 205) (undo-tree-id7665 . 222) (undo-tree-id7666 . -54) (undo-tree-id7667 . 186) (undo-tree-id7668 . 205) (undo-tree-id7669 . -73) (undo-tree-id7670 . 164) (undo-tree-id7671 . 186) (undo-tree-id7672 . -95) (undo-tree-id7673 . 159) (undo-tree-id7674 . 164) (undo-tree-id7675 . -100) (undo-tree-id7676 . 144) (undo-tree-id7677 . 159) (undo-tree-id7678 . -115) (undo-tree-id7679 . 123) (undo-tree-id7680 . 144) (undo-tree-id7681 . -136) (undo-tree-id7682 . 101) (undo-tree-id7683 . 123) (undo-tree-id7684 . -158) (undo-tree-id7685 . 96) (undo-tree-id7686 . 101) (undo-tree-id7687 . -163) (undo-tree-id7688 . 83) (undo-tree-id7689 . 96) (undo-tree-id7690 . -176) (undo-tree-id7691 . 63) (undo-tree-id7692 . 83) (undo-tree-id7693 . -196) (undo-tree-id7694 . 58) (undo-tree-id7695 . 63) (undo-tree-id7696 . -201) (undo-tree-id7697 . 43) (undo-tree-id7698 . 58) (undo-tree-id7699 . -216) (undo-tree-id7700 . 27) (undo-tree-id7701 . 43) (undo-tree-id7702 . -232) (undo-tree-id7703 . 7) (undo-tree-id7704 . 27) (undo-tree-id7705 . -252) (undo-tree-id7706 . 6) (undo-tree-id7707 . 7) (undo-tree-id7708 . -253) (undo-tree-id7709 . 6) (undo-tree-id7710 . -259) (undo-tree-id7711 . -259) 358 (t 23394 3515 689608 499000)) ((99 . 358)) (23394 3574 568932 0) 0 nil]) ((1717 . 1720) (t 23394 3491 930737 317000)) nil (23394 3587 137164 0) 0 nil]) ((549 . 550)) nil (23394 3491 910632 0) 0 nil]) ((533 . 548) (#("stringP" 0 7 (fontified t font-lock-face js2-object-property-access help-echo "missing ; after statement" cursor-sensor-functions #1#)) . -533) (undo-tree-id7470 . -7) (undo-tree-id7471 . -7) (undo-tree-id7472 . 7) (undo-tree-id7473 . -1) (undo-tree-id7474 . 6) (undo-tree-id7475 . -2) (undo-tree-id7476 . 5) (undo-tree-id7477 . -3) (undo-tree-id7478 . 4) (undo-tree-id7479 . -4) (undo-tree-id7480 . 3) (undo-tree-id7481 . -5) (undo-tree-id7482 . 2) (undo-tree-id7483 . -6) (undo-tree-id7484 . 1) (undo-tree-id7485 . -7) 540) nil (23394 3491 910666 0) 0 nil]) ((522 . 540)) nil (23394 3491 910671 0) 0 nil]) ((#("s" 0 1 (fontified t help-echo "missing ; after statement" cursor-sensor-functions #1#)) . -522) (undo-tree-id7486 . -1) (undo-tree-id7487 . -1) (undo-tree-id7488 . -1) (undo-tree-id7489 . -1) (undo-tree-id7490 . 1) (undo-tree-id7491 . -1) (undo-tree-id7492 . -1) 523) nil (23394 3491 910684 0) 0 nil]) ((522 . 523) (521 . 523) (#("(" 0 1 (fontified nil font-lock-face js2-object-property-access help-echo "missing ; after statement" cursor-sensor-functions #1#)) . -521) (521 . 522)) nil (23394 3491 910688 0) 0 nil] [nil ([nil nil ((512 . 514) (#("(" 0 1 (fontified nil help-echo #27="missing ; after statement" cursor-sensor-functions #1#)) . -512) (512 . 513)) ((#("(" 0 1 (fontified nil help-echo #27# cursor-sensor-functions #1#)) . 512) (512 . 513) (#("()" 0 1 (fontified t help-echo #28="missing ; after statement" cursor-sensor-functions #1# face (rainbow-delimiters-depth-3-face)) 1 2 (fontified t help-echo #28# cursor-sensor-functions #1# face (rainbow-delimiters-depth-3-face))) . 512) (undo-tree-id7463 . -1) (undo-tree-id7464 . -1) (undo-tree-id7465 . -1) (undo-tree-id7466 . -2) (undo-tree-id7467 . 1) (undo-tree-id7468 . 2) (undo-tree-id7469 . -1)) (23394 3483 580023 0) 0 nil]) ((#("nsole.log" 0 5 (fontified t help-echo #29="missing ; after statement" cursor-sensor-functions #1#) 5 6 (fontified t help-echo #29# cursor-sensor-functions #1#) 6 9 (fontified t font-lock-face js2-object-property-access help-echo #29# cursor-sensor-functions #1#)) . -512) (undo-tree-id7438 . -9) (undo-tree-id7439 . -9) (undo-tree-id7440 . -9) (undo-tree-id7441 . 9) (undo-tree-id7442 . -1) (undo-tree-id7443 . 8) (undo-tree-id7444 . -2) (undo-tree-id7445 . 7) (undo-tree-id7446 . -3) (undo-tree-id7447 . 6) (undo-tree-id7448 . -4) (undo-tree-id7449 . 5) (undo-tree-id7450 . -5) (undo-tree-id7451 . 4) (undo-tree-id7452 . -6) (undo-tree-id7453 . 3) (undo-tree-id7454 . -7) (undo-tree-id7455 . 2) (undo-tree-id7456 . -8) (undo-tree-id7457 . -9) (undo-tree-id7458 . -9) (undo-tree-id7459 . 1) (undo-tree-id7460 . -9) (undo-tree-id7461 . -9) (undo-tree-id7462 . -9) 521) ((512 . 521)) (23394 3483 580423 0) 0 nil]) ((510 . 521)) nil (23394 3483 804281 0) 0 nil]) ((506 . 510) (t 23394 3473 826078 905000)) nil (23394 3483 580090 0) 0 nil]) ((1088 . 1089)) nil (23394 3473 806263 0) 0 nil]) ((#("-" 0 1 (fontified t font-lock-face font-lock-string-face)) . -1088) (undo-tree-id7400 . -1) (undo-tree-id7401 . -1) (undo-tree-id7402 . -1) (undo-tree-id7403 . -1) (undo-tree-id7404 . -1) (undo-tree-id7405 . -1) (#("1" 0 1 (fontified t font-lock-face font-lock-string-face)) . -1089) (undo-tree-id7406 . -1) (undo-tree-id7407 . -1) (undo-tree-id7408 . 1) (undo-tree-id7409 . 1) (undo-tree-id7410 . 1) (undo-tree-id7411 . 1) (undo-tree-id7412 . -1) 1090) nil (23394 3473 806290 0) 0 nil]) ((1095 . 1096)) nil (23394 3473 806294 0) 0 nil]) ((#("-" 0 1 (fontified t font-lock-face font-lock-string-face)) . -1095) (undo-tree-id7413 . -1) (undo-tree-id7414 . -1) (undo-tree-id7415 . 1) (undo-tree-id7416 . -1) 1096) nil (23394 3473 806301 0) 0 nil]) ((1095 . 1096)) nil (23394 3473 806303 0) 0 nil]) ((#("-" 0 1 (fontified t font-lock-face font-lock-string-face)) . -1095) (undo-tree-id7417 . -1) (undo-tree-id7418 . -1) (undo-tree-id7419 . -1) (undo-tree-id7420 . -1) (undo-tree-id7421 . -1) (undo-tree-id7422 . -1) (undo-tree-id7423 . 1) (undo-tree-id7424 . 1) (undo-tree-id7425 . -1) (undo-tree-id7426 . -1) (undo-tree-id7427 . -1) (#("1" 0 1 (fontified t font-lock-face font-lock-string-face)) . -1096) (undo-tree-id7428 . -1) (undo-tree-id7429 . -1) (undo-tree-id7430 . 1) (undo-tree-id7431 . 1) (undo-tree-id7432 . 1) (undo-tree-id7433 . 1) (undo-tree-id7434 . 1) (undo-tree-id7435 . 1) (undo-tree-id7436 . -1) (undo-tree-id7437 . -1) 1097 (t 23394 3342 563278 336000)) nil (23394 3473 806330 0) 0 nil]) ((1687 . 1690)) nil (23394 3342 547206 0) 0 nil]) ((#("1" 0 1 (fontified t font-lock-face font-lock-string-face)) . -1687) (undo-tree-id7372 . -1) (undo-tree-id7373 . -1) (undo-tree-id7374 . 1) (undo-tree-id7375 . -1) 1688) nil (23394 3342 547224 0) 0 nil]) ((1687 . 1688)) nil (23394 3342 547227 0) 0 nil]) ((#("e" 0 1 (fontified t font-lock-face font-lock-string-face)) . -1687) (undo-tree-id7376 . -1) (undo-tree-id7377 . -1) (undo-tree-id7378 . -1) (undo-tree-id7379 . 1) (undo-tree-id7380 . -1) (undo-tree-id7381 . -1) (undo-tree-id7382 . -1) (undo-tree-id7383 . -1) (undo-tree-id7384 . -1) (undo-tree-id7385 . -1) (#("e" 0 1 (fontified t font-lock-face font-lock-string-face)) . -1688) (undo-tree-id7386 . -1) (undo-tree-id7387 . -1) (undo-tree-id7388 . -1) (undo-tree-id7389 . 1) (undo-tree-id7390 . -1) (undo-tree-id7391 . -1) (undo-tree-id7392 . -1) (undo-tree-id7393 . -1) (#("e" 0 1 (fontified t font-lock-face font-lock-string-face)) . -1689) (undo-tree-id7394 . -1) (undo-tree-id7395 . -1) (undo-tree-id7396 . -1) (undo-tree-id7397 . 1) (undo-tree-id7398 . -1) (undo-tree-id7399 . -1) 1690 (t 23394 3333 460814 941000)) nil (23394 3342 547260 0) 0 nil]) ((1687 . 1690)) nil (23394 3333 444051 0) 0 nil]) ((#("e" 0 1 (fontified t font-lock-face font-lock-string-face)) . -1687) (undo-tree-id7344 . -1) (undo-tree-id7345 . -1) (undo-tree-id7346 . -1) (undo-tree-id7347 . 1) (undo-tree-id7348 . -1) 1688) nil (23394 3333 444068 0) 0 nil]) ((1687 . 1688)) nil (23394 3333 444071 0) 0 nil]) ((#("0" 0 1 (fontified t font-lock-face font-lock-string-face)) . -1687) (undo-tree-id7349 . -1) (undo-tree-id7350 . -1) (undo-tree-id7351 . -1) (undo-tree-id7352 . 1) (undo-tree-id7353 . 1) (undo-tree-id7354 . 1) (undo-tree-id7355 . 1) (undo-tree-id7356 . 1) (undo-tree-id7357 . -1) (undo-tree-id7358 . -1) 1688) nil (23394 3333 444086 0) 0 nil]) ((#("0" 0 1 (fontified t font-lock-face font-lock-string-face)) . -1687) (undo-tree-id7359 . -1) (undo-tree-id7360 . -1) (undo-tree-id7361 . -1) (undo-tree-id7362 . -1) (undo-tree-id7363 . -1) (#("v" 0 1 (fontified t font-lock-face font-lock-string-face)) . -1688) (undo-tree-id7364 . -1) (undo-tree-id7365 . -1) 1689) nil (23394 3333 444099 0) 0 nil]) ((1688 . 1689)) nil (23394 3333 444102 0) 0 nil]) ((#("q" 0 1 (fontified t font-lock-face font-lock-string-face)) . -1688) (undo-tree-id7366 . -1) (undo-tree-id7367 . -1) (undo-tree-id7368 . -1) 1689) nil (23394 3333 444107 0) 0 nil]) ((1688 . 1689)) nil (23394 3333 444109 0) 0 nil]) ((#("s" 0 1 (fontified t font-lock-face font-lock-string-face)) . -1688) (undo-tree-id7369 . -1) (undo-tree-id7370 . -1) (undo-tree-id7371 . -1) 1689 (t 23394 3323 280600 806000)) nil (23394 3333 444116 0) 0 nil]) ((1688 . 1689)) nil (23394 3323 258244 0) 0 nil]) ((#("0" 0 1 (fontified t font-lock-face font-lock-string-face)) . -1688) (undo-tree-id7304 . -1) (undo-tree-id7305 . -1) (undo-tree-id7306 . -1) (undo-tree-id7307 . -1) (undo-tree-id7308 . -1) (undo-tree-id7309 . -1) (undo-tree-id7310 . 1) (undo-tree-id7311 . 1) (undo-tree-id7312 . -1) (undo-tree-id7313 . -1) (undo-tree-id7314 . 1) (undo-tree-id7315 . 1) (undo-tree-id7316 . 1) (undo-tree-id7317 . 1) (undo-tree-id7318 . 1) (undo-tree-id7319 . 1) (undo-tree-id7320 . 1) (undo-tree-id7321 . 1) (undo-tree-id7322 . -1) (undo-tree-id7323 . 1) (undo-tree-id7324 . 1) (undo-tree-id7325 . 1) (undo-tree-id7326 . 1) (undo-tree-id7327 . 1) (undo-tree-id7328 . 1) (undo-tree-id7329 . 1) (undo-tree-id7330 . 1) (undo-tree-id7331 . -1) (undo-tree-id7332 . 1) (undo-tree-id7333 . 1) (undo-tree-id7334 . 1) (undo-tree-id7335 . 1) (undo-tree-id7336 . -1) (undo-tree-id7337 . 1) (undo-tree-id7338 . 1) (undo-tree-id7339 . -1) (undo-tree-id7340 . -1) (undo-tree-id7341 . -1) (undo-tree-id7342 . -1) (undo-tree-id7343 . -1) 1689 (t 23394 3312 983176 118000)) nil (23394 3323 258305 0) 0 nil]) ((1698 . 1701)) nil (23394 3312 961598 0) 0 nil]) ((#("w" 0 1 (fontified t font-lock-face font-lock-string-face)) . -1698) (undo-tree-id7277 . -1) (undo-tree-id7278 . -1) (undo-tree-id7279 . 1) (undo-tree-id7280 . -1) 1699) nil (23394 3312 961614 0) 0 nil]) ((1698 . 1699)) nil (23394 3312 961622 0) 0 nil]) ((#("black" 0 5 (font-lock-face font-lock-string-face fontified t)) . -1698) (undo-tree-id7281 . -5) (undo-tree-id7282 . -5) (undo-tree-id7283 . -5) (undo-tree-id7284 . 5) (undo-tree-id7285 . -1) (undo-tree-id7286 . 4) (undo-tree-id7287 . -2) (undo-tree-id7288 . 3) (undo-tree-id7289 . -3) (undo-tree-id7290 . 2) (undo-tree-id7291 . -4) (undo-tree-id7292 . 1) (undo-tree-id7293 . -5) (undo-tree-id7294 . -5) (undo-tree-id7295 . 1) (undo-tree-id7296 . -4) (undo-tree-id7297 . 1) (undo-tree-id7298 . 1) (undo-tree-id7299 . -4) (undo-tree-id7300 . 1) (undo-tree-id7301 . -5) (undo-tree-id7302 . -5) (undo-tree-id7303 . -5) 1703 (t 23394 3297 239593 933000)) nil (23394 3312 961660 0) 0 nil]) ((912 . 913)) nil (23394 3297 216197 0) 0 nil]) ((#("2" 0 1 (fontified t font-lock-face font-lock-string-face)) . -912) (undo-tree-id7235 . -1) (undo-tree-id7236 . -1) (undo-tree-id7237 . -1) (undo-tree-id7238 . -1) (undo-tree-id7239 . -1) (undo-tree-id7240 . -1) (undo-tree-id7241 . -1) (undo-tree-id7242 . -1) (#("0" 0 1 (fontified t font-lock-face font-lock-string-face)) . -913) (undo-tree-id7243 . -1) (undo-tree-id7244 . -1) (undo-tree-id7245 . -1) (undo-tree-id7246 . -1) (undo-tree-id7247 . -1) (undo-tree-id7248 . -1) (undo-tree-id7249 . -1) (#("0" 0 1 (fontified t font-lock-face font-lock-string-face)) . -914) (undo-tree-id7250 . -1) (undo-tree-id7251 . -1) (undo-tree-id7252 . -1) (undo-tree-id7253 . -1) (undo-tree-id7254 . -1) (undo-tree-id7255 . -1) 915) nil (23394 3297 216243 0) 0 nil]) ((916 . 917)) nil (23394 3297 216248 0) 0 nil]) ((#("3" 0 1 (fontified t font-lock-face font-lock-string-face)) . -916) (undo-tree-id7256 . -1) (undo-tree-id7257 . -1) (undo-tree-id7258 . 1) (undo-tree-id7259 . 1) (undo-tree-id7260 . -1) (undo-tree-id7261 . -1) (undo-tree-id7262 . -1) (undo-tree-id7263 . -1) (undo-tree-id7264 . -1) (#("5" 0 1 (fontified t font-lock-face font-lock-string-face)) . -917) (undo-tree-id7265 . -1) (undo-tree-id7266 . -1) (undo-tree-id7267 . 1) (undo-tree-id7268 . 1) (undo-tree-id7269 . -1) (undo-tree-id7270 . -1) (undo-tree-id7271 . -1) (#("0" 0 1 (fontified t font-lock-face font-lock-string-face)) . -918) (undo-tree-id7272 . -1) (undo-tree-id7273 . -1) (undo-tree-id7274 . 1) (undo-tree-id7275 . 1) (undo-tree-id7276 . -1) 919 (t 23394 3280 728514 639000)) nil (23394 3297 216276 0) 0 nil]) ((1702 . 1707)) nil (23394 3280 704838 0) 0 nil]) ((#("non" 0 3 (font-lock-face font-lock-string-face fontified t)) . -1702) (undo-tree-id7229 . -3) (undo-tree-id7230 . -3) (undo-tree-id7231 . -3) (undo-tree-id7232 . -3) (undo-tree-id7233 . -3) (undo-tree-id7234 . -3) 1705 (t 23394 3274 249573 281000)) nil (23394 3280 704863 0) 0 nil]) ((1034 . 1037)) nil (23394 3274 225101 0) 0 nil]) ((#("d" 0 1 (fontified t font-lock-face font-lock-string-face)) . -1034) (undo-tree-id7183 . -1) (undo-tree-id7184 . -1) (undo-tree-id7185 . 1) (undo-tree-id7186 . -1) (undo-tree-id7187 . -1) (undo-tree-id7188 . -1) (undo-tree-id7189 . -1) (undo-tree-id7190 . -1) (undo-tree-id7191 . -1) (undo-tree-id7192 . -1) (#("f" 0 1 (fontified t font-lock-face font-lock-string-face)) . -1035) (undo-tree-id7193 . -1) (undo-tree-id7194 . -1) (undo-tree-id7195 . 1) (undo-tree-id7196 . -1) 1036) nil (23394 3274 225141 0) 0 nil]) ((1035 . 1036)) nil (23394 3274 225145 0) 0 nil]) ((#("d" 0 1 (fontified t font-lock-face font-lock-string-face)) . -1035) (undo-tree-id7197 . -1) (undo-tree-id7198 . -1) (undo-tree-id7199 . 1) (undo-tree-id7200 . -1) (undo-tree-id7201 . -1) (undo-tree-id7202 . -1) (#("d" 0 1 (fontified t font-lock-face font-lock-string-face)) . -1036) (undo-tree-id7203 . -1) (undo-tree-id7204 . -1) (undo-tree-id7205 . 1) (undo-tree-id7206 . -1) 1037) nil (23394 3274 225158 0) 0 nil]) ((1034 . 1037)) nil (23394 3274 225161 0) 0 nil]) ((#("000" 0 3 (fontified t font-lock-face font-lock-string-face)) . -1034) (undo-tree-id7207 . -3) (undo-tree-id7208 . -1) (undo-tree-id7209 . -3) (undo-tree-id7210 . 3) (undo-tree-id7211 . -1) (undo-tree-id7212 . 2) (undo-tree-id7213 . -2) (undo-tree-id7214 . 1) (undo-tree-id7215 . -3) (undo-tree-id7216 . -3) (undo-tree-id7217 . 2) (undo-tree-id7218 . -1) (undo-tree-id7219 . -1) (undo-tree-id7220 . 2) (undo-tree-id7221 . 2) (undo-tree-id7222 . -1) (undo-tree-id7223 . 1) (undo-tree-id7224 . 2) (undo-tree-id7225 . -2) (undo-tree-id7226 . 1) (undo-tree-id7227 . -3) (undo-tree-id7228 . -3) 1037 (t 23394 3266 352731 275000)) nil (23394 3274 225190 0) 0 nil]) ((1034 . 1037)) nil (23394 3266 329193 0) 0 nil]) ((#("0" 0 1 (fontified t font-lock-face font-lock-string-face)) . -1034) (undo-tree-id7143 . -1) (undo-tree-id7144 . -1) (undo-tree-id7145 . 1) (undo-tree-id7146 . -1) (undo-tree-id7147 . -1) (undo-tree-id7148 . -1) (undo-tree-id7149 . -1) (undo-tree-id7150 . -1) (#("9" 0 1 (fontified t font-lock-face font-lock-string-face)) . -1035) (undo-tree-id7151 . -1) (undo-tree-id7152 . -1) (undo-tree-id7153 . 1) (undo-tree-id7154 . -1) 1036) nil (23394 3266 329222 0) 0 nil]) ((1035 . 1036)) nil (23394 3266 329226 0) 0 nil]) ((#("0" 0 1 (fontified t font-lock-face font-lock-string-face)) . -1035) (undo-tree-id7155 . -1) (undo-tree-id7156 . -1) (undo-tree-id7157 . 1) (undo-tree-id7158 . -1) 1036) nil (23394 3266 329252 0) 0 nil]) ((1034 . 1036)) nil (23394 3266 329254 0) 0 nil]) ((#("3" 0 1 (fontified t font-lock-face font-lock-string-face)) . -1034) (undo-tree-id7159 . -1) (undo-tree-id7160 . -1) (undo-tree-id7161 . -1) (undo-tree-id7162 . 1) (undo-tree-id7163 . -1) (undo-tree-id7164 . -1) (undo-tree-id7165 . -1) (undo-tree-id7166 . -1) (undo-tree-id7167 . -1) (undo-tree-id7168 . -1) (#("3" 0 1 (fontified t font-lock-face font-lock-string-face)) . -1035) (undo-tree-id7169 . -1) (undo-tree-id7170 . -1) (undo-tree-id7171 . -1) (undo-tree-id7172 . 1) (undo-tree-id7173 . -1) (undo-tree-id7174 . -1) (undo-tree-id7175 . -1) (undo-tree-id7176 . -1) (#("3" 0 1 (fontified t font-lock-face font-lock-string-face)) . -1036) (undo-tree-id7177 . -1) (undo-tree-id7178 . -1) (undo-tree-id7179 . -1) (undo-tree-id7180 . 1) (undo-tree-id7181 . -1) (undo-tree-id7182 . -1) 1037 (t 23394 3258 341302 345000)) nil (23394 3266 329285 0) 0 nil]) ((1034 . 1037)) nil (23394 3258 320638 0) 0 nil]) ((#("f" 0 1 (fontified t font-lock-face font-lock-string-face)) . -1034) (undo-tree-id7119 . -1) (undo-tree-id7120 . -1) (undo-tree-id7121 . -1) (undo-tree-id7122 . -1) (undo-tree-id7123 . -1) (undo-tree-id7124 . -1) (undo-tree-id7125 . -1) (undo-tree-id7126 . -1) (undo-tree-id7127 . -1) (#("f" 0 1 (fontified t font-lock-face font-lock-string-face)) . -1035) (undo-tree-id7128 . -1) (undo-tree-id7129 . -1) (undo-tree-id7130 . -1) (undo-tree-id7131 . -1) (undo-tree-id7132 . -1) (undo-tree-id7133 . -1) (undo-tree-id7134 . -1) (undo-tree-id7135 . -1) (#("f" 0 1 (fontified t font-lock-face font-lock-string-face)) . -1036) (undo-tree-id7136 . -1) (undo-tree-id7137 . -1) (undo-tree-id7138 . 1) (undo-tree-id7139 . 1) (undo-tree-id7140 . 1) (undo-tree-id7141 . 1) (undo-tree-id7142 . -1) 1037 (t 23394 3210 64404 502000)) nil (23394 3258 320690 0) 0 nil]) ((#(";" 0 1 (fontified t help-echo "syntax error" cursor-sensor-functions #1#)) . -1727) (undo-tree-id7103 . -1) (undo-tree-id7104 . -1) (undo-tree-id7105 . -1) (undo-tree-id7106 . 1) (undo-tree-id7107 . -1) (undo-tree-id7108 . -1) (undo-tree-id7109 . -1) (undo-tree-id7110 . -1) 1728) nil (23394 3210 44455 0) 0 nil]) ((1727 . 1728)) nil (23394 3210 44461 0) 0 nil]) ((#(";" 0 1 (fontified t help-echo "syntax error" cursor-sensor-functions #1#)) . -1727) (undo-tree-id7111 . -1) (undo-tree-id7112 . -1) (undo-tree-id7113 . -1) (undo-tree-id7114 . 1) (undo-tree-id7115 . -1) (undo-tree-id7116 . -1) (undo-tree-id7117 . -1) (undo-tree-id7118 . -1) 1728 (t 23394 3151 506770 873000)) nil (23394 3210 44474 0) 0 nil]) ((#("l" 0 1 (fontified t help-echo "syntax error" cursor-sensor-functions #1#)) . -1728) (undo-tree-id7098 . -1) (undo-tree-id7099 . -1) (undo-tree-id7100 . -1) (undo-tree-id7101 . 1) (undo-tree-id7102 . -1) 1729) nil (23394 3151 485249 0) 0 nil]) ((1727 . 1729) (t 23394 3149 88847 984000)) nil (23394 3151 485256 0) 0 nil]) ((#(";" 0 1 (fontified t help-echo "syntax error" cursor-sensor-functions #1#)) . -1727) (undo-tree-id7092 . -1) (undo-tree-id7093 . -1) (undo-tree-id7094 . -1) (undo-tree-id7095 . 1) (undo-tree-id7096 . -1) (undo-tree-id7097 . -1) 1728 (t 23394 3147 80562 856000)) nil (23394 3149 68432 0) 0 nil]) ((1727 . 1728)) nil (23394 3147 59729 0) 0 nil]) ((#("
" 0 1 (fontified t)) . -1726) (undo-tree-id6912 . -1) (undo-tree-id6913 . -1) (undo-tree-id6914 . -1) (undo-tree-id6915 . -1) (undo-tree-id6916 . -1) (undo-tree-id6917 . -1) (undo-tree-id6918 . -1) (undo-tree-id6919 . -1) (undo-tree-id6920 . -1) (undo-tree-id6921 . -1) (undo-tree-id6922 . -1) (undo-tree-id6923 . -1) (undo-tree-id6924 . -1) (undo-tree-id6925 . -1) (undo-tree-id6926 . -1) (undo-tree-id6927 . 1) (undo-tree-id6928 . 1) (undo-tree-id6929 . -1) (undo-tree-id6930 . -1) (undo-tree-id6931 . -1) (undo-tree-id6932 . -1) (undo-tree-id6933 . -1) (undo-tree-id6934 . -1) (undo-tree-id6935 . -1) (undo-tree-id6936 . -1) (undo-tree-id6937 . -1) (undo-tree-id6938 . -1) (undo-tree-id6939 . -1) (undo-tree-id6940 . -1) (undo-tree-id6941 . -1) (undo-tree-id6942 . -1) (undo-tree-id6943 . -1) (undo-tree-id6944 . -1) (undo-tree-id6945 . -1) (undo-tree-id6946 . -1) (undo-tree-id6947 . -1) (undo-tree-id6948 . -1) (undo-tree-id6949 . -1) (undo-tree-id6950 . -1) (undo-tree-id6951 . -1) (undo-tree-id6952 . -1) (undo-tree-id6953 . -1) (undo-tree-id6954 . 1) (undo-tree-id6955 . 1) (undo-tree-id6956 . 1) (undo-tree-id6957 . 1) (undo-tree-id6958 . -1) (undo-tree-id6959 . -1) (undo-tree-id6960 . -1) (undo-tree-id6961 . -1) (undo-tree-id6962 . 1) (undo-tree-id6963 . 1) (undo-tree-id6964 . 1) (undo-tree-id6965 . 1) (undo-tree-id6966 . 1) (undo-tree-id6967 . 1) (undo-tree-id6968 . -1) (undo-tree-id6969 . -1) (undo-tree-id6970 . -1) (#(" " 0 1 (fontified t)) . -1727) (undo-tree-id6971 . -1) (undo-tree-id6972 . -1) (undo-tree-id6973 . -1) (undo-tree-id6974 . -1) (undo-tree-id6975 . -1) (undo-tree-id6976 . -1) (undo-tree-id6977 . -1) (undo-tree-id6978 . -1) (undo-tree-id6979 . -1) (undo-tree-id6980 . -1) (undo-tree-id6981 . 1) (undo-tree-id6982 . -1) (undo-tree-id6983 . -1) (undo-tree-id6984 . -1) (undo-tree-id6985 . -1) (undo-tree-id6986 . -1) (undo-tree-id6987 . 1) (undo-tree-id6988 . 1) (undo-tree-id6989 . -1) (undo-tree-id6990 . -1) 1728) nil (23394 3147 59827 0) 0 nil]) ((#("                                           " 0 43 (fontified t)) . -1728) (undo-tree-id6991 . -14) (undo-tree-id6992 . -43) (undo-tree-id6993 . -43) (undo-tree-id6994 . -43) (undo-tree-id6995 . -43) (undo-tree-id6996 . -43) (undo-tree-id6997 . -43) (undo-tree-id6998 . -43) (undo-tree-id6999 . -14) (undo-tree-id7000 . -43) (undo-tree-id7001 . -43) (undo-tree-id7002 . 29) (undo-tree-id7003 . -14) (undo-tree-id7004 . 29) (undo-tree-id7005 . -43) (undo-tree-id7006 . -43) (undo-tree-id7007 . 29) (undo-tree-id7008 . -14) 1742) nil (23394 3147 59861 0) 0 nil]) ((#("  " 0 2 (fontified t)) . -1604) (undo-tree-id7009 . 2) (undo-tree-id7010 . 2)) nil (23394 3147 59866 0) 0 nil]) ((#("  " 0 2 (fontified t)) . -1668) 1636) nil (23394 3147 59867 0) 0 nil]) ((#(")" 0 1 (fontified nil)) . -1775) (1775 . 1776) (#(")" 0 1 (fontified nil)) . -1775) (1775 . 1776)) nil (23394 3147 59870 0) 0 nil]) ((#("}" 0 1 (help-echo "missing ) after argument list" cursor-sensor-functions #1# fontified t face (rainbow-delimiters-mismatched-face))) . -1775) (undo-tree-id7011 . -1) (undo-tree-id7012 . 1) (undo-tree-id7013 . 1) (undo-tree-id7014 . 1) (undo-tree-id7015 . 1) (undo-tree-id7016 . -1) (undo-tree-id7017 . 1) (undo-tree-id7018 . 1) (undo-tree-id7019 . 1) (undo-tree-id7020 . 1) (undo-tree-id7021 . 1) (undo-tree-id7022 . 1) (undo-tree-id7023 . -1) (undo-tree-id7024 . 1) (undo-tree-id7025 . 1) (undo-tree-id7026 . 1) (undo-tree-id7027 . 1) (undo-tree-id7028 . 1) (undo-tree-id7029 . 1) (undo-tree-id7030 . -1) (undo-tree-id7031 . 1) (undo-tree-id7032 . 1) (undo-tree-id7033 . 1) (undo-tree-id7034 . 1) (undo-tree-id7035 . 1) (undo-tree-id7036 . 1) (undo-tree-id7037 . 1) (undo-tree-id7038 . 1) (undo-tree-id7039 . -1) (undo-tree-id7040 . -1) (undo-tree-id7041 . -1) (undo-tree-id7042 . -1) (undo-tree-id7043 . -1) (undo-tree-id7044 . 1) (undo-tree-id7045 . 1) (undo-tree-id7046 . 1) (undo-tree-id7047 . 1) (undo-tree-id7048 . 1) (undo-tree-id7049 . 1) (undo-tree-id7050 . 1) (undo-tree-id7051 . 1) (undo-tree-id7052 . 1) (undo-tree-id7053 . 1) (undo-tree-id7054 . 1) (undo-tree-id7055 . 1) (undo-tree-id7056 . 1) (undo-tree-id7057 . 1) (undo-tree-id7058 . 1) (undo-tree-id7059 . 1) (undo-tree-id7060 . 1) (undo-tree-id7061 . 1) (undo-tree-id7062 . 1) (undo-tree-id7063 . 1) (undo-tree-id7064 . 1) (undo-tree-id7065 . 1) (undo-tree-id7066 . 1) (undo-tree-id7067 . 1) (undo-tree-id7068 . 1) (undo-tree-id7069 . 1) (undo-tree-id7070 . 1) (undo-tree-id7071 . 1) (undo-tree-id7072 . 1) (undo-tree-id7073 . 1) (undo-tree-id7074 . 1) (undo-tree-id7075 . 1) (undo-tree-id7076 . 1) (undo-tree-id7077 . 1) (undo-tree-id7078 . 1) (undo-tree-id7079 . 1) (undo-tree-id7080 . 1) (undo-tree-id7081 . 1) (undo-tree-id7082 . -1) (undo-tree-id7083 . -1) (undo-tree-id7084 . 1) (undo-tree-id7085 . -1) (undo-tree-id7086 . -1) 1776) nil (23394 3147 59950 0) 0 nil]) ((#("  " 0 2 (fontified t)) . -1729) (undo-tree-id7087 . -2) (undo-tree-id7088 . -2) (undo-tree-id7089 . -2) (undo-tree-id7090 . -2) (undo-tree-id7091 . -2) 1732 (t 23394 3127 612467 335000)) nil (23394 3147 59961 0) 0 nil]) ((1733 . 1777) (#("              " 0 5 (fontified t) 5 14 (fontified t)) . 1733) (undo-tree-id6706 . 14) (undo-tree-id6707 . 14) (undo-tree-id6708 . 1) (undo-tree-id6709 . -13) (undo-tree-id6710 . 1) (undo-tree-id6711 . 14) (undo-tree-id6712 . 14) (undo-tree-id6713 . 14) (undo-tree-id6714 . 14) (undo-tree-id6715 . 14) (undo-tree-id6716 . 14) (undo-tree-id6717 . 1) (undo-tree-id6718 . -13) (undo-tree-id6719 . 1) (undo-tree-id6720 . 1) (undo-tree-id6721 . -13) (undo-tree-id6722 . 1) (undo-tree-id6723 . -14) (undo-tree-id6724 . 14) (undo-tree-id6725 . 14) (undo-tree-id6726 . 14) (undo-tree-id6727 . 14) (undo-tree-id6728 . 14) (undo-tree-id6729 . 14) (undo-tree-id6730 . 14) (undo-tree-id6731 . 14) (undo-tree-id6732 . 14) (undo-tree-id6733 . 14) (undo-tree-id6734 . 14) (undo-tree-id6735 . 14) (undo-tree-id6736 . 14) (undo-tree-id6737 . 14) (undo-tree-id6738 . 14) (undo-tree-id6739 . 14) (undo-tree-id6740 . 14) (undo-tree-id6741 . 14) (undo-tree-id6742 . 14) (undo-tree-id6743 . 14) (undo-tree-id6744 . 14) (undo-tree-id6745 . 14) (undo-tree-id6746 . 14) (undo-tree-id6747 . 14) (undo-tree-id6748 . 14) (undo-tree-id6749 . 14) (undo-tree-id6750 . 14) (undo-tree-id6751 . 14) (undo-tree-id6752 . 14) (undo-tree-id6753 . 14) (undo-tree-id6754 . 14) (undo-tree-id6755 . 14) (undo-tree-id6756 . 14) (undo-tree-id6757 . 14) (undo-tree-id6758 . 14) (undo-tree-id6759 . -5) (undo-tree-id6760 . -5) (undo-tree-id6761 . -5) (undo-tree-id6762 . -5) (undo-tree-id6763 . 14) (undo-tree-id6764 . 14) (undo-tree-id6765 . 14) (undo-tree-id6766 . 14) (undo-tree-id6767 . 14) (undo-tree-id6768 . -14) (undo-tree-id6769 . 14) (undo-tree-id6770 . 14)) nil (23394 3127 590195 0) 0 nil]) ((#("
" 0 1 (fontified t)) . 1733) (undo-tree-id6771 . -1) (undo-tree-id6772 . 1) (undo-tree-id6773 . 1) (undo-tree-id6774 . 1) (undo-tree-id6775 . 1) (undo-tree-id6776 . 1) (undo-tree-id6777 . 1) (undo-tree-id6778 . 1) (undo-tree-id6779 . 1) (undo-tree-id6780 . 1) (undo-tree-id6781 . 1) (undo-tree-id6782 . 1) (undo-tree-id6783 . 1) (undo-tree-id6784 . 1) (undo-tree-id6785 . 1) (undo-tree-id6786 . 1) (undo-tree-id6787 . 1) (undo-tree-id6788 . 1) (undo-tree-id6789 . 1) (undo-tree-id6790 . 1) (undo-tree-id6791 . 1) (undo-tree-id6792 . 1) (undo-tree-id6793 . 1) (undo-tree-id6794 . 1) (undo-tree-id6795 . 1) (undo-tree-id6796 . 1) (undo-tree-id6797 . 1) (undo-tree-id6798 . 1) (undo-tree-id6799 . 1) (undo-tree-id6800 . 1) (undo-tree-id6801 . 1) (undo-tree-id6802 . 1) (undo-tree-id6803 . 1) (undo-tree-id6804 . 1) (undo-tree-id6805 . 1) (undo-tree-id6806 . 1) (undo-tree-id6807 . 1) (undo-tree-id6808 . 1) (undo-tree-id6809 . 1) (undo-tree-id6810 . 1) (undo-tree-id6811 . 1) (undo-tree-id6812 . 1) (undo-tree-id6813 . -1) (undo-tree-id6814 . -1) (undo-tree-id6815 . -1) (undo-tree-id6816 . -1) (undo-tree-id6817 . 1) (undo-tree-id6818 . 1) (undo-tree-id6819 . 1) (undo-tree-id6820 . 1) (undo-tree-id6821 . 1) (undo-tree-id6822 . -1)) nil (23394 3127 590260 0) 0 nil]) ((#("                reu" 0 16 (fontified t help-echo "syntax error" cursor-sensor-functions #1#) 16 19 (fontified t help-echo "missing ) after argument list" cursor-sensor-functions #1#)) . 1733) (undo-tree-id6823 . -16) (undo-tree-id6824 . 3) (undo-tree-id6825 . -17) (undo-tree-id6826 . 2) (undo-tree-id6827 . -18) (undo-tree-id6828 . 1) (undo-tree-id6829 . -19) (undo-tree-id6830 . -19) (undo-tree-id6831 . -19) (undo-tree-id6832 . -19) (undo-tree-id6833 . -19) (undo-tree-id6834 . -19) (undo-tree-id6835 . -19) (undo-tree-id6836 . 19) (undo-tree-id6837 . 19) (undo-tree-id6838 . -16) (undo-tree-id6839 . -19) (undo-tree-id6840 . 3) (undo-tree-id6841 . -16) (undo-tree-id6842 . 19) (undo-tree-id6843 . 3) (undo-tree-id6844 . -19)) nil (23394 3127 590292 0) 0 nil]) ((#("                " 0 16 (fontified t help-echo "missing `}' after expression" cursor-sensor-functions #1#)) . -1509) (undo-tree-id6845 . 1) (undo-tree-id6846 . -15) (undo-tree-id6847 . 1) (undo-tree-id6848 . 2) (undo-tree-id6849 . -14) (undo-tree-id6850 . 2) (undo-tree-id6851 . 2) (undo-tree-id6852 . -14) (undo-tree-id6853 . 2) (undo-tree-id6854 . 1) (undo-tree-id6855 . -15) (undo-tree-id6856 . 1) (undo-tree-id6857 . 1) (undo-tree-id6858 . -15) (undo-tree-id6859 . 1) 1507) nil (23394 3127 590312 0) 0 nil]) ((#("
" 0 1 (fontified t help-echo "missing `}' after expression" cursor-sensor-functions #1#)) . 1507) (undo-tree-id6860 . -1) (undo-tree-id6861 . -1) (undo-tree-id6862 . -1) (undo-tree-id6863 . -1) (undo-tree-id6864 . -1) (undo-tree-id6865 . -1) (undo-tree-id6866 . -1) (undo-tree-id6867 . -1) (undo-tree-id6868 . -1) (undo-tree-id6869 . -1) (undo-tree-id6870 . -1) (undo-tree-id6871 . -1) (undo-tree-id6872 . -1) (undo-tree-id6873 . 1) (undo-tree-id6874 . 1) (undo-tree-id6875 . -1) (undo-tree-id6876 . 1) (undo-tree-id6877 . 1) (undo-tree-id6878 . 1) (undo-tree-id6879 . 1) (undo-tree-id6880 . 1) (undo-tree-id6881 . 1) (undo-tree-id6882 . 1) (undo-tree-id6883 . 1) (undo-tree-id6884 . 1) (undo-tree-id6885 . 1) (undo-tree-id6886 . 1) (undo-tree-id6887 . 1) (undo-tree-id6888 . -1) (undo-tree-id6889 . 1) (undo-tree-id6890 . 1) (undo-tree-id6891 . 1) (undo-tree-id6892 . -1)) nil (23394 3127 590353 0) 0 nil]) ((#("  if(number>0){" 0 2 (fontified t) 2 4 (font-lock-face font-lock-keyword-face fontified t) 4 5 (fontified t face (rainbow-delimiters-depth-7-face)) 5 11 (fontified t) 11 12 (fontified t) 12 13 (fontified t) 13 14 (fontified t face (rainbow-delimiters-depth-7-face)) 14 15 (fontified t face (rainbow-delimiters-depth-7-face))) . 1507) (undo-tree-id6893 . 12) (undo-tree-id6894 . -3) (undo-tree-id6895 . 12) (undo-tree-id6896 . -15) (undo-tree-id6897 . 1) (undo-tree-id6898 . -14) (undo-tree-id6899 . 1) (undo-tree-id6900 . -15) (undo-tree-id6901 . 1) (undo-tree-id6902 . -14) (undo-tree-id6903 . 1) (undo-tree-id6904 . 13) (undo-tree-id6905 . -2) (undo-tree-id6906 . 13) (undo-tree-id6907 . 12) (undo-tree-id6908 . -3) (undo-tree-id6909 . 12) (undo-tree-id6910 . 15) (undo-tree-id6911 . -15) (t 23394 3074 243806 352000)) nil (23394 3127 590379 0) 0 nil]) ((770 . 771)) nil (23394 3074 223377 0) 0 nil]) ((#("i" 0 1 (fontified t help-echo "Undeclared variable or function 'i'" cursor-sensor-functions #1#)) . -770) (undo-tree-id6536 . -1) (undo-tree-id6537 . -1) (undo-tree-id6538 . -1) (undo-tree-id6539 . 1) (undo-tree-id6540 . 1) (undo-tree-id6541 . -1) (undo-tree-id6542 . 1) (undo-tree-id6543 . 1) (undo-tree-id6544 . -1) 771) nil (23394 3074 223404 0) 0 nil]) ((763 . 764)) nil (23394 3074 223408 0) 0 nil]) ((#("6" 0 1 (fontified t)) . -763) (undo-tree-id6545 . -1) (undo-tree-id6546 . -1) (undo-tree-id6547 . 1) (undo-tree-id6548 . -1) (undo-tree-id6549 . 1) (undo-tree-id6550 . -1) 764) nil (23394 3074 223427 0) 0 nil]) ((586 . 587)) nil (23394 3074 223432 0) 0 nil]) ((#("6" 0 1 (fontified t)) . -586) (undo-tree-id6551 . -1) (undo-tree-id6552 . 1) (undo-tree-id6553 . 1) (undo-tree-id6554 . 1) (undo-tree-id6555 . 1) (undo-tree-id6556 . 1) (undo-tree-id6557 . 1) (undo-tree-id6558 . -1) (undo-tree-id6559 . -1) 587) nil (23394 3074 223446 0) 0 nil]) ((#("
" 0 1 (fontified t)) . 695) (undo-tree-id6560 . 1) (undo-tree-id6561 . 1) (undo-tree-id6562 . 1) (undo-tree-id6563 . 1) (undo-tree-id6564 . 1) (undo-tree-id6565 . 1) (undo-tree-id6566 . 1) (undo-tree-id6567 . 1) (undo-tree-id6568 . 1) (undo-tree-id6569 . 1) (undo-tree-id6570 . 1) (undo-tree-id6571 . 1) (undo-tree-id6572 . 1) (undo-tree-id6573 . 1) (undo-tree-id6574 . 1) (undo-tree-id6575 . 1) (undo-tree-id6576 . 1) (undo-tree-id6577 . -1)) nil (23394 3074 223472 0) 0 nil]) ((#("      const i = 0;" 0 6 (fontified t) 6 7 (fontified t font-lock-face font-lock-keyword-face) 7 11 (fontified t font-lock-face font-lock-keyword-face) 11 12 (fontified t) 12 13 (fontified t font-lock-face font-lock-variable-name-face) 13 17 (fontified t) 17 18 (fontified t)) . 695) (undo-tree-id6578 . -17) (undo-tree-id6579 . -18) (undo-tree-id6580 . -18) (undo-tree-id6581 . 1) (undo-tree-id6582 . -16) (undo-tree-id6583 . 1) (undo-tree-id6584 . 1) (undo-tree-id6585 . -16) (undo-tree-id6586 . 1) (undo-tree-id6587 . 1) (undo-tree-id6588 . -16) (undo-tree-id6589 . 1) (undo-tree-id6590 . 1) (undo-tree-id6591 . -16) (undo-tree-id6592 . 1) (undo-tree-id6593 . 2) (undo-tree-id6594 . -17) (undo-tree-id6595 . 18) (undo-tree-id6596 . 1) (undo-tree-id6597 . -18)) nil (23394 3074 223501 0) 0 nil]) ((711 . 712)) nil (23394 3074 223504 0) 0 nil]) ((#("6" 0 1 (fontified t)) . -711) (undo-tree-id6598 . -1) (undo-tree-id6599 . -1) (undo-tree-id6600 . -1) (undo-tree-id6601 . -1) (undo-tree-id6602 . -1) (#("-" 0 1 (fontified t help-echo "missing ; after statement" cursor-sensor-functions #1#)) . -712) (undo-tree-id6603 . -1) (undo-tree-id6604 . -1) (undo-tree-id6605 . -1) (undo-tree-id6606 . -1) (undo-tree-id6607 . -1) (#("s" 0 1 (fontified t)) . -713) (undo-tree-id6608 . -1) (undo-tree-id6609 . -1) (undo-tree-id6610 . -1) (undo-tree-id6611 . -1) 714) nil (23394 3074 223526 0) 0 nil]) ((666 . 669)) nil (23394 3074 223529 0) 0 nil]) ((#("s" 0 1 (fontified t)) . -666) (undo-tree-id6612 . -1) (undo-tree-id6613 . -1) (undo-tree-id6614 . 1) (undo-tree-id6615 . -1) (undo-tree-id6616 . -1) (undo-tree-id6617 . -1) (#("=" 0 1 (fontified t)) . -667) (undo-tree-id6618 . -1) (undo-tree-id6619 . -1) (undo-tree-id6620 . -1) (undo-tree-id6621 . 1) (undo-tree-id6622 . -1) 668) nil (23394 3074 223547 0) 0 nil]) ((666 . 668)) nil (23394 3074 223549 0) 0 nil]) ((#("-" 0 1 (fontified t)) . -666) (undo-tree-id6623 . -1) (undo-tree-id6624 . -1) (undo-tree-id6625 . -1) (undo-tree-id6626 . -1) (undo-tree-id6627 . -1) (undo-tree-id6628 . -1) (#("-" 0 1 (fontified t)) . -667) (undo-tree-id6629 . -1) (undo-tree-id6630 . -1) (undo-tree-id6631 . -1) (undo-tree-id6632 . -1) (undo-tree-id6633 . -1) (undo-tree-id6634 . -1) (#("s" 0 1 (fontified t)) . -668) (undo-tree-id6635 . -1) (undo-tree-id6636 . -1) (undo-tree-id6637 . -1) 669) nil (23394 3074 223571 0) 0 nil]) ((663 . 664)) nil (23394 3074 223574 0) 0 nil]) ((662 . 663)) nil (23394 3074 223576 0) 0 nil]) ((661 . 662)) nil (23394 3074 223577 0) 0 nil]) ((#("0" 0 1 (fontified t)) . -661) (undo-tree-id6638 . -1) (undo-tree-id6639 . -1) (undo-tree-id6640 . 1) (undo-tree-id6641 . 1) (undo-tree-id6642 . 1) (undo-tree-id6643 . 1) (undo-tree-id6644 . 1) (undo-tree-id6645 . 1) (undo-tree-id6646 . 1) (undo-tree-id6647 . 1) (undo-tree-id6648 . 1) (undo-tree-id6649 . 1) (undo-tree-id6650 . 1) (undo-tree-id6651 . 1) (undo-tree-id6652 . 1) (undo-tree-id6653 . 1) (undo-tree-id6654 . -1) 662) nil (23394 3074 223601 0) 0 nil]) ((#("s" 0 1 (fontified t help-echo "Undeclared variable or function 's0'" cursor-sensor-functions #1#)) . -661) (undo-tree-id6655 . -1) (undo-tree-id6656 . -1) (undo-tree-id6657 . -1) (undo-tree-id6658 . -1) (undo-tree-id6659 . 1) (undo-tree-id6660 . 1) (undo-tree-id6661 . -1) (undo-tree-id6662 . -1) (undo-tree-id6663 . -1) (#(">" 0 1 (fontified t)) . -662) (undo-tree-id6664 . -1) (undo-tree-id6665 . -1) (undo-tree-id6666 . -1) (undo-tree-id6667 . -1) (undo-tree-id6668 . 1) (undo-tree-id6669 . 1) (undo-tree-id6670 . -1) (undo-tree-id6671 . -1) 663) nil (23394 3074 223630 0) 0 nil]) ((658 . 659)) nil (23394 3074 223633 0) 0 nil]) ((#("5" 0 1 (fontified t)) . -658) (undo-tree-id6672 . -1) (undo-tree-id6673 . -1) (undo-tree-id6674 . -1) (undo-tree-id6675 . -1) (undo-tree-id6676 . -1) (undo-tree-id6677 . -1) (undo-tree-id6678 . -1) 659) nil (23394 3074 223644 0) 0 nil]) ((#("t" 0 1 (fontified t help-echo "missing ; after statement" cursor-sensor-functions #1#)) . -1805) (undo-tree-id6679 . -1) (undo-tree-id6680 . -1) (undo-tree-id6681 . 1) (undo-tree-id6682 . -1) (undo-tree-id6683 . -1) (undo-tree-id6684 . -1) (undo-tree-id6685 . -1) (undo-tree-id6686 . -1) (undo-tree-id6687 . -1) (undo-tree-id6688 . -1) (undo-tree-id6689 . -1) (#("n" 0 1 (fontified t help-echo "missing ; after statement" cursor-sensor-functions #1#)) . -1806) (undo-tree-id6690 . -1) (undo-tree-id6691 . -1) (undo-tree-id6692 . 1) (undo-tree-id6693 . -1) (undo-tree-id6694 . -1) (undo-tree-id6695 . -1) (undo-tree-id6696 . -1) (undo-tree-id6697 . -1) (undo-tree-id6698 . -1) (#("r" 0 1 (fontified t help-echo "missing ; after statement" cursor-sensor-functions #1#)) . -1807) (undo-tree-id6699 . -1) (undo-tree-id6700 . -1) (undo-tree-id6701 . -1) (undo-tree-id6702 . -1) (undo-tree-id6703 . -1) (undo-tree-id6704 . 1) (undo-tree-id6705 . -1) 1808) nil (23394 3074 223682 0) 0 nil]) ((1802 . 1808)) nil (23394 3074 223687 0) 0 nil]) ((1785 . 1802) (t 23394 2947 28148 698000)) nil (23394 3074 223689 0) 0 nil] [nil ([nil ([nil nil ((1802 . 1803)) ((#(";" 0 1 (fontified t help-echo "syntax error" cursor-sensor-functions #1#)) . 1802) (undo-tree-id6147 . 1) (undo-tree-id6148 . -1) (undo-tree-id6149 . -1) (undo-tree-id6150 . 1) (undo-tree-id6151 . 1) (undo-tree-id6152 . 1) (undo-tree-id6153 . 1) (undo-tree-id6154 . -1) (undo-tree-id6155 . 1) (undo-tree-id6156 . 1) (undo-tree-id6157 . 1) (undo-tree-id6158 . 1) (undo-tree-id6159 . -1) (undo-tree-id6160 . 1) (undo-tree-id6161 . 1) (undo-tree-id6162 . -1) (undo-tree-id6163 . -1) (undo-tree-id6164 . 1) (undo-tree-id6165 . 1) (undo-tree-id6166 . 1) (undo-tree-id6167 . 1) (t 23394 2848 893926 46000)) (23394 2848 878273 0) 0 nil]) ((#(";" 0 1 (fontified t help-echo #30="syntax error" cursor-sensor-functions #1#)) . -1802) (undo-tree-id6141 . -1) (undo-tree-id6142 . -1) (undo-tree-id6143 . -1) (undo-tree-id6144 . 1) (undo-tree-id6145 . -1) (undo-tree-id6146 . -1) 1803 (t 23394 2836 264803 848000)) ((1802 . 1803)) (23394 2923 346174 0) 0 nil]) ((1802 . 1803)) ((#(";" 0 1 (fontified t help-echo #30# cursor-sensor-functions #1#)) . 1802) (undo-tree-id6168 . -1) (undo-tree-id6169 . -1) (undo-tree-id6170 . -1) (undo-tree-id6171 . 1)) (23394 2923 649398 0) 0 nil] [nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil nil ((#("6] = {" 0 1 (fontified t) 1 2 (fontified t face (rainbow-delimiters-depth-3-face)) 2 5 (fontified t) 5 6 (fontified t face (rainbow-delimiters-depth-3-face))) . 572) (undo-tree-id6032 . 6) (undo-tree-id6033 . -6) (undo-tree-id6034 . -6)) ((572 . 578)) (23394 2813 605564 0) 0 nil] [nil ([nil nil ((#("string[" 0 6 (fontified t) 6 7 (fontified t face (rainbow-delimiters-depth-3-face))) . 565) (undo-tree-id6048 . -7) (undo-tree-id6049 . -7) (undo-tree-id6050 . -7) (undo-tree-id6051 . 7) (undo-tree-id6052 . -7) (undo-tree-id6053 . -7) (undo-tree-id6054 . -7) (undo-tree-id6055 . -7) (undo-tree-id6056 . -7) (undo-tree-id6057 . 5) (undo-tree-id6058 . -2) (undo-tree-id6059 . 5) (undo-tree-id6060 . 7) (undo-tree-id6061 . 7) (undo-tree-id6062 . 7) (undo-tree-id6063 . 7) (undo-tree-id6064 . 7) (undo-tree-id6065 . 7) (undo-tree-id6066 . 7) (undo-tree-id6067 . 7) (undo-tree-id6068 . 7) (undo-tree-id6069 . 7) (undo-tree-id6070 . 7) (undo-tree-id6071 . 7) (undo-tree-id6072 . 7) (undo-tree-id6073 . 7) (undo-tree-id6074 . 7) (undo-tree-id6075 . 7) (undo-tree-id6076 . 7) (undo-tree-id6077 . 7) (undo-tree-id6078 . 7) (undo-tree-id6079 . 7) (undo-tree-id6080 . 7)) ((565 . 572)) (23394 2817 101596 0) 0 nil]) ((#("6] = {" 0 1 (fontified t) 1 2 (fontified t face (rainbow-delimiters-depth-3-face)) 2 5 (fontified t) 5 6 (fontified t face (rainbow-delimiters-depth-3-face))) . 572) (undo-tree-id6042 . 6) (undo-tree-id6043 . -6) (undo-tree-id6044 . -6) (undo-tree-id6045 . 6) (undo-tree-id6046 . 6) (undo-tree-id6047 . 6)) ((572 . 578)) (23394 2818 173792 0) 0 nil]) ((564 . 565)) ((#(" " 0 1 (fontified t)) . 564) (undo-tree-id6081 . -1) (undo-tree-id6082 . -1) (undo-tree-id6083 . -1) (undo-tree-id6084 . -1) (undo-tree-id6085 . -1) (undo-tree-id6086 . 1) (undo-tree-id6087 . 1) (undo-tree-id6088 . 1) (undo-tree-id6089 . 1) (undo-tree-id6090 . 1) (undo-tree-id6091 . 1) (undo-tree-id6092 . 1)) (23394 2818 695700 0) 1 nil]) ((582 . 583)) ((#(" " 0 1 (fontified t)) . 582) (undo-tree-id6093 . 1) (undo-tree-id6094 . 1) (undo-tree-id6095 . 1) (undo-tree-id6096 . 1)) (23394 2818 885510 0) 0 nil] [nil nil ((582 . 583) 578) ((#(" " 0 1 (fontified t)) . 582) (undo-tree-id5963 . -1) (undo-tree-id5964 . -1) (undo-tree-id5965 . -1) (undo-tree-id5966 . -1) (undo-tree-id5967 . -1)) (23394 2777 670691 0) 0 nil]) ((#(" " 0 1 (fontified t)) . 564) (undo-tree-id6026 . 1) (undo-tree-id6027 . 1) (undo-tree-id6028 . -1) (undo-tree-id6029 . -1) (undo-tree-id6030 . 1) (undo-tree-id6031 . 1)) ((564 . 565)) (23394 2819 77519 0) 0 nil]) ((579 . 597) (t 23394 2686 822896 111000)) ((#("    string[6] = {
" 0 4 (fontified t) 4 10 (font-lock-face js2-object-property fontified t) 10 11 (help-echo "missing : after property id" cursor-sensor-functions #1# fontified t face (rainbow-delimiters-depth-4-face)) 11 12 (help-echo "missing } after property list" cursor-sensor-functions #1# fontified t) 12 13 (help-echo "missing ; before statement" cursor-sensor-functions #1# fontified t face (rainbow-delimiters-depth-4-face)) 13 16 (fontified t) 16 17 (fontified t face (rainbow-delimiters-depth-4-face)) 17 18 (fontified t)) . 579) (undo-tree-id6097 . 2) (undo-tree-id6098 . -16) (undo-tree-id6099 . 2) (undo-tree-id6100 . 18) (undo-tree-id6101 . 18) (undo-tree-id6102 . 18) (undo-tree-id6103 . 18) (undo-tree-id6104 . 14) (undo-tree-id6105 . 14) (undo-tree-id6106 . 14) (undo-tree-id6107 . 14) (undo-tree-id6108 . 14) (undo-tree-id6109 . 14)) (23394 2819 285501 0) 0 nil]) ((#("cp" 0 1 (fontified t help-echo #31="Undeclared variable or function 'cpstring'" cursor-sensor-functions #1#) 1 2 (fontified t help-echo #31# cursor-sensor-functions #1#)) . 565) (undo-tree-id6019 . 2) (undo-tree-id6020 . 2) (undo-tree-id6021 . 2)) ((565 . 567) (t 23394 2686 822896 111000)) (23394 2819 494053 0) 0 nil]) ((565 . 567)) ((#("cp" 0 1 (fontified t help-echo #31# cursor-sensor-functions #1#) 1 2 (fontified t help-echo #31# cursor-sensor-functions #1#)) . 565) (undo-tree-id6110 . 2) (undo-tree-id6111 . 2) (undo-tree-id6112 . 2) (undo-tree-id6113 . 2)) (23394 2819 693920 0) 0 nil]) ((#("[]" 0 1 (fontified t help-echo #32="missing ] after element list" cursor-sensor-functions #1# face (rainbow-delimiters-depth-3-face)) 1 2 (fontified t help-echo #33="Missing = in destructuring declaration" cursor-sensor-functions #1# face (rainbow-delimiters-depth-3-face))) . 552) (undo-tree-id5957 . 1)) ((552 . 554)) (23394 2819 933421 0) 0 nil]) ((#("[]" 0 1 (fontified t help-echo #36="missing ; after statement" cursor-sensor-functions #1# face (rainbow-delimiters-depth-3-face)) 1 2 (fontified t help-echo #37="syntax error" cursor-sensor-functions #1# face (rainbow-delimiters-depth-3-face))) . 561) (undo-tree-id5951 . 1) (undo-tree-id5953 . 1) (undo-tree-id5955 . 1)) ((561 . 563)) (23394 2820 141404 0) 0 nil]) ((#("]" 0 1 (fontified nil)) . 553) (553 . 554) (#("]" 0 1 (fontified nil face #34=(rainbow-delimiters-depth-3-face))) . 553) (553 . 554) (552 . 554) (#("[" 0 1 (fontified nil font-lock-face font-lock-keyword-face)) . 552) (552 . 553)) ((#("[" 0 1 (fontified nil font-lock-face font-lock-keyword-face)) . 552) (552 . 553) (#("[]" 0 1 (fontified nil help-echo #32# cursor-sensor-functions #1# face (rainbow-delimiters-depth-3-face)) 1 2 (fontified nil help-echo #33# cursor-sensor-functions #1# face (rainbow-delimiters-depth-3-face))) . 552) (undo-tree-id6114 . 2) (undo-tree-id6115 . 2) (#("]" 0 1 (fontified nil face #34#)) . 553) (553 . 554) (#("]" 0 1 (fontified nil)) . 553) (553 . 554)) (23394 2820 373462 0) 0 nil]) ((#("6" 0 1 (fontified t help-echo #38="Code has no side effects" cursor-sensor-functions #1#)) . 560)) ((560 . 561)) (23394 2820 614563 0) 0 nil]) ((562 . 563)) ((#(";" 0 1 (fontified t)) . 562)) (23394 2820 909349 0) 0 nil]) ((#(" = " 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t)) . 562) (undo-tree-id5936 . -3) (undo-tree-id5937 . -3) (undo-tree-id5938 . -3) (undo-tree-id5940 . 3) (undo-tree-id5942 . 3) (undo-tree-id5944 . 3) (undo-tree-id5946 . 3) (undo-tree-id5948 . 3)) ((562 . 565)) (23394 2821 133426 0) 0 nil]) ((#("new " 0 3 (fontified t font-lock-face font-lock-keyword-face) 3 4 (fontified t)) . 565) (undo-tree-id5932 . -4) (undo-tree-id5933 . -4) (undo-tree-id5934 . -4)) ((565 . 569)) (23394 2821 349511 0) 0 nil]) ((#("Array();" 0 5 (fontified t font-lock-face js2-function-call) 5 6 (fontified t face (rainbow-delimiters-depth-3-face)) 6 7 (fontified t face (rainbow-delimiters-depth-3-face)) 7 8 (fontified t)) . 569)) ((569 . 577)) (23394 2821 541404 0) 0 nil]) ((#("e" 0 1 (fontified t help-echo #35="missing ; before statement" cursor-sensor-functions #1#)) . 562)) ((562 . 563)) (23394 2821 757304 0) 0 nil]) ((562 . 563)) ((#("e" 0 1 (fontified t help-echo #35# cursor-sensor-functions #1#)) . 562) (undo-tree-id6116 . 1)) (23394 2822 77366 0) 0 nil]) ((#("]" 0 1 (fontified nil)) . 561) (561 . 562) (#("]" 0 1 (fontified nil)) . 561) (560 . 562) (559 . 561) (#("[" 0 1 (fontified nil font-lock-face font-lock-variable-name-face)) . 559) (559 . 560)) ((#("[" 0 1 (fontified nil font-lock-face font-lock-variable-name-face)) . 559) (559 . 560) (#("[]" 0 1 (fontified nil help-echo #36# cursor-sensor-functions #1# face (rainbow-delimiters-depth-3-face)) 1 2 (fontified nil help-echo #37# cursor-sensor-functions #1# face (rainbow-delimiters-depth-3-face))) . 559) (undo-tree-id6117 . -2) (undo-tree-id6118 . -2) (undo-tree-id6119 . -2) (undo-tree-id6120 . 2) (undo-tree-id6121 . 2) (undo-tree-id6122 . 1) (undo-tree-id6123 . 1) (#("6]" 0 1 (fontified nil help-echo #38# cursor-sensor-functions #1#) 1 2 (fontified nil)) . 560) (undo-tree-id6124 . 2) (undo-tree-id6125 . 2) (561 . 562) (#("]" 0 1 (fontified nil)) . 561) (561 . 562)) (23394 2822 325310 0) 0 nil]) ((#("        " 0 6 (font-lock-face rjsx-text syntax-table #18# fontified t) 6 8 (font-lock-face rjsx-text syntax-table #18# fontified t)) . 1857) (undo-tree-id6472 . -8) (undo-tree-id6473 . 8) (undo-tree-id6474 . 8) (undo-tree-id6475 . -8) (undo-tree-id6476 . -8) (undo-tree-id6477 . 8) (undo-tree-id6478 . 8) (undo-tree-id6479 . 8) (undo-tree-id6480 . 2) (undo-tree-id6481 . 2) (undo-tree-id6482 . 2) (undo-tree-id6483 . 2) (undo-tree-id6484 . 2) (undo-tree-id6485 . 2) (undo-tree-id6486 . 2) (undo-tree-id6487 . 2) (undo-tree-id6488 . 2) (undo-tree-id6489 . 2) (undo-tree-id6490 . 2) (undo-tree-id6491 . 2) (undo-tree-id6492 . 2) (undo-tree-id6493 . 2) (undo-tree-id6494 . 2) (undo-tree-id6495 . 2) (undo-tree-id6496 . 2) (undo-tree-id6497 . 2) (undo-tree-id6498 . 2) (undo-tree-id6499 . 8) (undo-tree-id6500 . 2) (undo-tree-id6501 . 8) (undo-tree-id6502 . 8) (undo-tree-id6503 . 8) (undo-tree-id6504 . -8) (undo-tree-id6505 . -8) (undo-tree-id6506 . -8) (undo-tree-id6507 . -8) (undo-tree-id6508 . 8) (undo-tree-id6509 . 8) (undo-tree-id6510 . 8) (undo-tree-id6511 . 8) (undo-tree-id6512 . 2) (undo-tree-id6513 . 2) (undo-tree-id6514 . 2) (undo-tree-id6515 . 2) (undo-tree-id6516 . 2) (undo-tree-id6517 . 2) (undo-tree-id6518 . 2) (undo-tree-id6519 . 2) (undo-tree-id6520 . 2) (undo-tree-id6521 . 2) (undo-tree-id6522 . 2) (undo-tree-id6523 . 2) (undo-tree-id6524 . 2) (undo-tree-id6525 . 2) (undo-tree-id6526 . 2) (undo-tree-id6527 . 2) (undo-tree-id6528 . 2) (undo-tree-id6529 . 2) (undo-tree-id6530 . 2) (undo-tree-id6531 . 2) (undo-tree-id6532 . 2) (undo-tree-id6533 . 2) (undo-tree-id6534 . 2) (undo-tree-id6535 . 2)) ((1857 . 1865)) (23394 2942 872909 0) 0 nil]) ((#("<line id=\"bottomFret\"
                  y2$=\"[[_bottomFretY]]\" y1$=\"[[_bottomFretY]]\"
                  x2$=\"[[_leftStringX]]\" x1$=\"[[_rightStringX]]\"
                  strokeWidth=\"0.5%\" stroke=\"#000\" fill=\"none\"/>" 0 1 (font-lock-face rjsx-tag-bracket-face fontified t) 1 5 (font-lock-face rjsx-tag fontified t) 5 6 (fontified t) 6 8 (font-lock-face rjsx-attr fontified t) 8 9 (fontified t) 9 13 (font-lock-face font-lock-string-face fontified t) 13 16 (font-lock-face font-lock-string-face fontified t) 16 20 (font-lock-face font-lock-string-face fontified t) 20 21 (font-lock-face font-lock-string-face fontified t) 21 22 (fontified t) 22 28 (fontified t) 28 30 (fontified t) 30 34 (fontified t) 34 39 (fontified t) 39 40 (fontified t) 40 43 (font-lock-face rjsx-attr fontified t) 43 44 (fontified t) 44 45 (font-lock-face font-lock-string-face fontified t) 45 46 (font-lock-face font-lock-string-face fontified t) 46 47 (font-lock-face font-lock-string-face fontified t) 47 48 (font-lock-face font-lock-string-face fontified t) 48 56 (font-lock-face font-lock-string-face fontified t) 56 59 (font-lock-face font-lock-string-face fontified t) 59 60 (font-lock-face font-lock-string-face fontified t) 60 61 (font-lock-face font-lock-string-face fontified t) 61 62 (font-lock-face font-lock-string-face fontified t) 62 63 (fontified t) 63 65 (font-lock-face rjsx-attr fontified t) 65 66 (font-lock-face rjsx-attr fontified t) 66 67 (fontified t) 67 68 (font-lock-face font-lock-string-face fontified t) 68 69 (font-lock-face font-lock-string-face fontified t) 69 70 (font-lock-face font-lock-string-face fontified t) 70 82 (font-lock-face font-lock-string-face fontified t) 82 83 (font-lock-face font-lock-string-face fontified t) 83 84 (font-lock-face font-lock-string-face fontified t) 84 85 (font-lock-face font-lock-string-face fontified t) 85 100 (fontified t) 100 104 (fontified t) 104 107 (font-lock-face rjsx-attr fontified t) 107 108 (fontified t) 108 109 (font-lock-face font-lock-string-face fontified t) 109 110 (font-lock-face font-lock-string-face fontified t) 110 111 (font-lock-face font-lock-string-face fontified t) 111 123 (font-lock-face font-lock-string-face fontified t) 123 124 (font-lock-face font-lock-string-face fontified t) 124 125 (font-lock-face font-lock-string-face fontified t) 125 126 (font-lock-face font-lock-string-face fontified t) 126 127 (fontified t) 127 130 (font-lock-face rjsx-attr fontified t) 130 131 (fontified t) 131 132 (font-lock-face font-lock-string-face fontified t) 132 133 (font-lock-face font-lock-string-face fontified t) 133 134 (font-lock-face font-lock-string-face fontified t) 134 147 (font-lock-face font-lock-string-face fontified t) 147 148 (font-lock-face font-lock-string-face fontified t) 148 149 (font-lock-face font-lock-string-face fontified t) 149 150 (font-lock-face font-lock-string-face fontified t) 150 151 (fontified t) 151 163 (fontified t) 163 168 (fontified t) 168 169 (fontified t) 169 180 (font-lock-face rjsx-attr fontified t) 180 181 (fontified t) 181 182 (font-lock-face font-lock-string-face fontified t) 182 187 (font-lock-face font-lock-string-face fontified t) 187 188 (fontified t) 188 194 (font-lock-face rjsx-attr fontified t) 194 195 (fontified t) 195 201 (font-lock-face font-lock-string-face fontified t) 201 202 (fontified t) 202 206 (font-lock-face rjsx-attr fontified t) 206 207 (fontified t) 207 210 (font-lock-face font-lock-string-face fontified t) 210 213 (font-lock-face font-lock-string-face fontified t) 213 214 (rjsx-class self-closing-slash font-lock-face rjsx-tag-bracket-face fontified t) 214 215 (font-lock-face rjsx-tag-bracket-face fontified t)) . 1865) (undo-tree-id6455 . 215) (undo-tree-id6456 . -151) (undo-tree-id6457 . -210) (undo-tree-id6458 . 215) (undo-tree-id6459 . 215) (undo-tree-id6460 . 215) (undo-tree-id6461 . 215) (undo-tree-id6462 . 215) (undo-tree-id6463 . 215) (undo-tree-id6464 . 215) (undo-tree-id6465 . 215) (undo-tree-id6466 . 215) (undo-tree-id6467 . 215) (undo-tree-id6468 . -22) (undo-tree-id6469 . -39) (undo-tree-id6470 . 215) (undo-tree-id6471 . 215)) ((1865 . 2080)) (23394 2942 664716 0) 0 nil]) ((#("          " 0 9 (font-lock-face rjsx-text syntax-table #18# fontified t) 9 10 (font-lock-face rjsx-text syntax-table #18# fontified t)) . 1865) (undo-tree-id6450 . 10) (undo-tree-id6451 . 10) (undo-tree-id6452 . 10) (undo-tree-id6453 . 10) (undo-tree-id6454 . 10)) ((1865 . 1875)) (23394 2942 480623 0) 0 nil]) ((#("
" 0 1 (font-lock-face rjsx-text syntax-table #18# fontified t)) . 1863) (undo-tree-id6410 . 1) (undo-tree-id6411 . 1) (undo-tree-id6412 . 1) (undo-tree-id6413 . 1) (undo-tree-id6414 . 1) (undo-tree-id6415 . 1) (undo-tree-id6416 . 1) (undo-tree-id6417 . 1) (undo-tree-id6418 . 1) (undo-tree-id6419 . 1) (undo-tree-id6420 . 1) (undo-tree-id6421 . 1) (undo-tree-id6422 . 1) (undo-tree-id6423 . 1) (undo-tree-id6424 . 1) (undo-tree-id6425 . 1) (undo-tree-id6426 . 1) (undo-tree-id6427 . 1) (undo-tree-id6428 . 1) (undo-tree-id6429 . 1) (undo-tree-id6430 . 1) (undo-tree-id6431 . 1) (undo-tree-id6432 . 1) (undo-tree-id6433 . 1) (undo-tree-id6434 . 1) (undo-tree-id6435 . 1) (undo-tree-id6436 . 1) (undo-tree-id6437 . 1) (undo-tree-id6438 . 1) (undo-tree-id6439 . 1) (undo-tree-id6440 . 1) (undo-tree-id6441 . 1) (undo-tree-id6442 . 1) (undo-tree-id6443 . 1) (undo-tree-id6444 . 1) (undo-tree-id6445 . 1) (undo-tree-id6446 . 1) (undo-tree-id6447 . 1) (undo-tree-id6448 . 1) (undo-tree-id6449 . 1)) ((1863 . 1864)) (23394 2942 240781 0) 0 nil]) ((#("                  strokeWidth=\"0.5%\" stroke=\"#000\" fill=\"none\"/>" 0 11 (fontified t) 11 18 (fontified t) 18 27 (fontified t font-lock-face rjsx-attr) 27 29 (fontified t font-lock-face rjsx-attr) 29 30 (fontified t) 30 36 (fontified t font-lock-face font-lock-string-face) 36 37 (fontified t) 37 39 (fontified t font-lock-face rjsx-attr) 39 43 (fontified t font-lock-face rjsx-attr) 43 44 (fontified t) 44 50 (fontified t font-lock-face font-lock-string-face) 50 51 (fontified t) 51 55 (fontified t font-lock-face rjsx-attr) 55 56 (fontified t) 56 58 (fontified t font-lock-face font-lock-string-face) 58 59 (fontified t font-lock-face font-lock-string-face) 59 62 (fontified t font-lock-face font-lock-string-face) 62 63 (rjsx-class self-closing-slash fontified t font-lock-face rjsx-tag-bracket-face) 63 64 (fontified t font-lock-face rjsx-tag-bracket-face)) . 1863) (undo-tree-id6337 . 64) (undo-tree-id6338 . 64) (undo-tree-id6339 . 64) (undo-tree-id6340 . 64) (undo-tree-id6341 . 64) (undo-tree-id6342 . 64) (undo-tree-id6343 . 64) (undo-tree-id6344 . 64) (undo-tree-id6345 . 64) (undo-tree-id6346 . 64) (undo-tree-id6347 . 64) (undo-tree-id6348 . 64) (undo-tree-id6349 . 64) (undo-tree-id6350 . 64) (undo-tree-id6351 . 64) (undo-tree-id6352 . 64) (undo-tree-id6353 . 64) (undo-tree-id6354 . 64) (undo-tree-id6355 . 64) (undo-tree-id6356 . 64) (undo-tree-id6357 . 64) (undo-tree-id6358 . 64) (undo-tree-id6359 . 64) (undo-tree-id6360 . 64) (undo-tree-id6361 . 64) (undo-tree-id6362 . 64) (undo-tree-id6363 . 64) (undo-tree-id6364 . 64) (undo-tree-id6365 . 64) (undo-tree-id6366 . 64) (undo-tree-id6367 . 64) (undo-tree-id6368 . 64) (undo-tree-id6369 . 64) (undo-tree-id6370 . 64) (undo-tree-id6371 . 64)) ((1863 . 1927)) (23394 2941 305163 0) 0 nil]) ((#("
" 0 1 (fontified t)) . 1863) (undo-tree-id6306 . 1) (undo-tree-id6307 . 1) (undo-tree-id6308 . 1) (undo-tree-id6309 . 1) (undo-tree-id6310 . 1) (undo-tree-id6311 . 1) (undo-tree-id6312 . 1) (undo-tree-id6313 . 1) (undo-tree-id6314 . 1) (undo-tree-id6315 . 1) (undo-tree-id6316 . 1) (undo-tree-id6317 . 1) (undo-tree-id6318 . 1) (undo-tree-id6319 . 1) (undo-tree-id6320 . 1) (undo-tree-id6321 . 1) (undo-tree-id6322 . 1) (undo-tree-id6323 . 1) (undo-tree-id6324 . 1) (undo-tree-id6325 . 1) (undo-tree-id6326 . 1) (undo-tree-id6327 . 1) (undo-tree-id6328 . 1) (undo-tree-id6329 . 1) (undo-tree-id6330 . 1) (undo-tree-id6331 . 1) (undo-tree-id6332 . 1) (undo-tree-id6333 . 1) (undo-tree-id6334 . 1) (undo-tree-id6335 . 1) (undo-tree-id6336 . 1)) ((1863 . 1864)) (23394 2938 584883 0) 0 nil]) ((#("                  x2$=\"[[_leftStringX]]\" x1$=\"[[_rightStringX]]\"" 0 16 (fontified t) 16 18 (fontified t) 18 21 (fontified t font-lock-face rjsx-attr) 21 22 (fontified t) 22 23 (fontified t font-lock-face font-lock-string-face) 23 24 (fontified t font-lock-face font-lock-string-face) 24 25 (fontified t font-lock-face font-lock-string-face) 25 37 (fontified t font-lock-face font-lock-string-face) 37 38 (fontified t font-lock-face font-lock-string-face) 38 39 (fontified t font-lock-face font-lock-string-face) 39 40 (fontified t font-lock-face font-lock-string-face) 40 41 (fontified t) 41 44 (fontified t font-lock-face rjsx-attr) 44 45 (fontified t) 45 46 (fontified t font-lock-face font-lock-string-face) 46 47 (fontified t font-lock-face font-lock-string-face) 47 48 (fontified t font-lock-face font-lock-string-face) 48 50 (fontified t font-lock-face font-lock-string-face) 50 55 (fontified t font-lock-face font-lock-string-face) 55 61 (fontified t font-lock-face font-lock-string-face) 61 62 (fontified t font-lock-face font-lock-string-face) 62 63 (fontified t font-lock-face font-lock-string-face) 63 64 (fontified t font-lock-face font-lock-string-face)) . 1863) (undo-tree-id6279 . 64) (undo-tree-id6280 . 64) (undo-tree-id6281 . 64) (undo-tree-id6282 . 64) (undo-tree-id6283 . 64) (undo-tree-id6284 . 64) (undo-tree-id6285 . 64) (undo-tree-id6286 . 64) (undo-tree-id6287 . 64) (undo-tree-id6288 . 64) (undo-tree-id6289 . 64) (undo-tree-id6290 . 64) (undo-tree-id6291 . 64) (undo-tree-id6292 . 64) (undo-tree-id6293 . 64) (undo-tree-id6294 . 64) (undo-tree-id6295 . 64) (undo-tree-id6296 . 64) (undo-tree-id6297 . 64) (undo-tree-id6298 . 64) (undo-tree-id6299 . 64) (undo-tree-id6300 . 64) (undo-tree-id6301 . 64) (undo-tree-id6302 . 64) (undo-tree-id6303 . 64) (undo-tree-id6304 . 64) (undo-tree-id6305 . 64)) ((1863 . 1927)) (23394 2938 376995 0) 0 nil]) ((#("
" 0 1 (fontified t)) . 1863) (undo-tree-id6256 . 1) (undo-tree-id6257 . 1) (undo-tree-id6258 . 1) (undo-tree-id6259 . 1) (undo-tree-id6260 . 1) (undo-tree-id6261 . 1) (undo-tree-id6262 . 1) (undo-tree-id6263 . 1) (undo-tree-id6264 . 1) (undo-tree-id6265 . 1) (undo-tree-id6266 . 1) (undo-tree-id6267 . 1) (undo-tree-id6268 . 1) (undo-tree-id6269 . 1) (undo-tree-id6270 . 1) (undo-tree-id6271 . 1) (undo-tree-id6272 . 1) (undo-tree-id6273 . 1) (undo-tree-id6274 . 1) (undo-tree-id6275 . 1) (undo-tree-id6276 . 1) (undo-tree-id6277 . 1) (undo-tree-id6278 . 1)) ((1863 . 1864)) (23394 2938 64887 0) 0 nil]) ((#("      y2$=\"[[_topFretY]]\" y1$=\"[[_topFretY]]\"" 0 6 (fontified t) 6 9 (fontified t font-lock-face rjsx-attr) 9 10 (fontified t) 10 11 (fontified t font-lock-face font-lock-string-face) 11 12 (fontified t font-lock-face font-lock-string-face) 12 13 (fontified t font-lock-face font-lock-string-face) 13 22 (fontified t font-lock-face font-lock-string-face) 22 23 (fontified t font-lock-face font-lock-string-face) 23 24 (fontified t font-lock-face font-lock-string-face) 24 25 (fontified t font-lock-face font-lock-string-face) 25 26 (fontified t) 26 29 (fontified t font-lock-face rjsx-attr) 29 30 (fontified t) 30 31 (fontified t font-lock-face font-lock-string-face) 31 32 (fontified t font-lock-face font-lock-string-face) 32 33 (fontified t font-lock-face font-lock-string-face) 33 37 (fontified t font-lock-face font-lock-string-face) 37 38 (fontified t font-lock-face font-lock-string-face) 38 42 (fontified t font-lock-face font-lock-string-face) 42 43 (fontified t font-lock-face font-lock-string-face) 43 44 (fontified t font-lock-face font-lock-string-face) 44 45 (fontified t font-lock-face font-lock-string-face)) . 1863) (undo-tree-id6237 . 45) (undo-tree-id6238 . 45) (undo-tree-id6239 . 45) (undo-tree-id6240 . 45) (undo-tree-id6241 . 45) (undo-tree-id6242 . 45) (undo-tree-id6243 . 39) (undo-tree-id6244 . 45) (undo-tree-id6245 . 45) (undo-tree-id6246 . 39) (undo-tree-id6247 . 45) (undo-tree-id6248 . 45) (undo-tree-id6249 . 45) (undo-tree-id6250 . 39) (undo-tree-id6251 . 39) (undo-tree-id6252 . 45) (undo-tree-id6253 . 45) (undo-tree-id6254 . 45) (undo-tree-id6255 . 45)) ((1863 . 1908)) (23394 2937 704890 0) 0 nil]) ((#("
" 0 1 (fontified t)) . 1863) (undo-tree-id6226 . 1) (undo-tree-id6227 . 1) (undo-tree-id6228 . 1) (undo-tree-id6229 . 1) (undo-tree-id6230 . 1) (undo-tree-id6231 . 1) (undo-tree-id6232 . 1) (undo-tree-id6233 . 1) (undo-tree-id6234 . 1) (undo-tree-id6235 . 1) (undo-tree-id6236 . 1)) ((1863 . 1864)) (23394 2937 488855 0) 0 nil]) ((#("  <line id=\"fret0\"" 0 2 (fontified t font-lock-face rjsx-text syntax-table #18#) 2 3 (fontified t font-lock-face rjsx-tag-bracket-face) 3 7 (fontified t font-lock-face rjsx-tag) 7 8 (fontified t) 8 10 (fontified t font-lock-face rjsx-attr) 10 11 (fontified t) 11 18 (fontified t font-lock-face font-lock-string-face)) . 1863) (undo-tree-id6219 . 18) (undo-tree-id6220 . 18) (undo-tree-id6221 . 18) (undo-tree-id6222 . 16) (undo-tree-id6223 . 16) (undo-tree-id6224 . 16) (undo-tree-id6225 . 16)) ((1863 . 1881)) (23394 2937 264814 0) 0 nil]) ((#("            " 0 8 (fontified t) 8 12 (fontified t)) . 1888) (undo-tree-id6217 . 12) (undo-tree-id6218 . 12)) ((1888 . 1900)) (23394 2936 984837 0) 0 nil]) ((#("   " 0 3 (fontified t font-lock-face rjsx-text syntax-table #18#)) . 1865) (undo-tree-id6215 . 3) (undo-tree-id6216 . 3)) ((1865 . 1868)) (23394 2936 600966 0) 0 nil]) ((#(" " 0 1 (fontified nil font-lock-face rjsx-text syntax-table #18#)) . 1857) (undo-tree-id6206 . 1) (undo-tree-id6207 . 1) (undo-tree-id6208 . 1) (undo-tree-id6209 . 1) (undo-tree-id6210 . 1) (undo-tree-id6211 . 1) (#(" " 0 1 (fontified t font-lock-face rjsx-text syntax-table #18#)) . 1857) (undo-tree-id6212 . 1) (undo-tree-id6213 . 1) (undo-tree-id6214 . 1)) ((1857 . 1858) (1857 . 1858)) (23394 2936 248928 0) 0 nil] [nil nil ((#("
" 0 1 (font-lock-face rjsx-text syntax-table #18# fontified t)) . 2302) (undo-tree-id3960 . 1) (undo-tree-id3961 . -1)) ((2302 . 2303)) (23394 2581 893889 0) 0 nil]) ((1857 . 1858)) ((#(" " 0 1 (fontified t font-lock-face rjsx-text syntax-table #18#)) . 1857) (undo-tree-id6182 . 1)) (23394 2935 881299 0) 0 nil]) ((1576 . 1579)) ((#("key" 0 3 (fontified t font-lock-face rjsx-attr help-echo "missing `}' after expression" cursor-sensor-functions #1#)) . 1576)) (23394 2935 648961 0) 0 nil]) ((#("key={} " 0 1 (fontified t font-lock-face rjsx-attr) 1 3 (fontified t font-lock-face rjsx-attr) 3 4 (fontified t) 4 5 (fontified t help-echo #39="empty `{}' expression" cursor-sensor-functions #1# face (rainbow-delimiters-depth-9-face)) 5 6 (fontified t help-echo #39# cursor-sensor-functions #1# face (rainbow-delimiters-depth-9-face)) 6 7 (fontified t)) . 1576) (undo-tree-id6188 . -7) (undo-tree-id6189 . 7) (undo-tree-id6190 . 7) (undo-tree-id6191 . 1) (undo-tree-id6192 . 1) (undo-tree-id6193 . 1) (undo-tree-id6194 . 1) (undo-tree-id6195 . 1) (undo-tree-id6196 . 1) (undo-tree-id6197 . 1) (undo-tree-id6198 . -7) (undo-tree-id6199 . -7) (undo-tree-id6200 . 1) (undo-tree-id6201 . 1) (undo-tree-id6202 . 4) (undo-tree-id6203 . 4) (undo-tree-id6204 . 3) (undo-tree-id6205 . 3)) ((1576 . 1583)) (23394 2935 376978 0) 0 nil]) ((#("id" 0 2 (fontified t font-lock-face rjsx-attr)) . 1583) (undo-tree-id6186 . 2) (undo-tree-id6187 . 2)) ((1583 . 1585)) (23394 2934 976871 0) 0 nil]) ((1580 . 1582) (#("{" 0 1 (fontified nil help-echo #40="missing value after prop `key'" cursor-sensor-functions #1#)) . 1580) (1580 . 1581)) ((#("{" 0 1 (fontified nil help-echo #40# cursor-sensor-functions #1#)) . 1580) (1580 . 1581) (#("{}" 0 1 (fontified t help-echo #39# cursor-sensor-functions #1# face (rainbow-delimiters-depth-9-face)) 1 2 (fontified t help-echo #39# cursor-sensor-functions #1# face (rainbow-delimiters-depth-9-face))) . 1580)) (23394 2934 681240 0) 0 nil]) ((1579 . 1580)) ((#("=" 0 1 (fontified t)) . 1579) (undo-tree-id6183 . -1) (undo-tree-id6184 . -1) (undo-tree-id6185 . -1)) (23394 2934 441280 0) 0 nil]) ((1579 . 1580)) ((#(" " 0 1 (fontified t)) . 1579) (undo-tree-id4993 . 1) (undo-tree-id4994 . 1) (undo-tree-id4995 . 1)) (23394 2931 97209 0) 0 nil]) ((#("=" 0 1 (fontified t help-echo #41="missing value after prop `key'" cursor-sensor-functions #1#)) . 1579) (undo-tree-id5652 . 1)) ((1579 . 1580)) (23394 2734 682614 0) 0 nil]) ((1577 . 1580)) ((#("ey=" 0 2 (fontified t font-lock-face rjsx-attr) 2 3 (fontified t help-echo #41# cursor-sensor-functions #1#)) . 1577) (undo-tree-id4996 . -3) (undo-tree-id4997 . -3) (undo-tree-id4998 . -3) (undo-tree-id4999 . 1)) (23394 2734 599239 0) 0 nil]) ((#("y" 0 1 (fontified t font-lock-face rjsx-attr)) . 1577) (undo-tree-id5650 . 1) (undo-tree-id5651 . 1)) ((1577 . 1578)) (23394 2734 515529 0) 0 nil]) ((1577 . 1578)) ((#("y" 0 1 (fontified t font-lock-face rjsx-attr)) . 1577) (undo-tree-id5000 . -1) (undo-tree-id5001 . -1) (undo-tree-id5002 . -1) (undo-tree-id5003 . 1)) (23394 2734 431530 0) 0 nil]) ((#("u" 0 1 (fontified t font-lock-face rjsx-attr)) . 1577) (undo-tree-id5649 . 1)) ((1577 . 1578)) (23394 2734 347711 0) 0 nil]) ((1576 . 1578)) ((#("ku" 0 1 (fontified t font-lock-face rjsx-attr) 1 2 (fontified t font-lock-face rjsx-attr)) . 1576) (undo-tree-id5004 . -2) (undo-tree-id5005 . -2) (undo-tree-id5006 . -2) (undo-tree-id5007 . 2) (undo-tree-id5008 . 1)) (23394 2734 263518 0) 0 nil]) ((1600 . 1606)) ((#("string" 0 5 (fontified t) 5 6 (fontified t)) . 1600) (undo-tree-id5009 . 6) (undo-tree-id5010 . -1) (undo-tree-id5011 . 5) (undo-tree-id5012 . -2) (undo-tree-id5013 . 4) (undo-tree-id5014 . -3) (undo-tree-id5015 . 3) (undo-tree-id5016 . -4) (undo-tree-id5017 . 2) (undo-tree-id5018 . -5) (undo-tree-id5019 . 1) (undo-tree-id5020 . -6) (undo-tree-id5021 . -6) (undo-tree-id5022 . -6) (undo-tree-id5023 . -6) (undo-tree-id5024 . -6) (undo-tree-id5025 . -6) (undo-tree-id5026 . -5) (undo-tree-id5027 . -5) (undo-tree-id5028 . -6)) (23394 2734 179581 0) 0 nil]) ((#("stringPositions" 0 6 (help-echo #42="Undeclared variable or function 'stringPositions'" cursor-sensor-functions #1# fontified t) 6 15 (help-echo #42# cursor-sensor-functions #1# fontified t)) . 1600) (undo-tree-id5646 . 15) (undo-tree-id5647 . 9) (undo-tree-id5648 . 9)) ((1600 . 1615)) (23394 2734 95778 0) 0 nil]) ((#("    debugger;" 0 4 (fontified t) 4 12 (fontified t font-lock-face font-lock-keyword-face) 12 13 (fontified t)) . 506) (undo-tree-id5634 . 10) (undo-tree-id5635 . -3) (undo-tree-id5636 . 13) (undo-tree-id5637 . 10) (undo-tree-id5638 . 13) (undo-tree-id5639 . 13) (undo-tree-id5640 . 13) (undo-tree-id5641 . 13) (undo-tree-id5642 . 9) (undo-tree-id5643 . 9) (undo-tree-id5644 . 9) (undo-tree-id5645 . 9)) ((506 . 519)) (23394 2734 12250 0) 0 nil]) ((1757 . 1758)) ((#("1" 0 1 (font-lock-face font-lock-string-face fontified t)) . 1757) (undo-tree-id5029 . 1) (undo-tree-id5030 . -1)) (23394 2733 928206 0) 0 nil]) ((#("0.5%" 0 1 (fontified t font-lock-face font-lock-string-face) 1 2 (fontified t font-lock-face font-lock-string-face) 2 3 (fontified t font-lock-face font-lock-string-face) 3 4 (font-lock-face font-lock-string-face fontified t)) . 1757) (undo-tree-id5633 . 4)) ((1757 . 1761)) (23394 2733 844146 0) 0 nil]) ((1692 . 1693)) ((#("1" 0 1 (font-lock-face js2-object-property-access fontified t)) . 1692) (undo-tree-id5031 . 1) (undo-tree-id5032 . -1) (undo-tree-id5033 . -1) (undo-tree-id5034 . -1)) (23394 2733 760372 0) 0 nil]) ((1690 . 1692)) ((#(".x" 0 1 (fontified t) 1 2 (font-lock-face js2-object-property-access fontified t)) . 1690) (undo-tree-id5035 . -2) (undo-tree-id5036 . 2) (undo-tree-id5037 . -1) (undo-tree-id5038 . 1) (undo-tree-id5039 . -2) (undo-tree-id5040 . -2) (undo-tree-id5041 . -2) (undo-tree-id5042 . -2) (undo-tree-id5043 . -2) (undo-tree-id5044 . -2)) (23394 2733 676396 0) 0 nil]) ((#("[number.x1]" 0 1 (fontified t help-echo "missing `}' after expression" cursor-sensor-functions #1# face (rainbow-delimiters-depth-1-face)) 1 2 (fontified t help-echo "Undeclared variable or function 'n'" cursor-sensor-functions #1#) 2 3 (fontified t help-echo "Undeclared variable or function 'nu'" cursor-sensor-functions #1#) 3 4 (fontified t help-echo "Undeclared variable or function 'num'" cursor-sensor-functions #1#) 4 5 (fontified t help-echo "Undeclared variable or function 'numb'" cursor-sensor-functions #1#) 5 6 (fontified t help-echo "Undeclared variable or function 'numbe'" cursor-sensor-functions #1#) 6 7 (fontified t) 7 8 (fontified t help-echo "missing name after . operator" cursor-sensor-functions #1#) 8 9 (fontified t font-lock-face js2-object-property-access) 9 10 (fontified t font-lock-face js2-object-property-access) 10 11 (fontified t face (rainbow-delimiters-depth-1-face))) . 1690) (undo-tree-id5632 . 11)) ((1690 . 1701)) (23394 2733 592305 0) 0 nil]) ((1713 . 1716)) ((#(".x2" 0 1 (fontified t) 1 3 (font-lock-face js2-object-property-access fontified t)) . 1713) (undo-tree-id5045 . 3) (undo-tree-id5046 . -1) (undo-tree-id5047 . 2) (undo-tree-id5048 . -2) (undo-tree-id5049 . 1) (undo-tree-id5050 . -3) (undo-tree-id5051 . 1) (undo-tree-id5052 . -2) (undo-tree-id5053 . 2) (undo-tree-id5054 . 1) (undo-tree-id5055 . -1) (undo-tree-id5056 . 3) (undo-tree-id5057 . 2) (undo-tree-id5058 . 3) (undo-tree-id5059 . 3) (undo-tree-id5060 . 3)) (23394 2733 508572 0) 0 nil]) ((#("[number.x2]" 0 1 (fontified t help-echo "missing `}' after expression" cursor-sensor-functions #1# face (rainbow-delimiters-depth-1-face)) 1 2 (fontified t help-echo "Undeclared variable or function 'n'" cursor-sensor-functions #1#) 2 3 (fontified t help-echo "Undeclared variable or function 'nu'" cursor-sensor-functions #1#) 3 4 (fontified t help-echo "Undeclared variable or function 'num'" cursor-sensor-functions #1#) 4 5 (fontified t help-echo "Undeclared variable or function 'numb'" cursor-sensor-functions #1#) 5 6 (fontified t help-echo "Undeclared variable or function 'numbe'" cursor-sensor-functions #1#) 6 7 (fontified t) 7 8 (fontified t help-echo "missing name after . operator" cursor-sensor-functions #1#) 8 9 (fontified t font-lock-face js2-object-property-access) 9 10 (fontified t font-lock-face js2-object-property-access) 10 11 (fontified t face (rainbow-delimiters-depth-1-face))) . 1713) (undo-tree-id5631 . 11)) ((1713 . 1724)) (23394 2733 424603 0) 0 nil]) ((1642 . 1644)) ((#(".y" 0 1 (fontified t) 1 2 (font-lock-face js2-object-property-access fontified t)) . 1642) (undo-tree-id5061 . 2) (undo-tree-id5062 . -1) (undo-tree-id5063 . 1) (undo-tree-id5064 . -2) (undo-tree-id5065 . -2) (undo-tree-id5066 . -2) (undo-tree-id5067 . 1) (undo-tree-id5068 . -1) (undo-tree-id5069 . 2) (undo-tree-id5070 . 1) (undo-tree-id5071 . 2)) (23394 2733 341351 0) 0 nil]) ((#("[number.y]" 0 1 (fontified t help-echo "missing `}' after expression" cursor-sensor-functions #1# face (rainbow-delimiters-depth-1-face)) 1 2 (fontified t help-echo "Undeclared variable or function 'n'" cursor-sensor-functions #1#) 2 3 (fontified t help-echo "Undeclared variable or function 'nu'" cursor-sensor-functions #1#) 3 4 (fontified t help-echo "Undeclared variable or function 'num'" cursor-sensor-functions #1#) 4 5 (fontified t help-echo "Undeclared variable or function 'numb'" cursor-sensor-functions #1#) 5 6 (fontified t help-echo "Undeclared variable or function 'numbe'" cursor-sensor-functions #1#) 6 7 (fontified t) 7 8 (fontified t help-echo "missing name after . operator" cursor-sensor-functions #1#) 8 9 (fontified t font-lock-face js2-object-property-access) 9 10 (fontified t face (rainbow-delimiters-depth-1-face))) . 1642) (undo-tree-id5630 . 10)) ((1642 . 1652)) (23394 2733 257007 0) 0 nil]) ((#("[number]" 0 1 (fontified t help-echo "missing `}' after expression" cursor-sensor-functions #1# face (rainbow-delimiters-depth-1-face)) 1 2 (fontified t help-echo "Undeclared variable or function 'n'" cursor-sensor-functions #1#) 2 3 (fontified t help-echo "Undeclared variable or function 'nu'" cursor-sensor-functions #1#) 3 4 (fontified t help-echo "Undeclared variable or function 'num'" cursor-sensor-functions #1#) 4 5 (fontified t help-echo "Undeclared variable or function 'numb'" cursor-sensor-functions #1#) 5 6 (fontified t help-echo "Undeclared variable or function 'numbe'" cursor-sensor-functions #1#) 6 7 (fontified t) 7 8 (fontified t face (rainbow-delimiters-depth-1-face))) . 1628) (undo-tree-id5624 . 8) (undo-tree-id5625 . 8) (undo-tree-id5626 . 1) (undo-tree-id5627 . 1) (undo-tree-id5628 . 1) (undo-tree-id5629 . 1)) ((1628 . 1636)) (23394 2733 174580 0) 0 nil]) ((1619 . 1628)) ((#("Positions" 0 9 (help-echo #42# cursor-sensor-functions #1# fontified t)) . 1619)) (23394 2733 90605 0) 0 nil]) ((1627 . 1629)) ((#(".y" 0 1 (fontified t) 1 2 (font-lock-face js2-object-property-access fontified t)) . 1627) (undo-tree-id5072 . 2) (undo-tree-id5073 . 2) (undo-tree-id5074 . 2) (undo-tree-id5075 . 2) (undo-tree-id5076 . 2) (undo-tree-id5077 . 2) (undo-tree-id5078 . 2) (undo-tree-id5079 . 2) (undo-tree-id5080 . 2) (undo-tree-id5081 . 2) (undo-tree-id5082 . 2) (undo-tree-id5083 . 2) (undo-tree-id5084 . 2) (undo-tree-id5085 . 2) (undo-tree-id5086 . 2) (undo-tree-id5087 . 2) (undo-tree-id5088 . 2) (undo-tree-id5089 . 2) (undo-tree-id5090 . 2) (undo-tree-id5091 . 2) (undo-tree-id5092 . 2) (undo-tree-id5093 . 2) (undo-tree-id5094 . 2) (undo-tree-id5095 . 2) (undo-tree-id5096 . 2) (undo-tree-id5097 . 2) (undo-tree-id5098 . 2) (undo-tree-id5099 . 2) (undo-tree-id5100 . 2) (undo-tree-id5101 . 2) (undo-tree-id5102 . 2) (undo-tree-id5103 . 2) (undo-tree-id5104 . 2) (undo-tree-id5105 . 2) (undo-tree-id5106 . 2) (undo-tree-id5107 . 2) (undo-tree-id5108 . 2) (undo-tree-id5109 . 2) (undo-tree-id5110 . 2) (undo-tree-id5111 . 2) (undo-tree-id5112 . 2) (undo-tree-id5113 . 2) (undo-tree-id5114 . 2) (undo-tree-id5115 . 2) (undo-tree-id5116 . 2) (undo-tree-id5117 . 2) (undo-tree-id5118 . 2) (undo-tree-id5119 . 2) (undo-tree-id5120 . 2) (undo-tree-id5121 . 2) (undo-tree-id5122 . 2) (undo-tree-id5123 . 2) (undo-tree-id5124 . 2) (undo-tree-id5125 . 2) (undo-tree-id5126 . 2) (undo-tree-id5127 . 2) (undo-tree-id5128 . 2) (undo-tree-id5129 . 2) (undo-tree-id5130 . 2) (undo-tree-id5131 . 2) (undo-tree-id5132 . 2) (undo-tree-id5133 . 2) (undo-tree-id5134 . 2) (undo-tree-id5135 . 2) (undo-tree-id5136 . 2) (undo-tree-id5137 . 2) (undo-tree-id5138 . 2) (undo-tree-id5139 . 2) (undo-tree-id5140 . 2) (undo-tree-id5141 . 2) (undo-tree-id5142 . 2) (undo-tree-id5143 . 2) (undo-tree-id5144 . 2) (undo-tree-id5145 . 2) (undo-tree-id5146 . 2) (undo-tree-id5147 . 2) (undo-tree-id5148 . 2) (undo-tree-id5149 . 2) (undo-tree-id5150 . 2) (undo-tree-id5151 . 2) (undo-tree-id5152 . 2) (undo-tree-id5153 . 2) (undo-tree-id5154 . 2) (undo-tree-id5155 . 2) (undo-tree-id5156 . 2) (undo-tree-id5157 . 2) (undo-tree-id5158 . 2) (undo-tree-id5159 . 2) (undo-tree-id5160 . 2) (undo-tree-id5161 . 2) (undo-tree-id5162 . 2) (undo-tree-id5163 . 2) (undo-tree-id5164 . 2) (undo-tree-id5165 . 2) (undo-tree-id5166 . 2) (undo-tree-id5167 . 2) (undo-tree-id5168 . 2) (undo-tree-id5169 . 2) (undo-tree-id5170 . 2) (undo-tree-id5171 . -1) (undo-tree-id5172 . 1) (undo-tree-id5173 . -2) (undo-tree-id5174 . -2) (undo-tree-id5175 . 2) (undo-tree-id5176 . 2) (undo-tree-id5177 . 2) (undo-tree-id5178 . 2) (undo-tree-id5179 . 2) (undo-tree-id5180 . 2) (undo-tree-id5181 . 2) (undo-tree-id5182 . 2) (undo-tree-id5183 . 2) (undo-tree-id5184 . 2) (undo-tree-id5185 . 2) (undo-tree-id5186 . 2) (undo-tree-id5187 . 2) (undo-tree-id5188 . 2) (undo-tree-id5189 . 2) (undo-tree-id5190 . 2) (undo-tree-id5191 . 2) (undo-tree-id5192 . 2) (undo-tree-id5193 . 2) (undo-tree-id5194 . 2) (undo-tree-id5195 . 2) (undo-tree-id5196 . 2) (undo-tree-id5197 . 2) (undo-tree-id5198 . 2) (undo-tree-id5199 . 2) (undo-tree-id5200 . 2) (undo-tree-id5201 . 2) (undo-tree-id5202 . 2) (undo-tree-id5203 . 2) (undo-tree-id5204 . 2) (undo-tree-id5205 . 2) (undo-tree-id5206 . 2) (undo-tree-id5207 . 2) (undo-tree-id5208 . 2) (undo-tree-id5209 . 2) (undo-tree-id5210 . 2) (undo-tree-id5211 . 2) (undo-tree-id5212 . 2) (undo-tree-id5213 . 2) (undo-tree-id5214 . 2) (undo-tree-id5215 . 2) (undo-tree-id5216 . 2) (undo-tree-id5217 . 2) (undo-tree-id5218 . 2) (undo-tree-id5219 . -2) (undo-tree-id5220 . 1) (undo-tree-id5221 . -1) (undo-tree-id5222 . 2) (undo-tree-id5223 . 1) (undo-tree-id5224 . 2) (undo-tree-id5225 . 2) (undo-tree-id5226 . 2) (undo-tree-id5227 . 2) (undo-tree-id5228 . 2) (undo-tree-id5229 . 2) (undo-tree-id5230 . 2) (undo-tree-id5231 . 2) (undo-tree-id5232 . 2) (undo-tree-id5233 . 2) (undo-tree-id5234 . 2) (undo-tree-id5235 . 2) (undo-tree-id5236 . 2) (undo-tree-id5237 . 2) (undo-tree-id5238 . 2) (undo-tree-id5239 . 2) (undo-tree-id5240 . 2) (undo-tree-id5241 . 2) (undo-tree-id5242 . 2) (undo-tree-id5243 . 2) (undo-tree-id5244 . 2) (undo-tree-id5245 . 2) (undo-tree-id5246 . 2) (undo-tree-id5247 . 2) (undo-tree-id5248 . 2) (undo-tree-id5249 . 2) (undo-tree-id5250 . 2) (undo-tree-id5251 . 2) (undo-tree-id5252 . 2) (undo-tree-id5253 . 2)) (23394 2733 6716 0) 0 nil]) ((#(".y" 0 1 (fontified t help-echo "missing name after . operator" cursor-sensor-functions #1#) 1 2 (fontified t font-lock-face js2-object-property-access)) . 1626)) ((1626 . 1628)) (23394 2732 923684 0) 0 nil]) ((1813 . 1814)) ((#(";" 0 1 (fontified t)) . 1813)) (23394 2732 839564 0) 0 nil]) ((#("        " 0 8 (fontified t help-echo #48="anonymous function does not always return a value" cursor-sensor-functions #1#)) . 1846) (undo-tree-id5622 . 5) (undo-tree-id5623 . 5)) ((1846 . 1854)) (23394 2732 755481 0) 0 nil]) ((#("      " 0 6 (fontified t)) . 1830) (undo-tree-id5620 . 6) (undo-tree-id5621 . 6)) ((1830 . 1836)) (23394 2732 671536 0) 0 nil]) ((1733 . 1767) (#("                           " 0 18 (fontified t help-echo #43="missing ; after statement" cursor-sensor-functions #1#) 18 26 (fontified t help-echo #43# cursor-sensor-functions #1#) 26 27 (fontified t help-echo #43# cursor-sensor-functions #1#)) . 1733)) ((1733 . 1760) (#("                                  " 0 34 (fontified t)) . 1733) (undo-tree-id5254 . 34) (undo-tree-id5255 . 33) (undo-tree-id5256 . 34) (undo-tree-id5257 . -1) (undo-tree-id5258 . 32) (undo-tree-id5259 . 33) (undo-tree-id5260 . -2) (undo-tree-id5261 . 31) (undo-tree-id5262 . 32) (undo-tree-id5263 . -3) (undo-tree-id5264 . 30) (undo-tree-id5265 . 31) (undo-tree-id5266 . -4) (undo-tree-id5267 . 29) (undo-tree-id5268 . 30) (undo-tree-id5269 . -5) (undo-tree-id5270 . 28) (undo-tree-id5271 . 29) (undo-tree-id5272 . -6) (undo-tree-id5273 . 27) (undo-tree-id5274 . 28) (undo-tree-id5275 . -7) (undo-tree-id5276 . 26) (undo-tree-id5277 . 27) (undo-tree-id5278 . -8) (undo-tree-id5279 . 25) (undo-tree-id5280 . 26) (undo-tree-id5281 . -9) (undo-tree-id5282 . 24) (undo-tree-id5283 . 25) (undo-tree-id5284 . -10) (undo-tree-id5285 . 23) (undo-tree-id5286 . 24) (undo-tree-id5287 . -11) (undo-tree-id5288 . 22) (undo-tree-id5289 . 23) (undo-tree-id5290 . -12) (undo-tree-id5291 . 21) (undo-tree-id5292 . 22) (undo-tree-id5293 . -13) (undo-tree-id5294 . 20) (undo-tree-id5295 . 21) (undo-tree-id5296 . -14) (undo-tree-id5297 . 19) (undo-tree-id5298 . 20) (undo-tree-id5299 . -15) (undo-tree-id5300 . 18) (undo-tree-id5301 . 19) (undo-tree-id5302 . -16) (undo-tree-id5303 . 17) (undo-tree-id5304 . 18) (undo-tree-id5305 . -17) (undo-tree-id5306 . 16) (undo-tree-id5307 . 17) (undo-tree-id5308 . -18) (undo-tree-id5309 . 15) (undo-tree-id5310 . 16) (undo-tree-id5311 . -19) (undo-tree-id5312 . 14) (undo-tree-id5313 . 15) (undo-tree-id5314 . -20) (undo-tree-id5315 . 13) (undo-tree-id5316 . 14) (undo-tree-id5317 . -21) (undo-tree-id5318 . 12) (undo-tree-id5319 . 13) (undo-tree-id5320 . -22) (undo-tree-id5321 . 11) (undo-tree-id5322 . 12) (undo-tree-id5323 . -23) (undo-tree-id5324 . 10) (undo-tree-id5325 . 11) (undo-tree-id5326 . -24) (undo-tree-id5327 . 9) (undo-tree-id5328 . 10) (undo-tree-id5329 . -25) (undo-tree-id5330 . 8) (undo-tree-id5331 . 9) (undo-tree-id5332 . -26) (undo-tree-id5333 . 7) (undo-tree-id5334 . 8) (undo-tree-id5335 . -27) (undo-tree-id5336 . 6) (undo-tree-id5337 . 7) (undo-tree-id5338 . -28) (undo-tree-id5339 . 5) (undo-tree-id5340 . 6) (undo-tree-id5341 . -29) (undo-tree-id5342 . 4) (undo-tree-id5343 . 5) (undo-tree-id5344 . -30) (undo-tree-id5345 . 3) (undo-tree-id5346 . 4) (undo-tree-id5347 . -31) (undo-tree-id5348 . 2) (undo-tree-id5349 . 3) (undo-tree-id5350 . -32) (undo-tree-id5351 . 1) (undo-tree-id5352 . 2) (undo-tree-id5353 . -33) (undo-tree-id5354 . 1) (undo-tree-id5355 . -34)) (23394 2732 588855 0) 0 nil]) ((1653 . 1687) (#("                            " 0 28 (fontified t)) . 1653) (undo-tree-id5618 . 3) (undo-tree-id5619 . 3)) ((1653 . 1681) (#("                                  " 0 34 (fontified t)) . 1653) (undo-tree-id5356 . 34) (undo-tree-id5357 . 34) (undo-tree-id5358 . 34) (undo-tree-id5359 . 34)) (23394 2732 505022 0) 0 nil]) ((1575 . 1582)) ((#("return " 0 6 (font-lock-face font-lock-keyword-face fontified t) 6 7 (fontified t)) . 1575)) (23394 2732 420627 0) 0 nil]) ((#(" " 0 1 (fontified t)) . 1576) (undo-tree-id5607 . -1) (undo-tree-id5608 . -1) (undo-tree-id5609 . -1) (undo-tree-id5610 . 1) (undo-tree-id5611 . 1) (undo-tree-id5612 . 1) (undo-tree-id5613 . 1) (undo-tree-id5614 . 1) (undo-tree-id5615 . 1) (undo-tree-id5616 . 1) (undo-tree-id5617 . 1)) ((1576 . 1577)) (23394 2732 336608 0) 0 nil]) ((#("                 " 0 17 (fontified t)) . 1577) (undo-tree-id5606 . 17)) ((1577 . 1594)) (23394 2732 252688 0) 0 nil]) ((1557 . 1575) (1746 . 1747) (1791 . 1792) (1557 . 1558)) ((#("(" 0 1 (fontified nil face (rainbow-delimiters-depth-8-face))) . 1557) (undo-tree-id5360 . -1) (undo-tree-id5361 . -1) (undo-tree-id5362 . -1) (undo-tree-id5363 . 1) (undo-tree-id5364 . 1) (undo-tree-id5365 . 1) (undo-tree-id5366 . 1) (#(")" 0 1 (fontified nil face (rainbow-delimiters-depth-8-face))) . 1791) (#(" " 0 1 (fontified t help-echo #43# cursor-sensor-functions #1#)) . 1746) (#("                  " 0 18 (fontified t)) . 1557) (undo-tree-id5367 . 18) (undo-tree-id5368 . 18)) (23394 2732 171372 0) 0 nil]) ((#("{}" 0 1 (fontified t help-echo #45="missing ; before statement" cursor-sensor-functions #1# face (rainbow-delimiters-depth-8-face)) 1 2 (fontified t face (rainbow-delimiters-depth-8-face))) . 1790) (undo-tree-id5605 . 1)) ((1790 . 1792)) (23394 2732 84689 0) 0 nil]) ((#("  " 0 2 (help-echo #44="missing ; after statement" cursor-sensor-functions #1# fontified nil)) . 1745) (1792 . 1794) (#("{" 0 1 (font-lock-face rjsx-tag-bracket-face help-echo #44# cursor-sensor-functions #1# fontified nil)) . 1792) (1792 . 1793)) ((#("{" 0 1 (font-lock-face rjsx-tag-bracket-face help-echo #44# cursor-sensor-functions #1# fontified nil)) . 1792) (1792 . 1793) (#("{}" 0 1 (fontified nil help-echo #45# cursor-sensor-functions #1# face (rainbow-delimiters-depth-8-face)) 1 2 (fontified nil face (rainbow-delimiters-depth-8-face))) . 1792) (undo-tree-id5369 . -1) (undo-tree-id5370 . -1) (undo-tree-id5371 . -1) (undo-tree-id5372 . 1) (1745 . 1747)) (23394 2732 4010 0) 0 nil] [nil nil ((#("<line id={`str${number}`} y2={string[number.y]} y1={string[number.y]}
                            x1={string[number.x1]} x2={string[number.x2]}
                  " 0 1 (fontified t font-lock-face rjsx-tag-bracket-face) 1 4 (fontified t font-lock-face rjsx-tag) 4 5 (fontified t font-lock-face rjsx-tag) 5 6 (fontified t) 6 8 (fontified t font-lock-face rjsx-attr) 8 9 (fontified t) 9 10 (fontified t face (rainbow-delimiters-depth-8-face)) 10 11 (fontified t font-lock-face font-lock-string-face) 11 15 (fontified t font-lock-face font-lock-string-face) 15 16 (fontified t font-lock-face font-lock-string-face) 16 22 (fontified t) 22 23 (fontified t font-lock-face font-lock-string-face) 23 24 (fontified t font-lock-face font-lock-string-face) 24 25 (fontified t face (rainbow-delimiters-depth-8-face)) 25 26 (fontified t) 26 28 (fontified t font-lock-face rjsx-attr) 28 29 (fontified t) 29 30 (fontified t face (rainbow-delimiters-depth-8-face)) 30 36 (fontified t) 36 37 (fontified t face (rainbow-delimiters-depth-9-face)) 37 43 (fontified t) 43 44 (fontified t) 44 45 (fontified t font-lock-face js2-object-property-access) 45 46 (fontified t face (rainbow-delimiters-depth-9-face)) 46 47 (fontified t face (rainbow-delimiters-depth-8-face)) 47 48 (fontified t) 48 50 (fontified t font-lock-face rjsx-attr) 50 51 (fontified t) 51 52 (fontified t face (rainbow-delimiters-depth-8-face)) 52 58 (fontified t) 58 59 (fontified t face (rainbow-delimiters-depth-9-face)) 59 65 (fontified t) 65 66 (fontified t) 66 67 (fontified t font-lock-face js2-object-property-access) 67 68 (fontified t face (rainbow-delimiters-depth-9-face)) 68 69 (rear-nonsticky t fontified t face (rainbow-delimiters-depth-8-face)) 69 70 (fontified t) 70 98 (fontified t) 98 100 (font-lock-face rjsx-attr fontified t) 100 101 (fontified t) 101 102 (fontified t face (rainbow-delimiters-depth-8-face)) 102 107 (fontified t) 107 108 (fontified t) 108 109 (fontified t face (rainbow-delimiters-depth-9-face)) 109 115 (fontified t) 115 116 (fontified t) 116 118 (font-lock-face js2-object-property-access fontified t) 118 119 (fontified t face (rainbow-delimiters-depth-9-face)) 119 120 (fontified t face (rainbow-delimiters-depth-8-face)) 120 121 (fontified t) 121 123 (font-lock-face rjsx-attr fontified t) 123 124 (fontified t) 124 125 (fontified t face (rainbow-delimiters-depth-8-face)) 125 131 (fontified t) 131 132 (fontified t face (rainbow-delimiters-depth-9-face)) 132 138 (fontified t) 138 139 (fontified t) 139 141 (font-lock-face js2-object-property-access fontified t) 141 142 (fontified t face (rainbow-delimiters-depth-9-face)) 142 143 (rear-nonsticky t fontified t face (rainbow-delimiters-depth-8-face)) 143 144 (fontified t) 144 162 (help-echo "missing ; after statement" cursor-sensor-functions #1# fontified t)) . -1575) (undo-tree-id1994 . -162) (undo-tree-id1995 . -55) (undo-tree-id1996 . -70) (undo-tree-id1997 . -107) (undo-tree-id1998 . -162) (undo-tree-id1999 . 153) (undo-tree-id2000 . 153) (undo-tree-id2001 . -9) (undo-tree-id2002 . -9) (undo-tree-id2003 . 19) (undo-tree-id2004 . -143) (undo-tree-id2005 . 19) (undo-tree-id2006 . 19) (undo-tree-id2007 . -143) (undo-tree-id2008 . 19) (undo-tree-id2009 . 75) (undo-tree-id2010 . -87) (undo-tree-id2011 . 75) (undo-tree-id2012 . 161) (undo-tree-id2013 . -1) (undo-tree-id2014 . 160) (undo-tree-id2015 . 161) (undo-tree-id2016 . -2) (undo-tree-id2017 . 69) (undo-tree-id2018 . 160) (undo-tree-id2019 . -93) (undo-tree-id2020 . 68) (undo-tree-id2021 . 69) (undo-tree-id2022 . -94) (undo-tree-id2023 . 68) (undo-tree-id2024 . 76) (undo-tree-id2025 . 76) (undo-tree-id2026 . -86) (undo-tree-id2027 . -86) (undo-tree-id2028 . -1) (undo-tree-id2029 . 74) (undo-tree-id2030 . -88) (undo-tree-id2031 . 74) (undo-tree-id2032 . 74) (undo-tree-id2033 . -88) (undo-tree-id2034 . 162) (undo-tree-id2035 . 74) (undo-tree-id2036 . 162) (undo-tree-id2037 . 162) (undo-tree-id2038 . 161) (undo-tree-id2039 . 162) (undo-tree-id2040 . -1) (undo-tree-id2041 . 160) (undo-tree-id2042 . 161) (undo-tree-id2043 . -2) (undo-tree-id2044 . 67) (undo-tree-id2045 . 160) (undo-tree-id2046 . -95) (undo-tree-id2047 . 64) (undo-tree-id2048 . 67) (undo-tree-id2049 . -98) (undo-tree-id2050 . 64) (undo-tree-id2051 . 155) (undo-tree-id2052 . -7) (undo-tree-id2053 . 156) (undo-tree-id2054 . 155) (undo-tree-id2055 . -6) (undo-tree-id2056 . 156) (undo-tree-id2057 . 154) (undo-tree-id2058 . -8) (undo-tree-id2059 . 64) (undo-tree-id2060 . 154) (undo-tree-id2061 . -98) (undo-tree-id2062 . 64) (undo-tree-id2063 . 64) (undo-tree-id2064 . -98) (undo-tree-id2065 . 64) (undo-tree-id2066 . 64) (undo-tree-id2067 . -98) (undo-tree-id2068 . 154) (undo-tree-id2069 . 64) (undo-tree-id2070 . -8) (undo-tree-id2071 . 154) (undo-tree-id2072 . 154) (undo-tree-id2073 . -8) (undo-tree-id2074 . 154) (undo-tree-id2075 . 154) (undo-tree-id2076 . -8) (undo-tree-id2077 . 64) (undo-tree-id2078 . 154) (undo-tree-id2079 . -98) (undo-tree-id2080 . 64) (undo-tree-id2081 . 64) (undo-tree-id2082 . -98) (undo-tree-id2083 . 64) (undo-tree-id2084 . 68) (undo-tree-id2085 . -94) (undo-tree-id2086 . 158) (undo-tree-id2087 . 68) (undo-tree-id2088 . -4) (undo-tree-id2089 . 158) (undo-tree-id2090 . 158) (undo-tree-id2091 . -4) (undo-tree-id2092 . 159) (undo-tree-id2093 . 158) (undo-tree-id2094 . -3) (undo-tree-id2095 . 160) (undo-tree-id2096 . 159) (undo-tree-id2097 . -2) (undo-tree-id2098 . 161) (undo-tree-id2099 . 160) (undo-tree-id2100 . -1) (undo-tree-id2101 . 162) (undo-tree-id2102 . 161) (undo-tree-id2103 . 160) (undo-tree-id2104 . 162) (undo-tree-id2105 . -2) (undo-tree-id2106 . 160) (undo-tree-id2107 . 160) (undo-tree-id2108 . -2) (undo-tree-id2109 . 161) (undo-tree-id2110 . 160) (undo-tree-id2111 . -1) (undo-tree-id2112 . 162) (undo-tree-id2113 . 161) (undo-tree-id2114 . 162) (undo-tree-id2115 . 162) (undo-tree-id2116 . 162) (undo-tree-id2117 . 162) (undo-tree-id2118 . -144) (undo-tree-id2119 . -144) (undo-tree-id2120 . 162) (undo-tree-id2121 . 162) (undo-tree-id2122 . 162) (undo-tree-id2123 . 162) (undo-tree-id2124 . -162) (undo-tree-id2125 . 74) (undo-tree-id2126 . 162) (undo-tree-id2127 . -88) (undo-tree-id2128 . 74) (undo-tree-id2129 . -162) (undo-tree-id2130 . -162) 1737) ((1575 . 1737)) (23394 2002 821551 0) 0 nil]) ((#("()" 0 1 (fontified t help-echo #46="missing `}' after expression" cursor-sensor-functions #1# face (rainbow-delimiters-depth-8-face)) 1 2 (fontified t help-echo #47="syntax error" cursor-sensor-functions #1# face (rainbow-delimiters-depth-8-face))) . 1575) (undo-tree-id5603 . 1) (undo-tree-id5604 . 2)) ((1575 . 1577)) (23394 2731 916754 0) 0 nil]) ((#("  " 0 2 (fontified nil)) . 1575) (1577 . 1579) (#("(" 0 1 (fontified nil)) . 1577) (1577 . 1578)) ((#("(" 0 1 (fontified nil)) . 1577) (1577 . 1578) (#("()" 0 1 (fontified nil help-echo #46# cursor-sensor-functions #1# face (rainbow-delimiters-depth-8-face)) 1 2 (fontified nil help-echo #47# cursor-sensor-functions #1# face (rainbow-delimiters-depth-8-face))) . 1577) (undo-tree-id5373 . -1) (undo-tree-id5374 . -1) (undo-tree-id5375 . -1) (undo-tree-id5376 . 1) (1575 . 1577)) (23394 2731 836126 0) 0 nil]) ((1819 . 1841) (#("              " 0 14 (fontified t)) . 1819)) ((1819 . 1833) (#("                      " 0 14 (help-echo "anonymous function does not always return a value" cursor-sensor-functions #1# fontified t) 14 22 (fontified t help-echo #48# cursor-sensor-functions #1#)) . 1819) (undo-tree-id5377 . 5) (undo-tree-id5378 . 5)) (23394 2731 750153 0) 0 nil]) ((#(" =>" 0 1 (fontified t) 1 2 (fontified t help-echo #51="syntax error" cursor-sensor-functions #1# composition #49=(0 2 #23#) prettify-symbols-start 1525 prettify-symbols-end 1527) 2 3 (fontified t help-echo #50="syntax error" cursor-sensor-functions #1# font-lock-face nil composition #49# prettify-symbols-start 1525 prettify-symbols-end 1527)) . 1524) (undo-tree-id5557 . -2) (undo-tree-id5558 . -2) (undo-tree-id5559 . -2) (undo-tree-id5560 . 1) (undo-tree-id5561 . 1) (undo-tree-id5562 . 3) (undo-tree-id5563 . 3) (undo-tree-id5564 . 3) (undo-tree-id5565 . 3) (undo-tree-id5566 . 3) (undo-tree-id5567 . 3) (undo-tree-id5568 . 3) (undo-tree-id5569 . 3) (undo-tree-id5570 . 3) (undo-tree-id5571 . 3) (undo-tree-id5572 . 3) (undo-tree-id5573 . 3) (undo-tree-id5574 . 3) (undo-tree-id5575 . 3) (undo-tree-id5576 . 3) (undo-tree-id5577 . 3) (undo-tree-id5578 . 3) (undo-tree-id5579 . 3) (undo-tree-id5580 . 3) (undo-tree-id5581 . 3) (undo-tree-id5582 . 3) (undo-tree-id5583 . 3) (undo-tree-id5584 . 3) (undo-tree-id5585 . 3) (undo-tree-id5586 . 3) (undo-tree-id5587 . 3) (undo-tree-id5588 . 3) (undo-tree-id5589 . 3) (undo-tree-id5590 . 3) (undo-tree-id5591 . 3) (undo-tree-id5592 . 3) (undo-tree-id5593 . 3) (undo-tree-id5594 . 3) (undo-tree-id5595 . 3) (undo-tree-id5596 . 3) (undo-tree-id5597 . 2) (undo-tree-id5598 . 3) (undo-tree-id5599 . 1) (undo-tree-id5600 . 2) (undo-tree-id5601 . 1) (undo-tree-id5602 . 1)) ((1524 . 1527)) (23394 2731 665662 0) 0 nil]) ((#(" " 0 1 (fontified t help-echo #52="missing `}' after expression" cursor-sensor-functions #1#)) . 1526)) ((1526 . 1527)) (23394 2731 581492 0) 0 nil]) ((1528 . 1529)) ((#(" " 0 1 (fontified t)) . 1528) (undo-tree-id5379 . 1) (undo-tree-id5380 . 1)) (23394 2731 497886 0) 0 nil]) ((nil font-lock-face rjsx-text 1527 . 1528) (1527 . 1528)) ((#(">" 0 1 (fontified nil help-echo #50# cursor-sensor-functions #1# font-lock-face rjsx-text)) . 1527) (undo-tree-id5381 . -1) (undo-tree-id5382 . -1) (undo-tree-id5383 . -1) (undo-tree-id5384 . 1) (undo-tree-id5385 . 1) (nil fontified nil 1527 . 1528) (nil font-lock-face nil 1527 . 1528)) (23394 2731 415219 0) 0 nil]) ((1525 . 1527)) ((#("= " 0 1 (fontified t help-echo #51# cursor-sensor-functions #1#) 1 2 (fontified t help-echo #52# cursor-sensor-functions #1#)) . 1525) (undo-tree-id5386 . -2) (undo-tree-id5387 . -2) (undo-tree-id5388 . -2)) (23394 2731 330642 0) 0 nil]) ((#(">" 0 1 (fontified t help-echo #56="syntax error" cursor-sensor-functions #1#)) . 1524) (undo-tree-id5546 . 1) (undo-tree-id5547 . 1) (undo-tree-id5548 . 1) (undo-tree-id5549 . 1) (undo-tree-id5550 . 1) (undo-tree-id5551 . 1) (undo-tree-id5552 . 1) (undo-tree-id5553 . 1) (undo-tree-id5554 . 1) (undo-tree-id5555 . 1) (undo-tree-id5556 . 1)) ((1524 . 1525)) (23394 2731 246440 0) 0 nil]) ((nil prettify-symbols-start 1522 1523 . 1524) (nil prettify-symbols-end 1524 1523 . 1524) (1523 . 1524)) ((#(">" 0 1 (fontified nil prettify-symbols-start 1522 prettify-symbols-end 1524)) . 1523) (nil prettify-symbols-end nil 1523 . 1524) (nil prettify-symbols-start nil 1523 . 1524)) (23394 2731 163883 0) 0 nil]) ((#("/" 0 1 (fontified t font-lock-face font-lock-string-face syntax-table #54=(7 . 47) help-echo #53="missing `}' after expression" cursor-sensor-functions #1#)) . 1523) (undo-tree-id5538 . 1) (undo-tree-id5539 . 1) (undo-tree-id5540 . 1) (undo-tree-id5541 . 1) (undo-tree-id5542 . 1) (undo-tree-id5543 . 1) (undo-tree-id5544 . 1) (undo-tree-id5545 . 1)) ((1523 . 1524)) (23394 2731 79080 0) 0 nil]) ((#("<" 0 1 (fontified t font-lock-face rjsx-tag-bracket-face help-echo #55="syntax error" cursor-sensor-functions #1#)) . 1523) (undo-tree-id5536 . 1) (undo-tree-id5537 . 1)) ((1523 . 1524)) (23394 2730 995369 0) 0 nil]) ((1523 . 1526)) ((#("</>" 0 1 (fontified t font-lock-face rjsx-tag-bracket-face help-echo #55# cursor-sensor-functions #1#) 1 2 (fontified t font-lock-face font-lock-string-face syntax-table #54# help-echo #53# cursor-sensor-functions #1#) 2 3 (fontified t help-echo #56# cursor-sensor-functions #1#)) . 1523) (undo-tree-id5389 . -1) (undo-tree-id5390 . -1) (undo-tree-id5391 . -1) (undo-tree-id5392 . 1) (undo-tree-id5393 . 2) (undo-tree-id5394 . 2) (undo-tree-id5395 . 2) (undo-tree-id5396 . 3)) (23394 2730 911485 0) 0 nil]) ((#(">" 0 1 (fontified t composition (0 2 #23#) prettify-symbols-start 1522 prettify-symbols-end 1524)) . 1523) (undo-tree-id5534 . 1) (undo-tree-id5535 . 1)) ((1523 . 1524)) (23394 2730 827728 0) 0 nil]) ((1523 . 1524)) ((#(">" 0 1 (fontified t composition (0 2 #23#) prettify-symbols-start 1522 prettify-symbols-end 1524)) . 1523) (undo-tree-id5397 . -1) (undo-tree-id5398 . -1) (undo-tree-id5399 . -1) (undo-tree-id5400 . 1)) (23394 2730 743582 0) 0 nil]) ((1522 . 1523)) ((#("=" 0 1 (fontified t)) . 1522) (undo-tree-id5401 . -1) (undo-tree-id5402 . -1) (undo-tree-id5403 . -1)) (23394 2730 659551 0) 0 nil]) ((#("=>" 0 1 (fontified t help-echo #58="missing `}' after expression" cursor-sensor-functions #1# composition #57=(0 2 #23#) prettify-symbols-start 1522 prettify-symbols-end 1524) 1 2 (fontified t composition #57# prettify-symbols-start 1522 prettify-symbols-end 1524)) . 1522) (undo-tree-id5526 . -2) (undo-tree-id5527 . -2) (undo-tree-id5528 . -2) (undo-tree-id5529 . 2) (undo-tree-id5530 . 2) (undo-tree-id5531 . 1) (undo-tree-id5532 . 2) (undo-tree-id5533 . 1)) ((1522 . 1524)) (23394 2730 575359 0) 0 nil]) ((1524 . 1525)) ((#(" " 0 1 (fontified t)) . 1524) (undo-tree-id5404 . 1) (undo-tree-id5405 . 1) (undo-tree-id5406 . 1) (undo-tree-id5407 . 1) (undo-tree-id5408 . 1) (undo-tree-id5409 . 1) (undo-tree-id5410 . 1) (undo-tree-id5411 . 1) (undo-tree-id5412 . 1) (undo-tree-id5413 . 1) (undo-tree-id5414 . 1) (undo-tree-id5415 . 1) (undo-tree-id5416 . 1) (undo-tree-id5417 . 1) (undo-tree-id5418 . 1) (undo-tree-id5419 . 1)) (23394 2730 491681 0) 0 nil]) ((1523 . 1524)) ((#(">" 0 1 (fontified t composition (0 2 #23#) prettify-symbols-start 1522 prettify-symbols-end 1524)) . 1523) (undo-tree-id5420 . -1) (undo-tree-id5421 . -1) (undo-tree-id5422 . -1)) (23394 2730 407593 0) 0 nil]) ((1522 . 1523)) ((#("=" 0 1 (fontified t help-echo #58# cursor-sensor-functions #1#)) . 1522) (undo-tree-id5423 . -1) (undo-tree-id5424 . -1) (undo-tree-id5425 . -1) (undo-tree-id5426 . 1)) (23394 2730 323577 0) 0 nil]) ((#("function" 0 8 (fontified t font-lock-face font-lock-keyword-face)) . 1505) (undo-tree-id5524 . 8) (undo-tree-id5525 . 8)) ((1505 . 1513)) (23394 2730 239413 0) 0 nil]) ((#(" =>" 0 1 (fontified t) 1 2 (fontified t help-echo "syntax error" cursor-sensor-functions #1# composition #59=(0 2 #23#) prettify-symbols-start 1530 prettify-symbols-end 1532) 2 3 (fontified t help-echo "syntax error" cursor-sensor-functions #1# composition #59# prettify-symbols-start 1530 prettify-symbols-end 1532)) . 1529)) ((1529 . 1532)) (23394 2730 155691 0) 0 nil]) ((1505 . 1513)) ((#("function" 0 8 (fontified t font-lock-face font-lock-keyword-face)) . 1505)) (23394 2730 71518 0) 0 nil]) ((#("
" 0 1 (fontified t)) . 833) (undo-tree-id5508 . 1) (undo-tree-id5509 . 1) (undo-tree-id5510 . 1) (undo-tree-id5511 . 1) (undo-tree-id5512 . 1) (undo-tree-id5513 . 1) (undo-tree-id5514 . 1) (undo-tree-id5515 . 1) (undo-tree-id5516 . 1) (undo-tree-id5517 . 1) (undo-tree-id5518 . 1) (undo-tree-id5519 . 1) (undo-tree-id5520 . 1) (undo-tree-id5521 . 1) (undo-tree-id5522 . 1) (undo-tree-id5523 . 1)) ((833 . 834)) (23394 2729 987642 0) 0 nil]) ((#("      " 0 6 (fontified t)) . 844) (undo-tree-id5507 . 6)) ((844 . 850)) (23394 2729 903352 0) 0 nil]) ((844 . 864)) ((#("      return string;" 0 6 (fontified t) 6 7 (font-lock-face font-lock-keyword-face fontified t) 7 12 (font-lock-face font-lock-keyword-face fontified t) 12 13 (fontified t) 13 19 (fontified t) 19 20 (fontified t)) . 844) (undo-tree-id5427 . -20) (undo-tree-id5428 . -20) (undo-tree-id5429 . -20) (undo-tree-id5430 . -13) (undo-tree-id5431 . -19)) (23394 2729 819653 0) 0 nil]) ((839 . 844)) ((#("
    " 0 1 (fontified t) 1 5 (fontified t)) . 839) (undo-tree-id5432 . -5) (undo-tree-id5433 . -5) (undo-tree-id5434 . -5)) (23394 2729 735787 0) 0 nil]) ((#("      return string;" 0 6 (fontified t) 6 12 (font-lock-face font-lock-keyword-face fontified t) 12 20 (fontified t)) . 833) (undo-tree-id5495 . 20) (undo-tree-id5496 . 20) (undo-tree-id5497 . 20) (undo-tree-id5498 . 20) (undo-tree-id5499 . 20) (undo-tree-id5500 . 20) (undo-tree-id5501 . 20) (undo-tree-id5502 . 20) (undo-tree-id5503 . 20) (undo-tree-id5504 . 20) (undo-tree-id5505 . 20) (undo-tree-id5506 . 20)) ((833 . 853)) (23394 2729 651709 0) 0 nil]) ((683 . 684)) ((#(" " 0 1 (fontified t)) . 683)) (23394 2729 575101 0) 0 nil]) ((#("
" 0 1 (fontified t)) . 832) (undo-tree-id5487 . 1) (undo-tree-id5488 . 1) (undo-tree-id5489 . 1) (undo-tree-id5490 . 1) (undo-tree-id5491 . 1) (undo-tree-id5492 . 1) (undo-tree-id5493 . 1) (undo-tree-id5494 . 1)) ((832 . 833)) (23394 2729 66478 0) 0 nil] [nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil nil ((#("?" 0 1 (fontified t help-echo "invalid property id" cursor-sensor-functions #1#)) . -508) (undo-tree-id1795 . -1) (undo-tree-id1796 . -1) (undo-tree-id1797 . -1) (undo-tree-id1798 . -1) (undo-tree-id1799 . -1) (undo-tree-id1800 . -1) (undo-tree-id1801 . -1) (#("?" 0 1 (fontified t help-echo "invalid property id" cursor-sensor-functions #1#)) . -509) (undo-tree-id1802 . -1) (undo-tree-id1803 . -1) (undo-tree-id1804 . -1) (undo-tree-id1805 . -1) (undo-tree-id1806 . -1) 510) ((508 . 510)) (23394 759 43130 0) 0 nil]) ((508 . 510)) ((#("??" 0 1 (fontified t help-echo "invalid property id" cursor-sensor-functions #1#) 1 2 (fontified t help-echo "invalid property id" cursor-sensor-functions #1#)) . 508) (undo-tree-id1847 . -2) (undo-tree-id1848 . -2) (undo-tree-id1849 . -1) (undo-tree-id1850 . -2) (undo-tree-id1851 . -1) (undo-tree-id1852 . -2)) (23394 759 43462 0) 0 nil]) ((#("*" 0 1 (fontified t)) . 439) (undo-tree-id1807 . -1) (#("/" 0 1 (fontified t font-lock-face font-lock-comment-face help-echo "unterminated comment" cursor-sensor-functions #1#)) . 439) (undo-tree-id1808 . -1)) ((439 . 440) (439 . 440)) (23394 759 387255 0) 0 nil]) ((#("p" 0 1 (fontified t font-lock-face font-lock-comment-face help-echo "unterminated comment" cursor-sensor-functions #1#)) . -506) (undo-tree-id1809 . -1) (undo-tree-id1810 . -1) (undo-tree-id1811 . -1) (undo-tree-id1812 . -1) (undo-tree-id1813 . -1) (#("p" 0 1 (fontified t font-lock-face font-lock-comment-face help-echo "unterminated comment" cursor-sensor-functions #1#)) . -507) (undo-tree-id1814 . -1) (undo-tree-id1815 . -1) (undo-tree-id1816 . -1) 508) ((506 . 508)) (23394 759 755313 0) 0 nil]) ((506 . 508)) ((#("pp" 0 1 (fontified t font-lock-face font-lock-comment-face help-echo #60="unterminated comment" cursor-sensor-functions #1#) 1 2 (fontified t font-lock-face font-lock-comment-face help-echo #60# cursor-sensor-functions #1#)) . 506) (undo-tree-id1853 . -2) (undo-tree-id1854 . -2) (undo-tree-id1855 . -2)) (23394 760 280506 0) 0 nil]) ((#("*" 0 1 (fontified t font-lock-face font-lock-comment-face help-echo "unterminated comment" cursor-sensor-functions #1#)) . -506) (undo-tree-id1817 . -1) (undo-tree-id1818 . -1) (undo-tree-id1819 . -1) (undo-tree-id1820 . -1) (undo-tree-id1821 . -1) (undo-tree-id1822 . -1) (#("/" 0 1 (fontified t font-lock-face font-lock-comment-face)) . -507) (undo-tree-id1823 . -1) (undo-tree-id1824 . -1) (undo-tree-id1825 . -1) (undo-tree-id1826 . -1) 508) ((506 . 508)) (23394 760 691295 0) 0 nil]) ((506 . 508)) ((#("*/" 0 1 (fontified t font-lock-face font-lock-comment-face) 1 2 (fontified t font-lock-face font-lock-comment-face)) . 506) (undo-tree-id1856 . -2) (undo-tree-id1857 . -2) (undo-tree-id1858 . -2) (undo-tree-id1859 . -2)) (23394 761 35244 0) 0 nil]) ((#("*" 0 1 (fontified t font-lock-face font-lock-comment-face help-echo "unterminated comment" cursor-sensor-functions #1#)) . -485) (undo-tree-id1827 . -1) (undo-tree-id1828 . -1) (undo-tree-id1829 . -1) (undo-tree-id1830 . -1) (undo-tree-id1831 . -1) (undo-tree-id1832 . -1) (#("/" 0 1 (fontified t font-lock-face font-lock-comment-face)) . -486) (undo-tree-id1833 . -1) (undo-tree-id1834 . -1) (undo-tree-id1835 . -1) (undo-tree-id1836 . -1) 487) ((485 . 487)) (23394 761 564704 0) 0 nil]) ((485 . 487)) ((#("*/" 0 1 (fontified t font-lock-face font-lock-comment-face) 1 2 (fontified t font-lock-face font-lock-comment-face)) . 485) (undo-tree-id5473 . 2)) (23394 2726 825622 0) 0 nil]) ((439 . 441)) ((#("/*" 0 1 (fontified t font-lock-face font-lock-comment-face help-echo #61="unterminated comment" cursor-sensor-functions #1#) 1 2 (fontified t font-lock-face font-lock-comment-face help-echo #61# cursor-sensor-functions #1#)) . 439) (undo-tree-id5474 . 2) (undo-tree-id5475 . 2)) (23394 2727 82621 0) 0 nil]) ((#("//" 0 1 (fontified t font-lock-face font-lock-comment-face) 1 2 (fontified t font-lock-face font-lock-comment-face)) . 400) (undo-tree-id5472 . 2)) ((400 . 402)) (23394 2727 592315 0) 0 nil]) ((400 . 402)) ((#("//" 0 1 (fontified t font-lock-face font-lock-comment-face) 1 2 (fontified t font-lock-face font-lock-comment-face)) . 400) (undo-tree-id5476 . 2) (undo-tree-id5477 . 2)) (23394 2727 666781 0) 0 nil]) ((400 . 402)) ((#("//" 0 1 (fontified t font-lock-face font-lock-comment-face) 1 2 (fontified t font-lock-face font-lock-comment-face)) . 400) (undo-tree-id5478 . 2) (undo-tree-id5479 . 2) (undo-tree-id5480 . 2) (undo-tree-id5481 . 2) (undo-tree-id5482 . 2) (undo-tree-id5483 . 2) (undo-tree-id5484 . 2) (undo-tree-id5485 . 2) (undo-tree-id5486 . 2)) (23394 2727 751062 0) 0 nil]) ((#("extends " 0 7 (fontified t font-lock-face font-lock-keyword-face) 7 8 (fontified t)) . 373) (undo-tree-id5469 . -8) (undo-tree-id5470 . -8) (undo-tree-id5471 . -8)) ((373 . 381)) (23394 2727 834728 0) 0 nil]) ((#("Component" 0 9 (fontified t)) . 381)) ((381 . 390)) (23394 2727 918394 0) 0 nil]) ((#("
" 0 1 (fontified t)) . 877)) ((877 . 878)) (23394 2728 410300 0) 0 nil]) ((1814 . 1820)) ((#("      " 0 6 (fontified t)) . 1814)) (23394 2724 994090 0) 0 nil]) ((#("
" 0 1 (fontified t)) . 1560) (undo-tree-id5467 . 1) (undo-tree-id5468 . 1)) ((1560 . 1561)) (23394 2724 909791 0) 0 nil]) ((#("      " 0 6 (fontified t)) . 510) (undo-tree-id5466 . 6)) ((510 . 516)) (23394 2724 826205 0) 0 nil]) ((510 . 525)) ((#("      debugger;" 0 6 (fontified t) 6 14 (fontified t font-lock-face font-lock-keyword-face) 14 15 (fontified t)) . 510)) (23394 2724 742868 0) 0 nil]) ((505 . 510)) ((#("
    " 0 1 (fontified t) 1 5 (fontified t)) . 505) (undo-tree-id5435 . -5) (undo-tree-id5436 . 1) (undo-tree-id5437 . -4) (undo-tree-id5438 . 4) (undo-tree-id5439 . 1) (undo-tree-id5440 . -1) (undo-tree-id5441 . -1) (undo-tree-id5442 . -1) (undo-tree-id5443 . -5) (undo-tree-id5444 . -5) (undo-tree-id5445 . -1) (undo-tree-id5446 . 4) (undo-tree-id5447 . 4) (undo-tree-id5448 . 4) (undo-tree-id5449 . 4)) (23394 2724 659190 0) 0 nil]) ((#("      debugger;" 0 6 (fontified t) 6 14 (fontified t font-lock-face font-lock-keyword-face) 14 15 (fontified t)) . 818) (undo-tree-id5464 . 15) (undo-tree-id5465 . 15)) ((818 . 833)) (23394 2724 574980 0) 0 nil]) ((2430 . 2431)) ((#("
" 0 1 (fontified t)) . 2430)) (23394 2724 490972 0) 0 nil]) ((#("  " 0 2 (fontified nil)) . 2429) (2431 . 2432) (#("}" 0 1 (fontified nil)) . 2431) (2431 . 2432)) ((#("}" 0 1 (fontified nil)) . 2431) (2431 . 2432) (#("}" 0 1 (help-echo "missing ; after statement" cursor-sensor-functions #1# fontified nil face (rainbow-delimiters-depth-1-face))) . 2431) (undo-tree-id5450 . -1) (undo-tree-id5451 . -1) (undo-tree-id5452 . -1) (undo-tree-id5453 . -1) (2429 . 2431)) (23394 2724 410152 0) 0 nil]) ((2428 . 2431)) ((#("
  " 0 1 (fontified t) 1 3 (fontified t)) . 2428) (undo-tree-id5454 . -3) (undo-tree-id5455 . -3) (undo-tree-id5456 . -3) (undo-tree-id5457 . -1) (undo-tree-id5458 . -3)) (23394 2723 907039 0) 0 nil]) ((2427 . 2428)) ((#("1" 0 1 (fontified t)) . 2427) (undo-tree-id5459 . -1) (undo-tree-id5460 . -1) (undo-tree-id5461 . -1) (undo-tree-id5462 . -1) (undo-tree-id5463 . -1)) (23394 2723 682734 0) 0 nil]) ((" " . -2427) (undo-tree-id1376 . 1) (undo-tree-id1377 . -1) 833) nil (23394 2723 282857 0) 0 nil]) ((826 . 833)) nil (23393 65308 636554 0) 0 nil]) ((#("b" 0 1 (fontified t help-echo "missing ; after statement" cursor-sensor-functions #1#)) . -826) (undo-tree-id1378 . -1) (undo-tree-id1379 . -1) (undo-tree-id1380 . 1) (undo-tree-id1381 . -1) (undo-tree-id1382 . -1) (undo-tree-id1383 . -1) (undo-tree-id1384 . -1) (undo-tree-id1385 . -1) (undo-tree-id1386 . -1) (undo-tree-id1387 . -1) (undo-tree-id1388 . -1) (undo-tree-id1389 . -1) (undo-tree-id1390 . -1) (#("u" 0 1 (fontified t help-echo "missing ; after statement" cursor-sensor-functions #1#)) . -827) (undo-tree-id1391 . -1) (undo-tree-id1392 . -1) (undo-tree-id1393 . 1) (undo-tree-id1394 . -1) (undo-tree-id1395 . -1) (undo-tree-id1396 . -1) (undo-tree-id1397 . -1) (undo-tree-id1398 . -1) (undo-tree-id1399 . -1) (undo-tree-id1400 . -1) (undo-tree-id1401 . -1) (#("g" 0 1 (fontified t help-echo "missing ; after statement" cursor-sensor-functions #1#)) . -828) (undo-tree-id1402 . -1) (undo-tree-id1403 . -1) (undo-tree-id1404 . 1) (undo-tree-id1405 . -1) (undo-tree-id1406 . -1) (undo-tree-id1407 . -1) (undo-tree-id1408 . -1) (undo-tree-id1409 . -1) (undo-tree-id1410 . -1) (#("g" 0 1 (fontified t help-echo "missing ; after statement" cursor-sensor-functions #1#)) . -829) (undo-tree-id1411 . -1) (undo-tree-id1412 . -1) (undo-tree-id1413 . -1) (undo-tree-id1414 . -1) (undo-tree-id1415 . -1) (undo-tree-id1416 . 1) (undo-tree-id1417 . -1) 830) nil (23393 65308 636638 0) 0 nil]) ((826 . 830)) nil (23393 65308 636644 0) 0 nil]) ((#(" " 0 1 (fontified t)) . -826) (undo-tree-id1418 . -1) (undo-tree-id1419 . -1) (undo-tree-id1420 . 1) (undo-tree-id1421 . -1) (undo-tree-id1422 . -1) (undo-tree-id1423 . -1) (undo-tree-id1424 . -1) (undo-tree-id1425 . -1) (#("b" 0 1 (fontified t help-echo "missing ; before statement" cursor-sensor-functions #1#)) . -827) (undo-tree-id1426 . -1) (undo-tree-id1427 . -1) (undo-tree-id1428 . 1) (undo-tree-id1429 . -1) (undo-tree-id1430 . -1) (undo-tree-id1431 . -1) (undo-tree-id1432 . -1) (undo-tree-id1433 . -1) (undo-tree-id1434 . -1) (undo-tree-id1435 . -1) (#("u" 0 1 (fontified t help-echo "missing ; before statement" cursor-sensor-functions #1#)) . -828) (undo-tree-id1436 . -1) (undo-tree-id1437 . -1) (undo-tree-id1438 . -1) (undo-tree-id1439 . -1) (undo-tree-id1440 . -1) (undo-tree-id1441 . -1) (undo-tree-id1442 . 1) (undo-tree-id1443 . -1) 829) nil (23393 65308 636691 0) 0 nil]) ((826 . 829)) nil (23393 65308 636695 0) 0 nil]) ((#("g" 0 1 (fontified t help-echo "missing ; after statement" cursor-sensor-functions #1#)) . -826) (undo-tree-id1444 . -1) (undo-tree-id1445 . -1) (undo-tree-id1446 . -1) (undo-tree-id1447 . -1) (undo-tree-id1448 . -1) (undo-tree-id1449 . 1) (undo-tree-id1450 . -1) 827) nil (23393 65308 636706 0) 0 nil]) ((825 . 827)) nil (23393 65308 636709 0) 0 nil]) ((#("u" 0 1 (fontified t help-echo "missing ; after statement" cursor-sensor-functions #1#)) . -825) (undo-tree-id1451 . -1) (undo-tree-id1452 . -1) (undo-tree-id1453 . -1) (undo-tree-id1454 . -1) (undo-tree-id1455 . -1) (undo-tree-id1456 . 1) (undo-tree-id1457 . -1) 826) nil (23393 65308 636720 0) 0 nil]) ((824 . 826)) nil (23393 65308 636723 0) 0 nil]) ((817 . 824)) nil (23393 65308 636724 0) 0 nil]) ((#("
" 0 1 (fontified t)) . -862) (undo-tree-id1458 . -1) (undo-tree-id1459 . -1) (undo-tree-id1460 . -1) (undo-tree-id1461 . -1) (undo-tree-id1462 . -1) (undo-tree-id1463 . -1) 863) nil (23393 65308 636734 0) 0 nil]) ((2402 . 2413)) nil (23393 65308 636736 0) 0 nil]) ((2399 . 2402)) nil (23393 65308 636738 0) 0 nil]) ((2377 . 2382)) nil (23393 65308 636739 0) 0 nil]) ((#("oast" 0 4 (fontified t help-echo "Undeclared variable or function 'Toast'" cursor-sensor-functions #1#)) . 2377)) nil (23393 65308 636741 0) 0 nil]) ((nil rear-nonsticky nil 2397 . 2398) (2376 . 2398)) nil (23393 65308 636742 0) 0 nil]) ((2375 . 2376) (t 23393 61658 184981 157000)) nil (23393 65308 636744 0) 0 nil]) ((2440 . 2441) 2438) nil (23393 61658 163731 0) 0 nil]) ((2432 . 2438)) nil (23393 61658 163741 0) 0 nil]) ((#("t" 0 1 (fontified t help-echo "Undeclared variable or function 't'" cursor-sensor-functions #1#)) . -2432) (undo-tree-id1140 . -1) (undo-tree-id1141 . -1) (undo-tree-id1142 . -1) (undo-tree-id1143 . -1) (undo-tree-id1144 . 1) (undo-tree-id1145 . -1) 2433) nil (23393 61658 163778 0) 0 nil]) ((2432 . 2433)) nil (23393 61658 163782 0) 0 nil]) ((#("PathView" 0 8 (fontified t help-echo "Undeclared variable or function 'PathView'" cursor-sensor-functions #1#)) . -2432) (undo-tree-id1146 . -8) (undo-tree-id1147 . -8) (undo-tree-id1148 . -8) (undo-tree-id1149 . -8) 2440) nil (23393 61658 163788 0) 0 nil]) ((#("withStyles(" 0 10 (fontified t font-lock-face js2-function-call) 10 11 (fontified t face (rainbow-delimiters-depth-1-face))) . -2391) (undo-tree-id1150 . -11) (undo-tree-id1151 . -11) (undo-tree-id1152 . -11) (undo-tree-id1153 . -11) (undo-tree-id1154 . -11) (undo-tree-id1155 . -11) (undo-tree-id1156 . -11) (undo-tree-id1157 . -11) (undo-tree-id1158 . -11) (undo-tree-id1159 . -11) (undo-tree-id1160 . -11) (undo-tree-id1161 . -11) (undo-tree-id1162 . -11) (undo-tree-id1163 . -11) (undo-tree-id1164 . -11) (undo-tree-id1165 . -11) (undo-tree-id1166 . -11) (undo-tree-id1167 . -11) (undo-tree-id1168 . -11) (undo-tree-id1169 . -11) (undo-tree-id1170 . -11) (undo-tree-id1171 . -11) (undo-tree-id1172 . -11) (undo-tree-id1173 . -11) (undo-tree-id1174 . -11) (undo-tree-id1175 . -11) (undo-tree-id1176 . -11) (undo-tree-id1177 . -11) (undo-tree-id1178 . -11) (undo-tree-id1179 . -11) (undo-tree-id1180 . -11) (undo-tree-id1181 . -11) (undo-tree-id1182 . -11) (undo-tree-id1183 . 11) (undo-tree-id1184 . -1) (undo-tree-id1185 . 10) (undo-tree-id1186 . -2) (undo-tree-id1187 . 9) (undo-tree-id1188 . -3) (undo-tree-id1189 . 8) (undo-tree-id1190 . -4) (undo-tree-id1191 . 7) (undo-tree-id1192 . -5) (undo-tree-id1193 . 6) (undo-tree-id1194 . -6) (undo-tree-id1195 . 5) (undo-tree-id1196 . -7) (undo-tree-id1197 . 4) (undo-tree-id1198 . -8) (undo-tree-id1199 . 3) (undo-tree-id1200 . -9) (undo-tree-id1201 . -9) (undo-tree-id1202 . -9) (undo-tree-id1203 . 1) (undo-tree-id1204 . -11) (undo-tree-id1205 . -11) (undo-tree-id1206 . -11) (undo-tree-id1207 . -11) (undo-tree-id1208 . -11) (undo-tree-id1209 . -11) (undo-tree-id1210 . -11) (undo-tree-id1211 . -11) (undo-tree-id1212 . -11) (undo-tree-id1213 . -11) (undo-tree-id1214 . -11) (undo-tree-id1215 . -11) (undo-tree-id1216 . 1) (undo-tree-id1217 . -9) (undo-tree-id1218 . 1) (undo-tree-id1219 . 2) (undo-tree-id1220 . -10) (undo-tree-id1221 . 1) (undo-tree-id1222 . 1) (undo-tree-id1223 . -10) (undo-tree-id1224 . 1) (undo-tree-id1225 . 1) (undo-tree-id1226 . -10) (undo-tree-id1227 . 1) (undo-tree-id1228 . 1) (undo-tree-id1229 . -10) (undo-tree-id1230 . 1) (undo-tree-id1231 . 1) (undo-tree-id1232 . -10) (undo-tree-id1233 . -11) (undo-tree-id1234 . -11) (undo-tree-id1235 . -11) (undo-tree-id1236 . -11) (undo-tree-id1237 . -11) (undo-tree-id1238 . -11) (undo-tree-id1239 . -11) 2402) nil (23393 61658 163929 0) 0 nil]) ((#("TabBar);" 0 6 (fontified t) 6 7 (fontified t face (rainbow-delimiters-depth-1-face)) 7 8 (fontified t)) . -2402) (undo-tree-id1240 . -8) (undo-tree-id1241 . -8) (undo-tree-id1242 . -8) (undo-tree-id1243 . -8) (undo-tree-id1244 . -8) (undo-tree-id1245 . -8) (undo-tree-id1246 . -8) (undo-tree-id1247 . -8) (undo-tree-id1248 . -8) (undo-tree-id1249 . -8) (undo-tree-id1250 . -8) (undo-tree-id1251 . -8) (undo-tree-id1252 . -8) (undo-tree-id1253 . -8) (undo-tree-id1254 . -8) (undo-tree-id1255 . -8) (undo-tree-id1256 . -8) (undo-tree-id1257 . -8) (undo-tree-id1258 . -8) (undo-tree-id1259 . -8) (undo-tree-id1260 . -8) (undo-tree-id1261 . -8) (undo-tree-id1262 . -8) (undo-tree-id1263 . -8) (undo-tree-id1264 . -8) (undo-tree-id1265 . -8) (undo-tree-id1266 . -8) (undo-tree-id1267 . -8) (undo-tree-id1268 . -8) (undo-tree-id1269 . -8) (undo-tree-id1270 . -8) (undo-tree-id1271 . 7) (undo-tree-id1272 . -1) (undo-tree-id1273 . 7) (undo-tree-id1274 . 7) (undo-tree-id1275 . -1) (undo-tree-id1276 . 8) (undo-tree-id1277 . 7) (undo-tree-id1278 . 8) (undo-tree-id1279 . 8) (undo-tree-id1280 . 8) (undo-tree-id1281 . 8) (undo-tree-id1282 . 8) (undo-tree-id1283 . 8) (undo-tree-id1284 . 8) (undo-tree-id1285 . 8) (undo-tree-id1286 . 8) (undo-tree-id1287 . 8) (undo-tree-id1288 . 8) (undo-tree-id1289 . 8) (undo-tree-id1290 . 8) (undo-tree-id1291 . 8) (undo-tree-id1292 . 8) (undo-tree-id1293 . 8) (undo-tree-id1294 . 8) (undo-tree-id1295 . 8) (undo-tree-id1296 . 8) (undo-tree-id1297 . -8) (undo-tree-id1298 . 1) (undo-tree-id1299 . -6) (undo-tree-id1300 . 1) (undo-tree-id1301 . 2) (undo-tree-id1302 . -7) (undo-tree-id1303 . 2) (undo-tree-id1304 . 1) (undo-tree-id1305 . -6) (undo-tree-id1306 . 3) (undo-tree-id1307 . 2) (undo-tree-id1308 . -5) (undo-tree-id1309 . 4) (undo-tree-id1310 . 3) (undo-tree-id1311 . -4) (undo-tree-id1312 . 5) (undo-tree-id1313 . 4) (undo-tree-id1314 . -3) (undo-tree-id1315 . 6) (undo-tree-id1316 . 5) (undo-tree-id1317 . -2) (undo-tree-id1318 . 7) (undo-tree-id1319 . 6) (undo-tree-id1320 . -1) (undo-tree-id1321 . 8) (undo-tree-id1322 . 7) (undo-tree-id1323 . 8) (undo-tree-id1324 . -8) (undo-tree-id1325 . -8) (undo-tree-id1326 . -8) (undo-tree-id1327 . -8) (undo-tree-id1328 . -8) (undo-tree-id1329 . -8) 2410) nil (23393 61658 164052 0) 0 nil]) ((#("
" 0 1 (fontified t)) . -2410) (undo-tree-id1330 . -1) (undo-tree-id1331 . -1) (undo-tree-id1332 . -1) (undo-tree-id1333 . -1) (undo-tree-id1334 . -1) (undo-tree-id1335 . -1) (undo-tree-id1336 . 1) (undo-tree-id1337 . 1) (undo-tree-id1338 . -1) (undo-tree-id1339 . -1) (undo-tree-id1340 . -1) (undo-tree-id1341 . -1) (undo-tree-id1342 . -1) (undo-tree-id1343 . -1) (undo-tree-id1344 . -1) (undo-tree-id1345 . -1) (undo-tree-id1346 . -1) (undo-tree-id1347 . -1) (undo-tree-id1348 . -1) (undo-tree-id1349 . -1) (undo-tree-id1350 . -1) (undo-tree-id1351 . -1) (undo-tree-id1352 . -1) (undo-tree-id1353 . -1) (undo-tree-id1354 . -1) (undo-tree-id1355 . -1) (undo-tree-id1356 . -1) (undo-tree-id1357 . -1) (undo-tree-id1358 . -1) (undo-tree-id1359 . -1) (undo-tree-id1360 . -1) (undo-tree-id1361 . 1) (undo-tree-id1362 . 1) (undo-tree-id1363 . -1) (undo-tree-id1364 . -1) (undo-tree-id1365 . -1) (undo-tree-id1366 . -1) (undo-tree-id1367 . -1) 2411) nil (23393 61658 164097 0) 0 nil]) ((2411 . 2462)) nil (23393 61658 164101 0) 0 nil]) ((#(")" 0 1 (fontified t help-echo "missing ; before statement" cursor-sensor-functions #1# face (rainbow-delimiters-unmatched-face))) . -2401) (undo-tree-id1368 . -1) (undo-tree-id1369 . -1) (undo-tree-id1370 . 1) (undo-tree-id1371 . -1) (undo-tree-id1372 . -1) (undo-tree-id1373 . -1) (undo-tree-id1374 . 1) (undo-tree-id1375 . -1) 2402) nil (23393 61658 164115 0) 0 nil]) ((2401 . 2402) (#(")" 0 1 (fontified nil font-lock-face js2-function-call)) . -2401) (2401 . 2402) (t 23393 61587 437990 457000)) nil (23393 61658 164118 0) 0 nil]) ((2400 . 2401)) nil (23393 61587 416244 0) 0 nil]) ((2407 . 2408) (#(")" 0 1 (fontified nil)) . -2407) (2407 . 2408)) nil (23393 61587 416250 0) 0 nil]) ((#(")" 0 1 (fontified t face (rainbow-delimiters-depth-1-face))) . 2401) (undo-tree-id1124 . -1) (undo-tree-id1125 . 1)) nil (23393 61587 416260 0) 0 nil]) ((2400 . 2402) (#("(" 0 1 (fontified nil help-echo "Undeclared variable or function 'withStyleTabBar'" cursor-sensor-functions #1#)) . -2400) (2400 . 2401)) nil (23393 61587 416263 0) 0 nil]) ((#("9" 0 1 (fontified t help-echo "Undeclared variable or function 'withStyle9TabBar'" cursor-sensor-functions #1#)) . -2400) (undo-tree-id1126 . -1) (undo-tree-id1127 . -1) (undo-tree-id1128 . 1) (undo-tree-id1129 . -1) 2401) nil (23393 61587 416268 0) 0 nil]) ((2391 . 2401)) nil (23393 61587 416270 0) 0 nil]) ((#("e" 0 1 (font-lock-face font-lock-string-face help-echo "missing ; after statement" cursor-sensor-functions #1# fontified t)) . -1781) (undo-tree-id1130 . -1) (undo-tree-id1131 . -1) (undo-tree-id1132 . -1) (undo-tree-id1133 . -1) (undo-tree-id1134 . -1) (undo-tree-id1135 . -1) 1782) nil (23393 61587 416281 0) 0 nil]) ((1707 . 1708)) nil (23393 61587 416284 0) 0 nil]) ((#("1" 0 1 (fontified t font-lock-face js2-object-property-access)) . -1707) (undo-tree-id1136 . -1) (undo-tree-id1137 . -1) (undo-tree-id1138 . -1) (undo-tree-id1139 . -1) 1708) nil (23393 61587 416290 0) 0 nil] [nil nil ((#("=" 0 1 (fontified t)) . 1690) (undo-tree-id1092 . 1) (undo-tree-id1093 . 1) (undo-tree-id1094 . 1) (undo-tree-id1095 . 1)) ((1690 . 1691)) (23393 61547 222771 0) 0 nil]) ((1689 . 1690)) nil (23393 61547 223241 0) 0 nil]) ((#("1" 0 1 (fontified t font-lock-face rjsx-attr)) . 1689) (undo-tree-id1096 . 1) (undo-tree-id1097 . -1)) nil (23393 61547 222786 0) 0 nil]) ((#("                            " 0 28 (fontified t)) . -1688) (undo-tree-id1098 . -28) (undo-tree-id1099 . -28) (undo-tree-id1100 . 28) (undo-tree-id1101 . -28) (undo-tree-id1102 . -28) 1716) nil (23393 61547 222803 0) 0 nil]) ((nil rear-nonsticky nil 1737 . 1738) (1688 . 1738) (#("x2$=\"[[_rightStringX]]\"" 0 3 (font-lock-face rjsx-attr fontified t) 3 4 (fontified t) 4 5 (font-lock-face font-lock-string-face fontified t) 5 6 (font-lock-face font-lock-string-face fontified t) 6 7 (font-lock-face font-lock-string-face fontified t) 7 8 (font-lock-face font-lock-string-face fontified t) 8 20 (font-lock-face font-lock-string-face fontified t) 20 21 (font-lock-face font-lock-string-face fontified t) 21 22 (font-lock-face font-lock-string-face fontified t) 22 23 (font-lock-face font-lock-string-face fontified t)) . -1688) (undo-tree-id1103 . -23) (undo-tree-id1104 . -23) (undo-tree-id1105 . 23) (undo-tree-id1106 . -23) 1711) nil (23393 61547 222816 0) 0 nil]) ((1688 . 1711)) nil (23393 61547 222819 0) 0 nil]) ((#("x2$=\"[[_" 0 3 (fontified t font-lock-face rjsx-attr) 3 4 (fontified t) 4 5 (fontified t font-lock-face font-lock-string-face help-echo "unterminated string literal" cursor-sensor-functions #1#) 5 6 (fontified t font-lock-face font-lock-string-face help-echo #62="invalid JSX string (cannot contain delimiter in string body)" cursor-sensor-functions #1#) 6 7 (fontified t font-lock-face font-lock-string-face help-echo #62# cursor-sensor-functions #1#) 7 8 (fontified t font-lock-face font-lock-string-face help-echo #62# cursor-sensor-functions #1#)) . -1688) (undo-tree-id1107 . -8) (undo-tree-id1108 . -8) (undo-tree-id1109 . -8) (undo-tree-id1110 . -8) (undo-tree-id1111 . -8) (undo-tree-id1112 . -8) (undo-tree-id1113 . -4) (undo-tree-id1114 . -8) (undo-tree-id1115 . -4) (undo-tree-id1116 . -5) (undo-tree-id1117 . -8) 1696) nil (23393 61547 222839 0) 0 nil]) ((#("rightStringX]]\"" 0 12 (fontified t font-lock-face font-lock-string-face) 12 13 (fontified t font-lock-face font-lock-string-face) 13 14 (fontified t font-lock-face font-lock-string-face) 14 15 (fontified t font-lock-face font-lock-string-face)) . -1696) (undo-tree-id1118 . -15) (undo-tree-id1119 . -15) (undo-tree-id1120 . -15) (undo-tree-id1121 . -15) (undo-tree-id1122 . -15) (undo-tree-id1123 . -15) 1711) nil (23393 61547 222855 0) 0 nil] [nil nil ((#("                            x1={string[number.x1]}" 0 28 (fontified t) 28 30 (fontified t font-lock-face rjsx-attr) 30 31 (fontified t) 31 32 (fontified t face (rainbow-delimiters-depth-8-face)) 32 38 (fontified t) 38 39 (fontified t face (rainbow-delimiters-depth-9-face)) 39 45 (fontified t) 45 46 (fontified t) 46 48 (fontified t font-lock-face js2-object-property-access) 48 49 (fontified t face (rainbow-delimiters-depth-9-face)) 49 50 (fontified t face (rainbow-delimiters-depth-8-face))) . 1637) (undo-tree-id925 . -50) (undo-tree-id926 . -50) (undo-tree-id927 . -28) (undo-tree-id928 . -28) (undo-tree-id929 . -28) (undo-tree-id930 . -28) (undo-tree-id931 . 50) (undo-tree-id932 . 50) (undo-tree-id933 . 50) (undo-tree-id934 . 50) (undo-tree-id935 . 50) (undo-tree-id936 . 50) (undo-tree-id937 . 50) (undo-tree-id938 . 50) (undo-tree-id939 . -28) (undo-tree-id940 . -28) (undo-tree-id941 . -28) (undo-tree-id942 . -28) (undo-tree-id943 . -28) (undo-tree-id944 . -28) (undo-tree-id945 . -28) (undo-tree-id946 . -28) (undo-tree-id947 . -28) (undo-tree-id948 . -28) (undo-tree-id949 . -28) (undo-tree-id950 . 22) (undo-tree-id951 . -31) (undo-tree-id952 . -31) (undo-tree-id953 . -31) (undo-tree-id954 . -31) (undo-tree-id955 . 20) (undo-tree-id956 . -30) (undo-tree-id957 . 20) (undo-tree-id958 . 20) (undo-tree-id959 . -30) (undo-tree-id960 . 20) (undo-tree-id961 . 50) (undo-tree-id962 . 20) (undo-tree-id963 . 50) (undo-tree-id964 . -30) (undo-tree-id965 . 20) (undo-tree-id966 . -31) (undo-tree-id967 . 1) (undo-tree-id968 . 19) (undo-tree-id969 . -32) (undo-tree-id970 . 1) (undo-tree-id971 . 18) (undo-tree-id972 . -33) (undo-tree-id973 . 1) (undo-tree-id974 . 17) (undo-tree-id975 . -34) (undo-tree-id976 . 1) (undo-tree-id977 . 1) (undo-tree-id978 . -34) (undo-tree-id979 . 1) (undo-tree-id980 . 1) (undo-tree-id981 . -34) (undo-tree-id982 . 1) (undo-tree-id983 . 16) (undo-tree-id984 . -35) (undo-tree-id985 . 1) (undo-tree-id986 . 15) (undo-tree-id987 . -36) (undo-tree-id988 . 1) (undo-tree-id989 . 14) (undo-tree-id990 . -37) (undo-tree-id991 . 1) (undo-tree-id992 . 13) (undo-tree-id993 . -38) (undo-tree-id994 . 1) (undo-tree-id995 . 1) (undo-tree-id996 . -38) (undo-tree-id997 . 1) (undo-tree-id998 . 1) (undo-tree-id999 . -38) (undo-tree-id1000 . 2) (undo-tree-id1001 . 12) (undo-tree-id1002 . -39) (undo-tree-id1003 . 2) (undo-tree-id1004 . 11) (undo-tree-id1005 . -40) (undo-tree-id1006 . 2) (undo-tree-id1007 . 10) (undo-tree-id1008 . -41) (undo-tree-id1009 . 2) (undo-tree-id1010 . 9) (undo-tree-id1011 . -42) (undo-tree-id1012 . 2) (undo-tree-id1013 . 8) (undo-tree-id1014 . -43) (undo-tree-id1015 . 2) (undo-tree-id1016 . 7) (undo-tree-id1017 . -44) (undo-tree-id1018 . 2) (undo-tree-id1019 . 6) (undo-tree-id1020 . -45) (undo-tree-id1021 . 2) (undo-tree-id1022 . 5) (undo-tree-id1023 . -46) (undo-tree-id1024 . 2) (undo-tree-id1025 . 4) (undo-tree-id1026 . -47) (undo-tree-id1027 . 2) (undo-tree-id1028 . 3) (undo-tree-id1029 . -48) (undo-tree-id1030 . 1) (undo-tree-id1031 . 2) (undo-tree-id1032 . -49) (undo-tree-id1033 . 1) (undo-tree-id1034 . -50) (undo-tree-id1035 . -50) (undo-tree-id1036 . -50) (undo-tree-id1037 . 50)) ((1637 . 1687)) (23393 61537 553812 0) 0 nil]) ((1676 . 1685) (1675 . 1677) (#("[" 0 1 (fontified nil)) . -1675) (1675 . 1676)) nil (23393 61537 554317 0) 0 nil]) ((#("p" 0 1 (fontified t help-echo "Undeclared variable or function 'stringp'" cursor-sensor-functions #1#)) . -1675) (undo-tree-id1038 . -1) (undo-tree-id1039 . -1) (undo-tree-id1040 . -1) (undo-tree-id1041 . 1) (undo-tree-id1042 . -1) 1676) nil (23393 61537 553837 0) 0 nil]) ((1671 . 1676)) nil (23393 61537 553840 0) 0 nil]) ((#("i" 0 1 (fontified t help-echo "Undeclared variable or function 'sti'" cursor-sensor-functions #1#)) . -1671) (undo-tree-id1043 . -1) (undo-tree-id1044 . -1) (undo-tree-id1045 . -1) (undo-tree-id1046 . 1) (undo-tree-id1047 . -1) 1672) nil (23393 61537 553847 0) 0 nil]) ((1669 . 1672)) nil (23393 61537 553850 0) 0 nil]) ((1668 . 1670) (#("{" 0 1 (fontified nil help-echo "missing value after prop `x1'" cursor-sensor-functions #1#)) . -1668) (1668 . 1669)) nil (23393 61537 553852 0) 0 nil]) ((#("$" 0 1 (fontified t font-lock-face rjsx-attr help-echo "missing value after prop `x1$'" cursor-sensor-functions #1#)) . -1667) (undo-tree-id1048 . -1) (undo-tree-id1049 . -1) (undo-tree-id1050 . -1) (undo-tree-id1051 . -1) 1668) nil (23393 61537 553858 0) 0 nil]) ((#("\"" 0 1 (fontified t font-lock-face font-lock-string-face)) . -1669) (undo-tree-id1052 . -1) (undo-tree-id1053 . -1) (undo-tree-id1054 . -1) (undo-tree-id1055 . -1) (undo-tree-id1056 . -1) (undo-tree-id1057 . -1) (#("\"" 0 1 (fontified t font-lock-face font-lock-string-face)) . -1670) (undo-tree-id1058 . -1) (undo-tree-id1059 . -1) (undo-tree-id1060 . 1) (undo-tree-id1061 . 1) (undo-tree-id1062 . 1) (undo-tree-id1063 . 1) (undo-tree-id1064 . 1) (undo-tree-id1065 . 1) (undo-tree-id1066 . 1) (undo-tree-id1067 . 1) (undo-tree-id1068 . 1) (undo-tree-id1069 . 1) (undo-tree-id1070 . 1) (undo-tree-id1071 . 1) (undo-tree-id1072 . 1) (undo-tree-id1073 . 1) (undo-tree-id1074 . 1) (undo-tree-id1075 . 1) (undo-tree-id1076 . 1) (undo-tree-id1077 . 1) (undo-tree-id1078 . 1) (undo-tree-id1079 . 1) (undo-tree-id1080 . 1) (undo-tree-id1081 . 1) (undo-tree-id1082 . 1) (undo-tree-id1083 . 1) (undo-tree-id1084 . 1) (undo-tree-id1085 . 1) (undo-tree-id1086 . 1) (undo-tree-id1087 . 1) (undo-tree-id1088 . 1) (undo-tree-id1089 . 1) (undo-tree-id1090 . 1) (undo-tree-id1091 . -1) 1671) nil (23393 61537 553945 0) 0 nil] [nil nil ((#("x1$=\"" 0 3 (fontified t font-lock-face rjsx-attr) 3 4 (fontified t) 4 5 (fontified t font-lock-face font-lock-string-face)) . -1665) (undo-tree-id835 . -5) (undo-tree-id836 . -5) (undo-tree-id837 . -5) (undo-tree-id838 . 3) (undo-tree-id839 . -2) (undo-tree-id840 . 3) (undo-tree-id841 . 3) (undo-tree-id842 . -2) (undo-tree-id843 . 3) (undo-tree-id844 . 3) (undo-tree-id845 . -2) (undo-tree-id846 . 3) (undo-tree-id847 . -5) (undo-tree-id848 . 3) (undo-tree-id849 . -2) (undo-tree-id850 . 3) (undo-tree-id851 . -5) (undo-tree-id852 . -5) (undo-tree-id853 . -5) (undo-tree-id854 . -5) (undo-tree-id855 . -5) (undo-tree-id856 . -5) (undo-tree-id857 . -5) (undo-tree-id858 . -5) (undo-tree-id859 . -5) 1670) ((1665 . 1670)) (23393 61515 722617 0) 0 nil]) ((#("[" 0 1 (fontified t font-lock-face font-lock-string-face)) . -1670) (undo-tree-id860 . -1) (undo-tree-id861 . -1) (undo-tree-id862 . -1) (undo-tree-id863 . -1) (undo-tree-id864 . -1) (undo-tree-id865 . -1) (undo-tree-id866 . -1) (undo-tree-id867 . -1) (undo-tree-id868 . -1) (undo-tree-id869 . -1) (undo-tree-id870 . -1) (undo-tree-id871 . -1) (#("[" 0 1 (fontified t font-lock-face font-lock-string-face)) . -1671) (undo-tree-id872 . -1) (undo-tree-id873 . -1) (undo-tree-id874 . -1) (undo-tree-id875 . -1) (undo-tree-id876 . -1) (undo-tree-id877 . -1) (undo-tree-id878 . -1) (undo-tree-id879 . -1) (undo-tree-id880 . -1) (undo-tree-id881 . -1) (undo-tree-id882 . -1) (#("_" 0 1 (fontified t font-lock-face font-lock-string-face)) . -1672) (undo-tree-id883 . -1) (undo-tree-id884 . -1) (undo-tree-id885 . -1) (undo-tree-id886 . -1) (undo-tree-id887 . -1) (undo-tree-id888 . -1) (undo-tree-id889 . -1) (undo-tree-id890 . -1) (undo-tree-id891 . -1) (undo-tree-id892 . -1) (#("]" 0 1 (fontified t font-lock-face font-lock-string-face)) . -1673) (undo-tree-id893 . -1) (undo-tree-id894 . -1) (undo-tree-id895 . 1) (undo-tree-id896 . 1) (undo-tree-id897 . 1) (undo-tree-id898 . 1) (undo-tree-id899 . 1) (undo-tree-id900 . 1) (undo-tree-id901 . 1) (undo-tree-id902 . -1) (undo-tree-id903 . -1) (undo-tree-id904 . -1) (undo-tree-id905 . -1) (#("]" 0 1 (fontified t font-lock-face font-lock-string-face)) . -1674) (undo-tree-id906 . -1) (undo-tree-id907 . -1) (undo-tree-id908 . 1) (undo-tree-id909 . 1) (undo-tree-id910 . -1) (undo-tree-id911 . 1) (undo-tree-id912 . -1) 1675) nil (23393 61515 722942 0) 0 nil]) ((#("rightStringX" 0 12 (fontified t font-lock-face font-lock-string-face)) . -1673) (undo-tree-id913 . -12) (undo-tree-id914 . -12) (undo-tree-id915 . 10) (undo-tree-id916 . -2) (undo-tree-id917 . 10) (undo-tree-id918 . -12) (undo-tree-id919 . -12) 1685) nil (23393 61515 722694 0) 0 nil]) ((#("e" 0 1 (fontified t font-lock-face rjsx-attr)) . -1637) (undo-tree-id920 . -1) (undo-tree-id921 . -1) (undo-tree-id922 . -1) (undo-tree-id923 . 1) (undo-tree-id924 . -1) 1638) nil (23393 61515 722701 0) 0 nil]) ((1637 . 1638) (t 23393 61506 143537 485000)) nil (23393 61515 722703 0) 0 nil]) ((#("                  " 0 18 (fontified t)) . -1787) (undo-tree-id751 . 18) (undo-tree-id752 . -18) (undo-tree-id753 . -18) (undo-tree-id754 . -18) (undo-tree-id755 . 18) (undo-tree-id756 . 18) (undo-tree-id757 . 18) (undo-tree-id758 . 18) (undo-tree-id759 . 18) (undo-tree-id760 . 18) (undo-tree-id761 . 18) (#("                  " 0 18 (fontified t)) . -1546) (undo-tree-id762 . 18) (undo-tree-id763 . -18) 1654) nil (23393 61506 126068 0) 0 nil]) ((nil rear-nonsticky nil 1653 . 1654) (1636 . 1654) (#("bottomFretY]]\"" 0 11 (font-lock-face rjsx-attr fontified t) 11 12 (help-echo "invalid JSX identifier" cursor-sensor-functions #1# fontified t face (rainbow-delimiters-mismatched-face)) 12 13 (help-echo "invalid JSX identifier" cursor-sensor-functions #1# fontified t face (rainbow-delimiters-mismatched-face)) 13 14 (font-lock-face font-lock-string-face help-echo "unterminated string literal" cursor-sensor-functions #1# fontified t)) . -1636) (undo-tree-id764 . -14) (undo-tree-id765 . -14) (undo-tree-id766 . -13) (undo-tree-id767 . -14) (undo-tree-id768 . -13) (undo-tree-id769 . -14) (undo-tree-id770 . -12) (undo-tree-id771 . -13) (undo-tree-id772 . -11) (undo-tree-id773 . -12) (undo-tree-id774 . 14) (undo-tree-id775 . -14) 1650) nil (23393 61506 126088 0) 0 nil]) ((1636 . 1650)) nil (23393 61506 126101 0) 0 nil]) ((#("\"" 0 1 (fontified t font-lock-face font-lock-string-face help-echo "unterminated string literal" cursor-sensor-functions #1#)) . -1636) (undo-tree-id776 . -1) (undo-tree-id777 . -1) (undo-tree-id778 . -1) (undo-tree-id779 . -1) (undo-tree-id780 . 1) (undo-tree-id781 . 1) (undo-tree-id782 . -1) (undo-tree-id783 . 1) (undo-tree-id784 . 1) (undo-tree-id785 . -1) (undo-tree-id786 . -1) (undo-tree-id787 . -1) (undo-tree-id788 . -1) (undo-tree-id789 . -1) (undo-tree-id790 . -1) (undo-tree-id791 . -1) (undo-tree-id792 . -1) (#("[" 0 1 (fontified t font-lock-face font-lock-string-face help-echo "invalid JSX string (cannot contain delimiter in string body)" cursor-sensor-functions #1#)) . -1637) (undo-tree-id793 . -1) (undo-tree-id794 . -1) (undo-tree-id795 . -1) (undo-tree-id796 . -1) (undo-tree-id797 . 1) (undo-tree-id798 . 1) (undo-tree-id799 . -1) (undo-tree-id800 . -1) (undo-tree-id801 . -1) (undo-tree-id802 . -1) (undo-tree-id803 . -1) (undo-tree-id804 . -1) (undo-tree-id805 . -1) (#("[" 0 1 (fontified t font-lock-face font-lock-string-face help-echo "invalid JSX string (cannot contain delimiter in string body)" cursor-sensor-functions #1#)) . -1638) (undo-tree-id806 . -1) (undo-tree-id807 . -1) (undo-tree-id808 . -1) (undo-tree-id809 . -1) (undo-tree-id810 . -1) (undo-tree-id811 . -1) (undo-tree-id812 . -1) (undo-tree-id813 . -1) (undo-tree-id814 . -1) (undo-tree-id815 . -1) 1639) nil (23393 61506 126147 0) 0 nil]) ((#("_" 0 1 (fontified t font-lock-face font-lock-string-face help-echo "invalid JSX string (cannot contain delimiter in string body)" cursor-sensor-functions #1#)) . -1639) (undo-tree-id816 . -1) (undo-tree-id817 . -1) (undo-tree-id818 . -1) (undo-tree-id819 . -1) (undo-tree-id820 . -1) (undo-tree-id821 . -1) (undo-tree-id822 . -1) (undo-tree-id823 . -1) (undo-tree-id824 . -1) 1640) nil (23393 61506 126161 0) 0 nil]) ((#("bottomFretY]]\"" 0 11 (fontified t font-lock-face font-lock-string-face) 11 12 (fontified t font-lock-face font-lock-string-face) 12 13 (fontified t font-lock-face font-lock-string-face) 13 14 (fontified t font-lock-face font-lock-string-face)) . -1640) (undo-tree-id825 . -14) (undo-tree-id826 . -14) (undo-tree-id827 . -14) (undo-tree-id828 . 14) (undo-tree-id829 . 14) (undo-tree-id830 . -14) (undo-tree-id831 . 1) (undo-tree-id832 . -13) (undo-tree-id833 . 1) (undo-tree-id834 . -14) 1654) nil (23393 61506 126171 0) 0 nil] [nil nil ((#("{string[number.y]}" 0 1 (fontified t face (rainbow-delimiters-depth-8-face)) 1 7 (fontified t) 7 8 (fontified t face (rainbow-delimiters-depth-9-face)) 8 14 (fontified t) 14 15 (fontified t) 15 16 (fontified t font-lock-face js2-object-property-access) 16 17 (fontified t face (rainbow-delimiters-depth-9-face)) 17 18 (fontified t face (rainbow-delimiters-depth-8-face))) . 1614) (undo-tree-id202 . -18) (undo-tree-id203 . -18) (undo-tree-id204 . 1) (undo-tree-id205 . 18) (undo-tree-id206 . -1) (undo-tree-id207 . 1) (undo-tree-id208 . 17) (undo-tree-id209 . -2) (undo-tree-id210 . 1) (undo-tree-id211 . 16) (undo-tree-id212 . -3) (undo-tree-id213 . 1) (undo-tree-id214 . 15) (undo-tree-id215 . -4) (undo-tree-id216 . 1) (undo-tree-id217 . 14) (undo-tree-id218 . -5) (undo-tree-id219 . 1) (undo-tree-id220 . 13) (undo-tree-id221 . -6) (undo-tree-id222 . 1) (undo-tree-id223 . 12) (undo-tree-id224 . -7) (undo-tree-id225 . 1) (undo-tree-id226 . 1) (undo-tree-id227 . -7) (undo-tree-id228 . 2) (undo-tree-id229 . 11) (undo-tree-id230 . -8) (undo-tree-id231 . 2) (undo-tree-id232 . 10) (undo-tree-id233 . -9) (undo-tree-id234 . 2) (undo-tree-id235 . 9) (undo-tree-id236 . -10) (undo-tree-id237 . 2) (undo-tree-id238 . 2) (undo-tree-id239 . -10) (undo-tree-id240 . 2) (undo-tree-id241 . 2) (undo-tree-id242 . -10) (undo-tree-id243 . 2) (undo-tree-id244 . 8) (undo-tree-id245 . -11) (undo-tree-id246 . 2) (undo-tree-id247 . 7) (undo-tree-id248 . -12) (undo-tree-id249 . 2) (undo-tree-id250 . 6) (undo-tree-id251 . -13) (undo-tree-id252 . 2) (undo-tree-id253 . 5) (undo-tree-id254 . -14) (undo-tree-id255 . 2) (undo-tree-id256 . 2) (undo-tree-id257 . -14) (undo-tree-id258 . 2) (undo-tree-id259 . 2) (undo-tree-id260 . -14) (undo-tree-id261 . 2) (undo-tree-id262 . 4) (undo-tree-id263 . -15) (undo-tree-id264 . 2) (undo-tree-id265 . 3) (undo-tree-id266 . -16) (undo-tree-id267 . 1) (undo-tree-id268 . 2) (undo-tree-id269 . -17) (undo-tree-id270 . 1) (undo-tree-id271 . -18) (undo-tree-id272 . -18) (undo-tree-id273 . 1) (undo-tree-id274 . 18) (undo-tree-id275 . -1) (undo-tree-id276 . 1) (undo-tree-id277 . -18) (undo-tree-id278 . -17) (undo-tree-id279 . 1) (undo-tree-id280 . -18) (undo-tree-id281 . -18) (undo-tree-id282 . -18) (undo-tree-id283 . 1) (undo-tree-id284 . -17) (undo-tree-id285 . 2) (undo-tree-id286 . 1) (undo-tree-id287 . -16) (undo-tree-id288 . 3) (undo-tree-id289 . 2) (undo-tree-id290 . -15) (undo-tree-id291 . 4) (undo-tree-id292 . 3) (undo-tree-id293 . -14) (undo-tree-id294 . 5) (undo-tree-id295 . 4) (undo-tree-id296 . -13) (undo-tree-id297 . 6) (undo-tree-id298 . 5) (undo-tree-id299 . -12) (undo-tree-id300 . 7) (undo-tree-id301 . 6) (undo-tree-id302 . -11) (undo-tree-id303 . 8) (undo-tree-id304 . 7) (undo-tree-id305 . -10) (undo-tree-id306 . 9) (undo-tree-id307 . 8) (undo-tree-id308 . -9) (undo-tree-id309 . 10) (undo-tree-id310 . 9) (undo-tree-id311 . -8) (undo-tree-id312 . 11) (undo-tree-id313 . 10) (undo-tree-id314 . -7) (undo-tree-id315 . 12) (undo-tree-id316 . 11) (undo-tree-id317 . -6) (undo-tree-id318 . 13) (undo-tree-id319 . 12) (undo-tree-id320 . -5) (undo-tree-id321 . 14) (undo-tree-id322 . 13) (undo-tree-id323 . -4) (undo-tree-id324 . 15) (undo-tree-id325 . 14) (undo-tree-id326 . -3) (undo-tree-id327 . 16) (undo-tree-id328 . 15) (undo-tree-id329 . -2) (undo-tree-id330 . 17) (undo-tree-id331 . 16) (undo-tree-id332 . -1) (undo-tree-id333 . 18) (undo-tree-id334 . 17)) ((1614 . 1632)) (23393 61501 336710 0) 0 nil]) ((#("$" 0 1 (fontified t font-lock-face rjsx-attr)) . 1635) (undo-tree-id335 . 1)) nil (23393 61501 338166 0) 0 nil]) ((1628 . 1630)) nil (23393 61501 336739 0) 0 nil]) ((#("." 0 1 (fontified t help-echo "missing name after . operator" cursor-sensor-functions #1#)) . -1628) (undo-tree-id336 . -1) (undo-tree-id337 . -1) (undo-tree-id338 . -1) (undo-tree-id339 . 1) (undo-tree-id340 . -1) 1629) nil (23393 61501 336751 0) 0 nil]) ((1624 . 1629)) nil (23393 61501 336754 0) 0 nil]) ((#("n" 0 1 (fontified t help-echo "Undeclared variable or function 'nun'" cursor-sensor-functions #1#)) . -1624) (undo-tree-id341 . -1) (undo-tree-id342 . -1) (undo-tree-id343 . -1) (undo-tree-id344 . -1) (undo-tree-id345 . 1) (undo-tree-id346 . -1) 1625) nil (23393 61501 336766 0) 0 nil]) ((1622 . 1625) (1621 . 1623) (#("[" 0 1 (fontified nil)) . -1621) (1619 . 1622)) nil (23393 61501 336772 0) 0 nil]) ((1615 . 1619) (1614 . 1616) (#("{" 0 1 (fontified nil help-echo "missing value after prop `y2'" cursor-sensor-functions #1#)) . -1614) (1614 . 1615)) nil (23393 61501 336777 0) 0 nil]) ((#("\"" 0 1 (fontified t font-lock-face font-lock-string-face)) . -1614) (undo-tree-id347 . -1) (undo-tree-id348 . -1) (undo-tree-id349 . -1) (undo-tree-id350 . -1) (undo-tree-id351 . 1) (undo-tree-id352 . 1) (undo-tree-id353 . -1) (undo-tree-id354 . -1) (undo-tree-id355 . -1) (undo-tree-id356 . -1) (undo-tree-id357 . -1) (undo-tree-id358 . -1) (undo-tree-id359 . -1) (undo-tree-id360 . -1) (undo-tree-id361 . -1) (undo-tree-id362 . -1) (undo-tree-id363 . -1) (undo-tree-id364 . -1) (undo-tree-id365 . -1) (undo-tree-id366 . -1) (undo-tree-id367 . -1) (undo-tree-id368 . -1) (undo-tree-id369 . -1) (undo-tree-id370 . -1) (undo-tree-id371 . -1) (undo-tree-id372 . -1) (undo-tree-id373 . -1) (undo-tree-id374 . -1) (undo-tree-id375 . -1) (undo-tree-id376 . -1) (undo-tree-id377 . -1) (undo-tree-id378 . -1) (#("{" 0 1 (fontified t font-lock-face font-lock-string-face)) . -1615) (undo-tree-id379 . -1) (undo-tree-id380 . -1) (undo-tree-id381 . 1) (undo-tree-id382 . -1) 1616) nil (23393 61501 336844 0) 0 nil]) ((1615 . 1616) (#("{" 0 1 (fontified nil font-lock-face font-lock-string-face)) . -1615) (1615 . 1616)) nil (23393 61501 336852 0) 0 nil]) ((#("{" 0 1 (fontified t font-lock-face font-lock-string-face)) . -1615) (undo-tree-id383 . -1) (undo-tree-id384 . -1) (undo-tree-id385 . -1) (undo-tree-id386 . 1) (undo-tree-id387 . -1) (undo-tree-id388 . -1) (undo-tree-id389 . -1) (undo-tree-id390 . -1) (undo-tree-id391 . -1) (undo-tree-id392 . -1) (undo-tree-id393 . -1) (undo-tree-id394 . -1) (undo-tree-id395 . -1) (#("}" 0 1 (fontified t font-lock-face font-lock-string-face)) . -1616) (undo-tree-id396 . -1) (undo-tree-id397 . -1) (undo-tree-id398 . 1) (undo-tree-id399 . 1) (undo-tree-id400 . 1) (undo-tree-id401 . 1) (undo-tree-id402 . 1) (undo-tree-id403 . 1) (undo-tree-id404 . 1) (undo-tree-id405 . 1) (undo-tree-id406 . 1) (undo-tree-id407 . 1) (undo-tree-id408 . -1) (undo-tree-id409 . -1) (undo-tree-id410 . 1) (undo-tree-id411 . -1) (undo-tree-id412 . -1) (#("\"" 0 1 (fontified t font-lock-face font-lock-string-face)) . -1617) (undo-tree-id413 . -1) (undo-tree-id414 . -1) (undo-tree-id415 . 1) (undo-tree-id416 . 1) (undo-tree-id417 . 1) (undo-tree-id418 . 1) (undo-tree-id419 . 1) (undo-tree-id420 . 1) (undo-tree-id421 . 1) (undo-tree-id422 . 1) (undo-tree-id423 . 1) (undo-tree-id424 . 1) (undo-tree-id425 . 1) (undo-tree-id426 . 1) (undo-tree-id427 . 1) (undo-tree-id428 . 1) (undo-tree-id429 . 1) (undo-tree-id430 . 1) (undo-tree-id431 . 1) (undo-tree-id432 . 1) (undo-tree-id433 . 1) (undo-tree-id434 . 1) (undo-tree-id435 . 1) (undo-tree-id436 . 1) (undo-tree-id437 . 1) (undo-tree-id438 . 1) (undo-tree-id439 . 1) (undo-tree-id440 . 1) (undo-tree-id441 . 1) (undo-tree-id442 . 1) (undo-tree-id443 . 1) (undo-tree-id444 . 1) (undo-tree-id445 . 1) (undo-tree-id446 . -1) 1618) nil (23393 61501 336964 0) 0 nil]) ((#("s" 0 1 (fontified t font-lock-face font-lock-string-face)) . -1616) (undo-tree-id447 . -1) (undo-tree-id448 . -1) (undo-tree-id449 . -1) (undo-tree-id450 . 1) (undo-tree-id451 . -1) (undo-tree-id452 . -1) (undo-tree-id453 . -1) (#("t" 0 1 (fontified t font-lock-face font-lock-string-face)) . -1617) (undo-tree-id454 . -1) (undo-tree-id455 . -1) (undo-tree-id456 . -1) (undo-tree-id457 . 1) (undo-tree-id458 . -1) 1618) nil (23393 61501 336993 0) 0 nil]) ((1616 . 1618) (1615 . 1617) (#("{" 0 1 (fontified nil font-lock-face font-lock-string-face)) . -1615) (1615 . 1616)) nil (23393 61501 336998 0) 0 nil]) ((#("]" 0 1 (fontified t font-lock-face font-lock-string-face)) . 1615) (undo-tree-id459 . 1) (undo-tree-id460 . 1) (undo-tree-id461 . 1) (undo-tree-id462 . 1) (undo-tree-id463 . 1) (undo-tree-id464 . 1) (undo-tree-id465 . 1) (undo-tree-id466 . 1) (undo-tree-id467 . 1) (undo-tree-id468 . 1) (undo-tree-id469 . 1) (undo-tree-id470 . 1) (undo-tree-id471 . 1) (undo-tree-id472 . 1) (undo-tree-id473 . 1) (undo-tree-id474 . 1) (undo-tree-id475 . 1) (undo-tree-id476 . 1) (undo-tree-id477 . 1) (undo-tree-id478 . 1) (undo-tree-id479 . 1) (undo-tree-id480 . 1) (undo-tree-id481 . 1) (undo-tree-id482 . 1) (undo-tree-id483 . 1) (undo-tree-id484 . 1) (undo-tree-id485 . 1) (#("]" 0 1 (fontified t font-lock-face font-lock-string-face)) . 1615) (undo-tree-id486 . 1) (undo-tree-id487 . 1) (undo-tree-id488 . 1) (undo-tree-id489 . 1) (undo-tree-id490 . 1) (undo-tree-id491 . 1) (undo-tree-id492 . 1) (undo-tree-id493 . 1) (undo-tree-id494 . 1) (undo-tree-id495 . 1) (undo-tree-id496 . 1) (undo-tree-id497 . 1) (undo-tree-id498 . 1) (undo-tree-id499 . 1) (undo-tree-id500 . 1) (undo-tree-id501 . 1) (undo-tree-id502 . 1) (undo-tree-id503 . 1) (undo-tree-id504 . 1) (undo-tree-id505 . 1) (undo-tree-id506 . 1) (undo-tree-id507 . 1) (undo-tree-id508 . 1) (undo-tree-id509 . 1) (undo-tree-id510 . 1) (#("Y" 0 1 (fontified t font-lock-face font-lock-string-face)) . 1615) (undo-tree-id511 . 1) (undo-tree-id512 . 1) (undo-tree-id513 . 1) (undo-tree-id514 . 1) (undo-tree-id515 . 1) (undo-tree-id516 . 1) (undo-tree-id517 . 1) (undo-tree-id518 . 1) (undo-tree-id519 . 1) (undo-tree-id520 . 1) (undo-tree-id521 . 1) (undo-tree-id522 . 1) (undo-tree-id523 . 1) (undo-tree-id524 . 1) (undo-tree-id525 . 1) (undo-tree-id526 . 1) (undo-tree-id527 . 1) (undo-tree-id528 . 1) (undo-tree-id529 . 1) (undo-tree-id530 . 1) (undo-tree-id531 . 1) (undo-tree-id532 . 1) (undo-tree-id533 . 1) (#("t" 0 1 (fontified t font-lock-face font-lock-string-face)) . 1615) (undo-tree-id534 . 1) (undo-tree-id535 . 1) (undo-tree-id536 . 1) (undo-tree-id537 . 1) (undo-tree-id538 . 1) (undo-tree-id539 . 1) (undo-tree-id540 . 1) (undo-tree-id541 . 1) (undo-tree-id542 . 1) (undo-tree-id543 . 1) (undo-tree-id544 . 1) (undo-tree-id545 . 1) (undo-tree-id546 . 1) (undo-tree-id547 . 1) (undo-tree-id548 . 1) (undo-tree-id549 . 1) (undo-tree-id550 . 1) (undo-tree-id551 . 1) (undo-tree-id552 . 1) (undo-tree-id553 . 1) (undo-tree-id554 . 1) (#("e" 0 1 (fontified t font-lock-face font-lock-string-face)) . 1615) (undo-tree-id555 . 1) (undo-tree-id556 . 1) (undo-tree-id557 . 1) (undo-tree-id558 . 1) (undo-tree-id559 . 1) (undo-tree-id560 . 1) (undo-tree-id561 . 1) (undo-tree-id562 . 1) (undo-tree-id563 . 1) (undo-tree-id564 . 1) (undo-tree-id565 . 1) (undo-tree-id566 . 1) (undo-tree-id567 . 1) (undo-tree-id568 . 1) (undo-tree-id569 . 1) (undo-tree-id570 . 1) (undo-tree-id571 . 1) (undo-tree-id572 . 1) (undo-tree-id573 . 1) (#("r" 0 1 (fontified t font-lock-face font-lock-string-face)) . 1615) (undo-tree-id574 . 1) (undo-tree-id575 . 1) (undo-tree-id576 . 1) (undo-tree-id577 . 1) (undo-tree-id578 . 1) (undo-tree-id579 . 1) (undo-tree-id580 . 1) (undo-tree-id581 . 1) (undo-tree-id582 . 1) (undo-tree-id583 . 1) (undo-tree-id584 . 1) (undo-tree-id585 . 1) (undo-tree-id586 . 1) (undo-tree-id587 . 1) (undo-tree-id588 . 1) (undo-tree-id589 . 1) (undo-tree-id590 . 1) (#("F" 0 1 (fontified t font-lock-face font-lock-string-face)) . 1615) (undo-tree-id591 . 1) (undo-tree-id592 . 1) (undo-tree-id593 . 1) (undo-tree-id594 . 1) (undo-tree-id595 . 1) (undo-tree-id596 . 1) (undo-tree-id597 . 1) (undo-tree-id598 . 1) (undo-tree-id599 . 1) (undo-tree-id600 . 1) (undo-tree-id601 . 1) (undo-tree-id602 . 1) (undo-tree-id603 . 1) (undo-tree-id604 . 1) (undo-tree-id605 . 1) (#("p" 0 1 (fontified t font-lock-face font-lock-string-face)) . 1615) (undo-tree-id606 . 1) (undo-tree-id607 . 1) (undo-tree-id608 . 1) (undo-tree-id609 . 1) (undo-tree-id610 . 1) (undo-tree-id611 . 1) (undo-tree-id612 . 1) (undo-tree-id613 . 1) (undo-tree-id614 . 1) (undo-tree-id615 . 1) (undo-tree-id616 . 1) (undo-tree-id617 . 1) (undo-tree-id618 . 1) (#("o" 0 1 (fontified t font-lock-face font-lock-string-face)) . 1615) (undo-tree-id619 . 1) (undo-tree-id620 . 1) (undo-tree-id621 . 1) (undo-tree-id622 . 1) (undo-tree-id623 . 1) (undo-tree-id624 . 1) (undo-tree-id625 . 1) (undo-tree-id626 . 1) (undo-tree-id627 . 1) (undo-tree-id628 . 1) (undo-tree-id629 . 1) (#("t" 0 1 (fontified t font-lock-face font-lock-string-face)) . 1615) (undo-tree-id630 . 1) (undo-tree-id631 . 1) (undo-tree-id632 . 1) (undo-tree-id633 . 1) (undo-tree-id634 . 1) (undo-tree-id635 . 1) (undo-tree-id636 . 1) (undo-tree-id637 . 1) (undo-tree-id638 . 1) (#("_" 0 1 (fontified t font-lock-face font-lock-string-face)) . 1615) (undo-tree-id639 . -1) (undo-tree-id640 . 1) (undo-tree-id641 . 1) (undo-tree-id642 . 1) (undo-tree-id643 . 1) (undo-tree-id644 . 1) (#("[" 0 1 (fontified t font-lock-face font-lock-string-face)) . 1615) (undo-tree-id645 . 1) (undo-tree-id646 . 1) (undo-tree-id647 . -1) (undo-tree-id648 . 1) (undo-tree-id649 . 1) (#("[" 0 1 (fontified t font-lock-face font-lock-string-face)) . 1615) (undo-tree-id650 . 1) (undo-tree-id651 . 1) (undo-tree-id652 . -1)) nil (23393 61501 337324 0) 0 nil]) ((#("$" 0 1 (fontified t font-lock-face rjsx-attr)) . 1613) (undo-tree-id653 . 1) (undo-tree-id654 . 1) (undo-tree-id655 . -1) (undo-tree-id656 . 1)) nil (23393 61501 337358 0) 0 nil]) ((1601 . 1607) (1600 . 1602) (#("{" 0 1 (fontified nil font-lock-face font-lock-string-face)) . -1600) (1599 . 1601)) nil (23393 61501 337363 0) 0 nil]) ((1599 . 1600) (#("`" 0 1 (fontified nil)) . -1599) (1599 . 1600) (#("`" 0 1 (fontified nil font-lock-face font-lock-string-face help-echo "missing `}' after expression" cursor-sensor-functions #1#)) . -1599) (1599 . 1600)) nil (23393 61501 337368 0) 0 nil]) ((1599 . 1600) (#("}" 0 1 (fontified nil font-lock-face font-lock-string-face help-echo "missing `}' after expression" cursor-sensor-functions #1#)) . -1599) (1599 . 1600)) nil (23393 61501 337372 0) 0 nil]) ((#("\"" 0 1 (fontified t font-lock-face font-lock-string-face help-echo "missing `}' after expression" cursor-sensor-functions #1#)) . -1599) (undo-tree-id657 . -1) (undo-tree-id658 . -1) (undo-tree-id659 . 1) (undo-tree-id660 . 1) (undo-tree-id661 . 1) (undo-tree-id662 . 1) (undo-tree-id663 . 1) (undo-tree-id664 . 1) (undo-tree-id665 . 1) (undo-tree-id666 . 1) (undo-tree-id667 . 1) (undo-tree-id668 . 1) (undo-tree-id669 . -1) (undo-tree-id670 . 1) (undo-tree-id671 . 1) (undo-tree-id672 . 1) (undo-tree-id673 . 1) (undo-tree-id674 . -1) 1600) nil (23393 61501 337406 0) 0 nil]) ((#("`" 0 1 (fontified t font-lock-face font-lock-string-face help-echo "missing `}' after expression" cursor-sensor-functions #1#)) . 1596) (undo-tree-id675 . 1)) nil (23393 61501 337412 0) 0 nil]) ((1595 . 1597) (#("`" 0 1 (fontified nil)) . -1595) (1595 . 1596) (#("`" 0 1 (fontified nil help-echo "missing `}' after expression" cursor-sensor-functions #1# face (rainbow-delimiters-depth-8-face))) . -1595) (1595 . 1596)) nil (23393 61501 337417 0) 0 nil]) ((#("\"" 0 1 (fontified t font-lock-face font-lock-string-face help-echo "missing `}' after expression" cursor-sensor-functions #1#)) . -1595) (undo-tree-id676 . -1) (undo-tree-id677 . -1) (undo-tree-id678 . 1) (undo-tree-id679 . 1) (undo-tree-id680 . -1) (undo-tree-id681 . -1) (undo-tree-id682 . 1) (undo-tree-id683 . 1) (undo-tree-id684 . 1) (undo-tree-id685 . 1) (undo-tree-id686 . 1) (undo-tree-id687 . -1) 1596) nil (23393 61501 337439 0) 0 nil]) ((#("}" 0 1 (fontified t help-echo "empty `{}' expression" cursor-sensor-functions #1# face (rainbow-delimiters-depth-8-face))) . 1595) (undo-tree-id688 . -1) (undo-tree-id689 . -1) (undo-tree-id690 . 1)) nil (23393 61501 337448 0) 0 nil]) ((1594 . 1596) (#("{" 0 1 (fontified nil)) . -1594) (1594 . 1595)) nil (23393 61501 337452 0) 0 nil]) ((#("1" 0 1 (font-lock-face font-lock-string-face fontified t)) . -1598) (undo-tree-id691 . -1) (undo-tree-id692 . -1) (undo-tree-id693 . -1) (undo-tree-id694 . 1) (undo-tree-id695 . 1) (undo-tree-id696 . -1) (undo-tree-id697 . -1) (undo-tree-id698 . -1) (undo-tree-id699 . -1) 1599) nil (23393 61501 337469 0) 0 nil]) ((1546 . 1564)) nil (23393 61501 337473 0) 0 nil]) ((#("                  const" 0 18 (fontified t) 18 23 (fontified t font-lock-face font-lock-keyword-face)) . 1546) (undo-tree-id700 . -18) (undo-tree-id701 . -18) (undo-tree-id702 . 5) (undo-tree-id703 . -19) (undo-tree-id704 . 4) (undo-tree-id705 . -20) (undo-tree-id706 . -20) (undo-tree-id707 . -20) (undo-tree-id708 . -20) (undo-tree-id709 . -20) (undo-tree-id710 . -20) (undo-tree-id711 . -20) (undo-tree-id712 . 3) (undo-tree-id713 . -21) (undo-tree-id714 . 2) (undo-tree-id715 . -22) (undo-tree-id716 . 1) (undo-tree-id717 . -23) (undo-tree-id718 . -23) (undo-tree-id719 . 23) (undo-tree-id720 . -23)) nil (23393 61501 337511 0) 0 nil]) ((1566 . 1569)) nil (23393 61501 337516 0) 0 nil]) ((#("s" 0 1 (fontified t help-echo "Undeclared variable or function 'cos'" cursor-sensor-functions #1#)) . -1566) (undo-tree-id721 . -1) (undo-tree-id722 . -1) (undo-tree-id723 . 1) (undo-tree-id724 . -1) (undo-tree-id725 . -1) (undo-tree-id726 . -1) (undo-tree-id727 . -1) (undo-tree-id728 . -1) (undo-tree-id729 . -1) (#("n" 0 1 (fontified t help-echo "Undeclared variable or function 'cosn'" cursor-sensor-functions #1#)) . -1567) (undo-tree-id730 . -1) (undo-tree-id731 . -1) (undo-tree-id732 . 1) (undo-tree-id733 . -1) (undo-tree-id734 . -1) (undo-tree-id735 . -1) (undo-tree-id736 . -1) (#("t" 0 1 (fontified t help-echo "Undeclared variable or function 'cosnt'" cursor-sensor-functions #1#)) . -1568) (undo-tree-id737 . -1) (undo-tree-id738 . -1) (undo-tree-id739 . -1) (undo-tree-id740 . 1) (undo-tree-id741 . -1) 1569) nil (23393 61501 337552 0) 0 nil]) ((1564 . 1569)) nil (23393 61501 337558 0) 0 nil]) ((1545 . 1564)) nil (23393 61501 337560 0) 0 nil]) ((1701 . 1729) (#("                    " 0 17 (fontified t help-echo #63="missing ; after statement" cursor-sensor-functions #1#) 17 20 (fontified t help-echo #63# cursor-sensor-functions #1#)) . 1701) 1731) nil (23393 61501 337563 0) 0 nil]) ((1625 . 1653) (#("                  " 0 18 (fontified t)) . 1625) 1645) nil (23393 61501 337566 0) 0 nil]) ((1546 . 1566) (#("            " 0 4 (fontified t) 4 12 (fontified t)) . 1546) (undo-tree-id742 . -12) (undo-tree-id743 . 12) 1562) nil (23393 61501 337573 0) 0 nil]) ((1419 . 1426)) nil (23393 61501 337576 0) 0 nil]) ((#("vertical" 0 8 (fontified t font-lock-face rjsx-text syntax-table #18#)) . -1419) (undo-tree-id744 . -8) (undo-tree-id745 . -8) (undo-tree-id746 . -8) (undo-tree-id747 . -8) (undo-tree-id748 . -8) (undo-tree-id749 . -8) (undo-tree-id750 . -8) 1427) nil (23393 61501 337589 0) 0 nil]) ((1702 . 1704) 1748) nil (23393 61501 337592 0) 0 nil]) ((1547 . 1748)) nil (23393 61501 337594 0) 0 nil] [nil nil ((1517 . 1718)) ((#("            <line id=\"str1\" y2$=\"[[_topFretY]]\" y1$=\"[[_bottomFretY]]\"
                  x1$=\"[[_rightStringX]]\" x2$=\"[[_rightStringX]]\"
                  strokeWidth=\"0.5%\" stroke=\"#000\" fill=\"none\"/>" 0 4 (fontified t) 4 12 (fontified t) 12 13 (font-lock-face rjsx-tag-bracket-face fontified t) 13 17 (font-lock-face rjsx-tag fontified t) 17 18 (fontified t) 18 20 (font-lock-face rjsx-attr fontified t) 20 21 (fontified t) 21 27 (font-lock-face font-lock-string-face fontified t) 27 28 (fontified t) 28 31 (font-lock-face rjsx-attr fontified t) 31 32 (fontified t) 32 47 (font-lock-face font-lock-string-face fontified t) 47 48 (fontified t) 48 51 (font-lock-face rjsx-attr fontified t) 51 52 (fontified t) 52 70 (font-lock-face font-lock-string-face fontified t) 70 89 (fontified t) 89 92 (font-lock-face rjsx-attr fontified t) 92 93 (fontified t) 93 112 (font-lock-face font-lock-string-face fontified t) 112 113 (fontified t) 113 116 (font-lock-face rjsx-attr fontified t) 116 117 (fontified t) 117 136 (font-lock-face font-lock-string-face fontified t) 136 137 (fontified t) 137 154 (help-echo #64="Code has no side effects" cursor-sensor-functions #1# fontified t) 154 155 (help-echo #64# cursor-sensor-functions #1# fontified t) 155 166 (font-lock-face rjsx-attr help-echo #64# cursor-sensor-functions #1# fontified t) 166 167 (help-echo #64# cursor-sensor-functions #1# fontified t) 167 173 (font-lock-face font-lock-string-face help-echo #64# cursor-sensor-functions #1# fontified t) 173 174 (help-echo #64# cursor-sensor-functions #1# fontified t) 174 180 (font-lock-face rjsx-attr help-echo #64# cursor-sensor-functions #1# fontified t) 180 181 (help-echo #64# cursor-sensor-functions #1# fontified t) 181 187 (font-lock-face font-lock-string-face help-echo #64# cursor-sensor-functions #1# fontified t) 187 188 (help-echo #64# cursor-sensor-functions #1# fontified t) 188 192 (font-lock-face rjsx-attr help-echo #64# cursor-sensor-functions #1# fontified t) 192 193 (help-echo #64# cursor-sensor-functions #1# fontified t) 193 199 (font-lock-face font-lock-string-face help-echo #64# cursor-sensor-functions #1# fontified t) 199 200 (rjsx-class self-closing-slash font-lock-face rjsx-tag-bracket-face help-echo #64# cursor-sensor-functions #1# fontified t) 200 201 (font-lock-face rjsx-tag-bracket-face help-echo #64# cursor-sensor-functions #1# fontified t)) . 1517) (undo-tree-id195 . -201) (undo-tree-id196 . -201) (undo-tree-id197 . -201) (undo-tree-id198 . -137) (undo-tree-id199 . -201) (undo-tree-id200 . 201) (undo-tree-id201 . -201)) (23393 61408 559957 0) 0 nil]) ((#("            <line id=\"str1\" y2$=\"[[_topFretY]]\" y1$=\"[[_bottomFretY]]\"
                  x1$=\"[[_rightStringX]]\" x2$=\"[[_rightStringX]]\"
                  strokeWidth=\"0.5%\" stroke=\"#000\" fill=\"none\"/>" 0 4 (font-lock-face rjsx-text syntax-table #18# fontified t) 4 12 (font-lock-face rjsx-text syntax-table #18# fontified t) 12 13 (font-lock-face rjsx-tag-bracket-face fontified t) 13 17 (font-lock-face rjsx-tag fontified t) 17 18 (fontified t) 18 20 (font-lock-face rjsx-attr fontified t) 20 21 (fontified t) 21 27 (font-lock-face font-lock-string-face fontified t) 27 28 (fontified t) 28 31 (font-lock-face rjsx-attr fontified t) 31 32 (fontified t) 32 47 (font-lock-face font-lock-string-face fontified t) 47 48 (fontified t) 48 51 (font-lock-face rjsx-attr fontified t) 51 52 (fontified t) 52 70 (font-lock-face font-lock-string-face fontified t) 70 89 (fontified t) 89 92 (font-lock-face rjsx-attr fontified t) 92 93 (fontified t) 93 112 (font-lock-face font-lock-string-face fontified t) 112 113 (fontified t) 113 116 (font-lock-face rjsx-attr fontified t) 116 117 (fontified t) 117 136 (font-lock-face font-lock-string-face fontified t) 136 154 (fontified t) 154 155 (fontified t) 155 166 (font-lock-face rjsx-attr fontified t) 166 167 (fontified t) 167 173 (font-lock-face font-lock-string-face fontified t) 173 174 (fontified t) 174 180 (font-lock-face rjsx-attr fontified t) 180 181 (fontified t) 181 187 (font-lock-face font-lock-string-face fontified t) 187 188 (fontified t) 188 192 (font-lock-face rjsx-attr fontified t) 192 193 (fontified t) 193 199 (font-lock-face font-lock-string-face fontified t) 199 200 (rjsx-class self-closing-slash font-lock-face rjsx-tag-bracket-face fontified t) 200 201 (font-lock-face rjsx-tag-bracket-face fontified t)) . -1615) (undo-tree-id0 . -201) (undo-tree-id1 . -201) (undo-tree-id2 . 185) (undo-tree-id3 . 185) (undo-tree-id4 . -16) (undo-tree-id5 . -16) (undo-tree-id6 . 178) (undo-tree-id7 . -23) (undo-tree-id8 . 178) (undo-tree-id9 . 178) (undo-tree-id10 . -23) (undo-tree-id11 . 201) (undo-tree-id12 . 178) (undo-tree-id13 . 201) (undo-tree-id14 . 201) (undo-tree-id15 . -201) (undo-tree-id16 . 130) (undo-tree-id17 . 201) (undo-tree-id18 . -71) (undo-tree-id19 . 64) (undo-tree-id20 . 130) (undo-tree-id21 . -137) (undo-tree-id22 . 64) (undo-tree-id23 . -201) (undo-tree-id24 . -201) 1816) nil (23393 61408 560777 0) 0 nil]) ((1543 . 1544)) nil (23393 61408 560073 0) 0 nil]) ((#("1" 0 1 (fontified t)) . -1543) (undo-tree-id25 . -1) (undo-tree-id26 . -1) (undo-tree-id27 . 1) (undo-tree-id28 . -1) (undo-tree-id29 . 1) (undo-tree-id30 . 1) (undo-tree-id31 . 1) (undo-tree-id32 . -1) (undo-tree-id33 . 1) (undo-tree-id34 . -1) 1544) nil (23393 61408 560093 0) 0 nil]) ((1547 . 1565)) nil (23393 61408 560097 0) 0 nil]) ((#("                  sd" 0 18 (fontified t) 18 20 (fontified t help-echo "missing ; after statement" cursor-sensor-functions #1#)) . 1547) (undo-tree-id35 . -20) (undo-tree-id36 . -18) (undo-tree-id37 . -18) (undo-tree-id38 . -18) (undo-tree-id39 . 2) (undo-tree-id40 . -19) (undo-tree-id41 . -18) (undo-tree-id42 . -20) (undo-tree-id43 . -18) (undo-tree-id44 . -20) (undo-tree-id45 . -18) (undo-tree-id46 . -20) (undo-tree-id47 . 1) (undo-tree-id48 . -20) (undo-tree-id49 . 20) (undo-tree-id50 . -20)) nil (23393 61408 560135 0) 0 nil]) ((1565 . 1567)) nil (23393 61408 560139 0) 0 nil]) ((1547 . 1565) (1548 . 1564) (#("                  " 0 18 (fontified nil face (rainbow-delimiters-depth-7-face))) . 1547) (1547 . 1565) (1546 . 1548)) nil (23393 61408 560143 0) 0 nil]) ((1545 . 1547) (#("{" 0 1 (fontified nil help-echo "missing `}' after expression" cursor-sensor-functions #1# face (rainbow-delimiters-depth-7-face))) . -1545) (1545 . 1546)) nil (23393 61408 560147 0) 0 nil]) ((1543 . 1544)) nil (23393 61408 560150 0) 0 nil]) ((1542 . 1543)) nil (23393 61408 560152 0) 0 nil]) ((1536 . 1542) (1535 . 1537) (#("(" 0 1 (fontified nil font-lock-face font-lock-keyword-face help-echo "syntax error" cursor-sensor-functions #1#)) . -1535) (1533 . 1536)) nil (23393 61408 560155 0) 0 nil]) ((1504 . 1510)) nil (23393 61408 560158 0) 0 nil]) ((#("n" 0 1 (fontified t font-lock-face js2-function-param)) . -1504) (undo-tree-id51 . -1) (undo-tree-id52 . -1) (undo-tree-id53 . -1) (undo-tree-id54 . 1) (undo-tree-id55 . -1) (undo-tree-id56 . -1) (undo-tree-id57 . -1) (undo-tree-id58 . -1) (undo-tree-id59 . -1) (undo-tree-id60 . -1) (undo-tree-id61 . -1) (undo-tree-id62 . -1) (undo-tree-id63 . -1) (undo-tree-id64 . -1) (undo-tree-id65 . -1) (#("u" 0 1 (fontified t font-lock-face js2-function-param)) . -1505) (undo-tree-id66 . -1) (undo-tree-id67 . -1) (undo-tree-id68 . -1) (undo-tree-id69 . 1) (undo-tree-id70 . -1) (undo-tree-id71 . -1) (undo-tree-id72 . -1) (undo-tree-id73 . -1) (undo-tree-id74 . -1) (undo-tree-id75 . -1) (undo-tree-id76 . -1) (undo-tree-id77 . -1) (undo-tree-id78 . -1) (#("m" 0 1 (fontified t font-lock-face js2-function-param)) . -1506) (undo-tree-id79 . -1) (undo-tree-id80 . -1) (undo-tree-id81 . -1) (undo-tree-id82 . 1) (undo-tree-id83 . -1) (undo-tree-id84 . -1) (undo-tree-id85 . -1) (undo-tree-id86 . -1) (undo-tree-id87 . -1) (undo-tree-id88 . -1) (undo-tree-id89 . -1) (#("b" 0 1 (fontified t font-lock-face js2-function-param)) . -1507) (undo-tree-id90 . -1) (undo-tree-id91 . -1) (undo-tree-id92 . 1) (undo-tree-id93 . -1) (undo-tree-id94 . -1) (undo-tree-id95 . -1) (undo-tree-id96 . -1) (undo-tree-id97 . -1) (#("e" 0 1 (fontified t font-lock-face js2-function-param)) . -1508) (undo-tree-id98 . -1) (undo-tree-id99 . -1) (undo-tree-id100 . 1) (undo-tree-id101 . -1) (undo-tree-id102 . -1) (undo-tree-id103 . -1) (#("r" 0 1 (fontified t font-lock-face js2-function-param)) . -1509) (undo-tree-id104 . -1) (undo-tree-id105 . -1) (undo-tree-id106 . 1) (undo-tree-id107 . -1) 1510) nil (23393 61408 560262 0) 0 nil]) ((1504 . 1510)) nil (23393 61408 560272 0) 0 nil]) ((#("N" 0 1 (fontified t font-lock-face js2-function-param)) . -1504) (undo-tree-id108 . -1) (undo-tree-id109 . -1) (undo-tree-id110 . 1) (undo-tree-id111 . -1) 1505) nil (23393 61408 560281 0) 0 nil]) ((1504 . 1505)) nil (23393 61408 560283 0) 0 nil]) ((#("i" 0 1 (fontified t font-lock-face js2-function-param)) . -1504) (undo-tree-id112 . -1) (undo-tree-id113 . -1) (undo-tree-id114 . -1) (undo-tree-id115 . -1) (undo-tree-id116 . -1) (undo-tree-id117 . -1) (undo-tree-id118 . -1) (undo-tree-id119 . -1) (undo-tree-id120 . -1) (undo-tree-id121 . -1) (undo-tree-id122 . -1) (undo-tree-id123 . -1) (undo-tree-id124 . -1) (#("n" 0 1 (fontified t font-lock-face font-lock-keyword-face help-echo "syntax error" cursor-sensor-functions #1#)) . -1505) (undo-tree-id125 . -1) (undo-tree-id126 . -1) (undo-tree-id127 . -1) (undo-tree-id128 . -1) (undo-tree-id129 . -1) (undo-tree-id130 . -1) (undo-tree-id131 . -1) (undo-tree-id132 . -1) (undo-tree-id133 . -1) (undo-tree-id134 . -1) (undo-tree-id135 . -1) (undo-tree-id136 . -1) (#("d" 0 1 (fontified t font-lock-face js2-function-param)) . -1506) (undo-tree-id137 . -1) (undo-tree-id138 . -1) (undo-tree-id139 . -1) (undo-tree-id140 . 1) (undo-tree-id141 . 1) (undo-tree-id142 . 1) (undo-tree-id143 . 1) (undo-tree-id144 . 1) (undo-tree-id145 . 1) (undo-tree-id146 . 1) (undo-tree-id147 . 1) (undo-tree-id148 . -1) (undo-tree-id149 . -1) (undo-tree-id150 . -1) (undo-tree-id151 . -1) 1507) nil (23393 61408 560353 0) 0 nil]) ((1514 . 1530) (1515 . 1529) (#("                " 0 16 (fontified nil face (rainbow-delimiters-depth-6-face))) . 1514) (1514 . 1530) (1513 . 1515)) nil (23393 61408 560363 0) 0 nil]) ((1512 . 1514) (#("{" 0 1 (fontified nil)) . -1512) (1511 . 1513)) nil (23393 61408 560367 0) 0 nil]) ((1510 . 1511)) nil (23393 61408 560369 0) 0 nil]) ((1509 . 1510)) nil (23393 61408 560371 0) 0 nil]) ((#("-" 0 1 (fontified t)) . -1509) (undo-tree-id152 . -1) (undo-tree-id153 . -1) (undo-tree-id154 . -1) (undo-tree-id155 . -1) (undo-tree-id156 . 1) (undo-tree-id157 . -1) 1510) nil (23393 61408 560382 0) 0 nil]) ((1509 . 1510)) nil (23393 61408 560386 0) 0 nil]) ((1502 . 1507)) nil (23393 61408 560388 0) 0 nil]) ((1503 . 1504)) nil (23393 61408 560390 0) 0 nil]) ((1496 . 1502)) nil (23393 61408 560392 0) 0 nil]) ((#(")" 0 1 (fontified nil)) . -1496) (1496 . 1497) (#(")" 0 1 (fontified nil face (rainbow-delimiters-depth-6-face))) . -1496) (1496 . 1497) (1495 . 1497) (#("(" 0 1 (fontified nil face (rainbow-delimiters-depth-5-face))) . -1495) (1495 . 1496) (1494 . 1496) (#("(" 0 1 (fontified nil font-lock-face js2-object-property-access)) . -1494) (1491 . 1495)) nil (23393 61408 560399 0) 0 nil]) ((#("m" 0 1 (fontified t font-lock-face js2-object-property-access)) . -1491) (undo-tree-id158 . -1) (undo-tree-id159 . -1) (undo-tree-id160 . -1) (#("a" 0 1 (fontified t font-lock-face js2-object-property-access)) . -1492) (undo-tree-id161 . -1) (undo-tree-id162 . -1) (undo-tree-id163 . -1) (#("p" 0 1 (fontified t font-lock-face js2-object-property-access)) . -1493) (undo-tree-id164 . -1) (undo-tree-id165 . -1) (undo-tree-id166 . -1) (#("(" 0 1 (fontified t help-echo "missing `}' after expression" cursor-sensor-functions #1# face (rainbow-delimiters-depth-5-face))) . -1494) (undo-tree-id167 . -1) (undo-tree-id168 . -1) (undo-tree-id169 . -1) (#(")" 0 1 (fontified t face (rainbow-delimiters-depth-5-face))) . -1495) (undo-tree-id170 . -1) (undo-tree-id171 . -1) (undo-tree-id172 . -1) (undo-tree-id173 . 1) (undo-tree-id174 . -1) 1496) nil (23393 61408 560434 0) 0 nil]) ((1495 . 1496) (#(")" 0 1 (fontified nil help-echo "missing `}' after expression" cursor-sensor-functions #1# face (rainbow-delimiters-depth-5-face))) . -1495) (1495 . 1496)) nil (23393 61408 560442 0) 0 nil]) ((#("(" 0 1 (fontified nil face (rainbow-delimiters-depth-6-face))) . -1495) (undo-tree-id175 . -1) (undo-tree-id176 . -1) (#(")" 0 1 (fontified t help-echo "syntax error" cursor-sensor-functions #1# face (rainbow-delimiters-depth-6-face))) . 1496)) nil (23393 61408 560448 0) 0 nil]) ((#(")" 0 1 (fontified t help-echo "syntax error" cursor-sensor-functions #1# face (rainbow-delimiters-depth-6-face))) . -1496) (undo-tree-id177 . -1) (undo-tree-id178 . -1) (undo-tree-id179 . 1) (undo-tree-id180 . -1) 1497) nil (23393 61408 560457 0) 0 nil]) ((#(")" 0 1 (fontified nil)) . -1496) (1496 . 1497) (#(")" 0 1 (fontified nil face (rainbow-delimiters-depth-6-face))) . -1496) (1496 . 1497) (1495 . 1497) (#("(" 0 1 (fontified nil face (rainbow-delimiters-depth-5-face))) . -1495) (1495 . 1496)) nil (23393 61408 560462 0) 0 nil]) ((1494 . 1496) (#("(" 0 1 (fontified nil font-lock-face js2-object-property-access)) . -1494) (1474 . 1495)) nil (23393 61408 560470 0) 0 nil]) ((#("." 0 1 (fontified t help-echo "missing name after . operator" cursor-sensor-functions #1#)) . -1474) (undo-tree-id181 . -1) (undo-tree-id182 . -1) (undo-tree-id183 . -1) (#("s" 0 1 (fontified t font-lock-face js2-object-property-access)) . -1475) (undo-tree-id184 . -1) (undo-tree-id185 . -1) (#("d" 0 1 (fontified t font-lock-face js2-object-property-access)) . -1476) (undo-tree-id186 . -1) (undo-tree-id187 . -1) (#("a" 0 1 (fontified t font-lock-face js2-object-property-access)) . -1477) (undo-tree-id188 . -1) (undo-tree-id189 . -1) 1478) nil (23393 61408 560491 0) 0 nil]) ((1474 . 1478)) nil (23393 61408 560495 0) 0 nil]) ((#("," 0 1 (fontified t help-echo "syntax error" cursor-sensor-functions #1#)) . -1474) (undo-tree-id190 . -1) (undo-tree-id191 . -1) 1475) nil (23393 61408 560501 0) 0 nil]) ((1474 . 1475)) nil (23393 61408 560504 0) 0 nil]) ((#("." 0 1 (help-echo "missing name after . operator" cursor-sensor-functions #1# fontified t)) . -1474) (undo-tree-id192 . -1) (undo-tree-id193 . -1) (undo-tree-id194 . -1) 1475 (t 23393 60511 385458 725000)) nil (23393 61408 560512 0) 0 nil]) ((816 . 817)) nil (23393 60511 367731 0) 0 nil]) ((504 . 505)) nil (23393 60511 367740 0) 0 nil]) ((640 . 641) (t 23393 59658 492952 995000)) nil (23393 60511 367746 0) 0 nil]) ((#(" " 0 1 (fontified t help-echo "missing `}' after expression" cursor-sensor-functions #1#)) . -1472) (undo-tree-id74 . -1) (undo-tree-id75 . -1) (undo-tree-id76 . -1) (undo-tree-id77 . 1) (undo-tree-id78 . -1) (undo-tree-id79 . -1) 1473) nil (23393 59658 471288 0) 0 nil]) ((1461 . 1473)) nil (23393 59658 471294 0) 0 nil]) ((#("}" 0 1 (fontified nil)) . 1461) (1461 . 1462) (#("}" 0 1 (fontified nil help-echo "empty `{}' expression" cursor-sensor-functions #1#)) . -1461) (1461 . 1462)) nil (23393 59658 471297 0) 0 nil]) ((1447 . 1461) (1448 . 1460) (#("              " 0 14 (fontified nil help-echo "empty `{}' expression" cursor-sensor-functions #1# face (rainbow-delimiters-depth-4-face))) . 1447) (1447 . 1461) (1446 . 1448)) nil (23393 59658 471300 0) 0 nil]) ((1446 . 1447) (nil fontified nil 1445 . 1446) (nil font-lock-face rjsx-text 1445 . 1446) (1445 . 1446) (#("{" 0 1 (fontified nil font-lock-face rjsx-text)) . -1445) (1445 . 1446)) nil (23393 59658 471306 0) 0 nil]) ((#("e" 0 1 (fontified t font-lock-face rjsx-text syntax-table #18#)) . -1445) (undo-tree-id80 . -1) (undo-tree-id81 . -1) (undo-tree-id82 . -1) (undo-tree-id83 . 1) (undo-tree-id84 . -1) (undo-tree-id85 . -1) 1446) nil (23393 59658 471314 0) 0 nil]) ((1433 . 1445) 1434) nil (23393 59658 471316 0) 0 nil]) ((1433 . 1434)) nil (23393 59658 471318 0) 0 nil]) ((#("                  strokeWidth=\"0.5%\" stroke=\"#000\" fill=\"none\"/>" 0 18 (fontified t help-echo #65="syntax error" cursor-sensor-functions #1#) 18 29 (fontified t help-echo #65# cursor-sensor-functions #1#) 29 30 (fontified t help-echo #65# cursor-sensor-functions #1#) 30 36 (fontified t help-echo #65# cursor-sensor-functions #1#) 36 37 (fontified t help-echo #65# cursor-sensor-functions #1#) 37 43 (fontified t help-echo #65# cursor-sensor-functions #1#) 43 44 (fontified t help-echo #65# cursor-sensor-functions #1#) 44 50 (fontified t help-echo #65# cursor-sensor-functions #1#) 50 51 (fontified t help-echo #65# cursor-sensor-functions #1#) 51 55 (fontified t help-echo #65# cursor-sensor-functions #1#) 55 56 (fontified t help-echo #65# cursor-sensor-functions #1#) 56 62 (fontified t help-echo #65# cursor-sensor-functions #1#) 62 63 (rjsx-class self-closing-slash fontified t help-echo #65# cursor-sensor-functions #1#) 63 64 (fontified t help-echo #65# cursor-sensor-functions #1#)) . 1433) (undo-tree-id86 . 64) (undo-tree-id87 . 64) (undo-tree-id88 . 60) (undo-tree-id89 . 60) (undo-tree-id90 . -4) (undo-tree-id91 . -4) (undo-tree-id92 . 64) (undo-tree-id93 . 64) (undo-tree-id94 . 64) (undo-tree-id95 . 64) (undo-tree-id96 . 64) (undo-tree-id97 . 64) (undo-tree-id98 . 64) (undo-tree-id99 . 64) (undo-tree-id100 . 64) (undo-tree-id101 . 64) (undo-tree-id102 . 64) (undo-tree-id103 . 64) (undo-tree-id104 . 64) (undo-tree-id105 . 64) (undo-tree-id106 . 64) (undo-tree-id107 . 64) (undo-tree-id108 . 64) (undo-tree-id109 . 64) (undo-tree-id110 . 64) (undo-tree-id111 . 64) (undo-tree-id112 . 64) (undo-tree-id113 . 64) (undo-tree-id114 . 64) (undo-tree-id115 . 64) (undo-tree-id116 . 64) (undo-tree-id117 . 64) (undo-tree-id118 . 64) (undo-tree-id119 . 64) (undo-tree-id120 . 64) (undo-tree-id121 . 64) (undo-tree-id122 . 64) (undo-tree-id123 . 64) (undo-tree-id124 . 64) (undo-tree-id125 . 64) (undo-tree-id126 . 64) (undo-tree-id127 . 64) (undo-tree-id128 . 64) (undo-tree-id129 . 64) (undo-tree-id130 . 64) (undo-tree-id131 . 64) (undo-tree-id132 . 64) (undo-tree-id133 . 64) (undo-tree-id134 . 64) (undo-tree-id135 . 64) (undo-tree-id136 . 64) (undo-tree-id137 . 64) (undo-tree-id138 . 64) (undo-tree-id139 . 64) (undo-tree-id140 . 64) (undo-tree-id141 . 64) (undo-tree-id142 . 64) (undo-tree-id143 . 64) (undo-tree-id144 . 64) (undo-tree-id145 . 64) (undo-tree-id146 . 64) (undo-tree-id147 . 64) (undo-tree-id148 . 64) (undo-tree-id149 . 64) (undo-tree-id150 . 64) (undo-tree-id151 . 64) (undo-tree-id152 . -64) (undo-tree-id153 . 64) (undo-tree-id154 . 64) (undo-tree-id155 . -64)) nil (23393 59658 471442 0) 0 nil]) ((#("
" 0 1 (fontified t help-echo "syntax error" cursor-sensor-functions #1#)) . 1433) (undo-tree-id156 . 1) (undo-tree-id157 . 1) (undo-tree-id158 . 1) (undo-tree-id159 . 1) (undo-tree-id160 . 1) (undo-tree-id161 . 1) (undo-tree-id162 . 1) (undo-tree-id163 . 1) (undo-tree-id164 . 1) (undo-tree-id165 . 1) (undo-tree-id166 . 1) (undo-tree-id167 . 1) (undo-tree-id168 . 1) (undo-tree-id169 . 1) (undo-tree-id170 . 1) (undo-tree-id171 . 1) (undo-tree-id172 . 1) (undo-tree-id173 . 1) (undo-tree-id174 . 1) (undo-tree-id175 . 1) (undo-tree-id176 . 1) (undo-tree-id177 . 1) (undo-tree-id178 . 1) (undo-tree-id179 . 1) (undo-tree-id180 . 1) (undo-tree-id181 . 1) (undo-tree-id182 . 1) (undo-tree-id183 . 1) (undo-tree-id184 . 1) (undo-tree-id185 . 1) (undo-tree-id186 . 1) (undo-tree-id187 . 1) (undo-tree-id188 . 1) (undo-tree-id189 . 1) (undo-tree-id190 . 1) (undo-tree-id191 . 1) (undo-tree-id192 . 1) (undo-tree-id193 . 1) (undo-tree-id194 . 1) (undo-tree-id195 . 1) (undo-tree-id196 . 1) (undo-tree-id197 . 1) (undo-tree-id198 . 1) (undo-tree-id199 . 1) (undo-tree-id200 . 1) (undo-tree-id201 . 1) (undo-tree-id202 . 1) (undo-tree-id203 . 1) (undo-tree-id204 . 1) (undo-tree-id205 . 1) (undo-tree-id206 . 1) (undo-tree-id207 . 1) (undo-tree-id208 . 1) (undo-tree-id209 . 1) (undo-tree-id210 . 1) (undo-tree-id211 . 1) (undo-tree-id212 . 1) (undo-tree-id213 . 1) (undo-tree-id214 . 1) (undo-tree-id215 . 1) (undo-tree-id216 . 1) (undo-tree-id217 . 1) (undo-tree-id218 . -1)) nil (23393 59658 471539 0) 0 nil]) ((#("            <line id=\"str2\" y2$=\"[[_topFretY]]\" y1$=\"[[_bottomFretY]]\"" 0 12 (fontified t font-lock-face rjsx-text syntax-table #18#) 12 13 (fontified t font-lock-face rjsx-tag-bracket-face) 13 17 (fontified t font-lock-face rjsx-tag) 17 18 (fontified t) 18 20 (fontified t font-lock-face rjsx-attr) 20 21 (fontified t) 21 27 (fontified t font-lock-face font-lock-string-face) 27 28 (fontified t) 28 31 (fontified t font-lock-face rjsx-attr) 31 32 (fontified t) 32 47 (fontified t font-lock-face font-lock-string-face) 47 48 (fontified t) 48 51 (fontified t font-lock-face rjsx-attr) 51 52 (fontified t) 52 70 (fontified t font-lock-face font-lock-string-face)) . 1433) (undo-tree-id219 . 70) (undo-tree-id220 . 70) (undo-tree-id221 . 70) (undo-tree-id222 . 70) (undo-tree-id223 . 70) (undo-tree-id224 . 70) (undo-tree-id225 . 70) (undo-tree-id226 . 70) (undo-tree-id227 . 70) (undo-tree-id228 . 70) (undo-tree-id229 . 70) (undo-tree-id230 . 70) (undo-tree-id231 . 70) (undo-tree-id232 . 70) (undo-tree-id233 . 70) (undo-tree-id234 . 70) (undo-tree-id235 . 70) (undo-tree-id236 . 70) (undo-tree-id237 . 70) (undo-tree-id238 . 70) (undo-tree-id239 . 70) (undo-tree-id240 . 70) (undo-tree-id241 . 70) (undo-tree-id242 . 70) (undo-tree-id243 . 70) (undo-tree-id244 . 70) (undo-tree-id245 . 70) (undo-tree-id246 . 70) (undo-tree-id247 . 70) (undo-tree-id248 . 70) (undo-tree-id249 . 70) (undo-tree-id250 . 70) (undo-tree-id251 . 70) (undo-tree-id252 . 70) (undo-tree-id253 . 70) (undo-tree-id254 . 70) (undo-tree-id255 . 70) (undo-tree-id256 . 70) (undo-tree-id257 . 70) (undo-tree-id258 . 70) (undo-tree-id259 . 70) (undo-tree-id260 . 70) (undo-tree-id261 . 70) (undo-tree-id262 . 70) (undo-tree-id263 . 70) (undo-tree-id264 . 70) (undo-tree-id265 . 70) (undo-tree-id266 . 70) (undo-tree-id267 . 70) (undo-tree-id268 . 70) (undo-tree-id269 . 70) (undo-tree-id270 . 70) (undo-tree-id271 . 70) (undo-tree-id272 . 70) (undo-tree-id273 . 70) (undo-tree-id274 . 70) (undo-tree-id275 . 70) (undo-tree-id276 . 70) (undo-tree-id277 . 70) (undo-tree-id278 . 70) (undo-tree-id279 . -70)) nil (23393 59658 471618 0) 0 nil]) ((#("
" 0 1 (fontified t font-lock-face rjsx-text syntax-table #18#)) . 1433) (undo-tree-id280 . 1) (undo-tree-id281 . 1) (undo-tree-id282 . 1) (undo-tree-id283 . 1) (undo-tree-id284 . 1) (undo-tree-id285 . 1) (undo-tree-id286 . 1) (undo-tree-id287 . 1) (undo-tree-id288 . 1) (undo-tree-id289 . 1) (undo-tree-id290 . 1) (undo-tree-id291 . 1) (undo-tree-id292 . 1) (undo-tree-id293 . 1) (undo-tree-id294 . 1) (undo-tree-id295 . 1) (undo-tree-id296 . 1) (undo-tree-id297 . 1) (undo-tree-id298 . 1) (undo-tree-id299 . 1) (undo-tree-id300 . 1) (undo-tree-id301 . 1) (undo-tree-id302 . 1) (undo-tree-id303 . 1) (undo-tree-id304 . 1) (undo-tree-id305 . 1) (undo-tree-id306 . 1) (undo-tree-id307 . 1) (undo-tree-id308 . 1) (undo-tree-id309 . 1) (undo-tree-id310 . 1) (undo-tree-id311 . 1) (undo-tree-id312 . 1) (undo-tree-id313 . 1) (undo-tree-id314 . 1) (undo-tree-id315 . 1) (undo-tree-id316 . 1) (undo-tree-id317 . 1) (undo-tree-id318 . 1) (undo-tree-id319 . 1) (undo-tree-id320 . 1) (undo-tree-id321 . 1) (undo-tree-id322 . 1) (undo-tree-id323 . 1) (undo-tree-id324 . 1) (undo-tree-id325 . 1) (undo-tree-id326 . 1) (undo-tree-id327 . 1) (undo-tree-id328 . 1) (undo-tree-id329 . 1) (undo-tree-id330 . 1) (undo-tree-id331 . 1) (undo-tree-id332 . 1) (undo-tree-id333 . 1) (undo-tree-id334 . 1) (undo-tree-id335 . 1) (undo-tree-id336 . 1) (undo-tree-id337 . 1) (undo-tree-id338 . -1)) nil (23393 59658 471702 0) 0 nil]) ((#("                  strokeWidth=\"0.5%\" stroke=\"#000\" fill=\"none\"/>" 0 18 (fontified t help-echo #66="syntax error" cursor-sensor-functions #1#) 18 21 (fontified t help-echo #66# cursor-sensor-functions #1#) 21 29 (fontified t help-echo #66# cursor-sensor-functions #1#) 29 30 (fontified t help-echo #66# cursor-sensor-functions #1#) 30 36 (fontified t help-echo #66# cursor-sensor-functions #1#) 36 37 (fontified t help-echo #66# cursor-sensor-functions #1#) 37 43 (fontified t help-echo #66# cursor-sensor-functions #1#) 43 44 (fontified t help-echo #66# cursor-sensor-functions #1#) 44 45 (fontified t help-echo #66# cursor-sensor-functions #1#) 45 50 (fontified t help-echo #66# cursor-sensor-functions #1#) 50 51 (fontified t help-echo #66# cursor-sensor-functions #1#) 51 55 (fontified t help-echo #66# cursor-sensor-functions #1#) 55 56 (fontified t help-echo #66# cursor-sensor-functions #1#) 56 62 (fontified t help-echo #66# cursor-sensor-functions #1#) 62 63 (rjsx-class self-closing-slash fontified t help-echo #66# cursor-sensor-functions #1#) 63 64 (fontified t help-echo #66# cursor-sensor-functions #1#)) . 1433) (undo-tree-id339 . -21) (undo-tree-id340 . 64) (undo-tree-id341 . 64) (undo-tree-id342 . 64) (undo-tree-id343 . 64) (undo-tree-id344 . 64) (undo-tree-id345 . 64) (undo-tree-id346 . 64) (undo-tree-id347 . 64) (undo-tree-id348 . 64) (undo-tree-id349 . 64) (undo-tree-id350 . 64) (undo-tree-id351 . 64) (undo-tree-id352 . 64) (undo-tree-id353 . 64) (undo-tree-id354 . 64) (undo-tree-id355 . 64) (undo-tree-id356 . 64) (undo-tree-id357 . 64) (undo-tree-id358 . 64) (undo-tree-id359 . 64) (undo-tree-id360 . 64) (undo-tree-id361 . -45) (undo-tree-id362 . 64) (undo-tree-id363 . 64) (undo-tree-id364 . 64) (undo-tree-id365 . 64) (undo-tree-id366 . 64) (undo-tree-id367 . 64) (undo-tree-id368 . 64) (undo-tree-id369 . 64) (undo-tree-id370 . 64) (undo-tree-id371 . 64) (undo-tree-id372 . 64) (undo-tree-id373 . 64) (undo-tree-id374 . 64) (undo-tree-id375 . 64) (undo-tree-id376 . 64) (undo-tree-id377 . 64) (undo-tree-id378 . 64) (undo-tree-id379 . 64) (undo-tree-id380 . 64) (undo-tree-id381 . 64) (undo-tree-id382 . 64) (undo-tree-id383 . 64) (undo-tree-id384 . 64) (undo-tree-id385 . 64) (undo-tree-id386 . 64) (undo-tree-id387 . 64) (undo-tree-id388 . 64) (undo-tree-id389 . 64) (undo-tree-id390 . 64) (undo-tree-id391 . 64) (undo-tree-id392 . 64) (undo-tree-id393 . 64) (undo-tree-id394 . 64) (undo-tree-id395 . -64) (undo-tree-id396 . 64) (undo-tree-id397 . 64) (undo-tree-id398 . -64)) nil (23393 59658 471770 0) 0 nil]) ((#("
" 0 1 (fontified t help-echo "syntax error" cursor-sensor-functions #1#)) . 1433) (undo-tree-id399 . -1) (undo-tree-id400 . 1) (undo-tree-id401 . 1) (undo-tree-id402 . 1) (undo-tree-id403 . 1) (undo-tree-id404 . 1) (undo-tree-id405 . 1) (undo-tree-id406 . 1) (undo-tree-id407 . 1) (undo-tree-id408 . 1) (undo-tree-id409 . 1) (undo-tree-id410 . 1) (undo-tree-id411 . 1) (undo-tree-id412 . 1) (undo-tree-id413 . 1) (undo-tree-id414 . 1) (undo-tree-id415 . 1) (undo-tree-id416 . 1) (undo-tree-id417 . 1) (undo-tree-id418 . 1) (undo-tree-id419 . 1) (undo-tree-id420 . 1) (undo-tree-id421 . -1) (undo-tree-id422 . 1) (undo-tree-id423 . 1) (undo-tree-id424 . 1) (undo-tree-id425 . 1) (undo-tree-id426 . 1) (undo-tree-id427 . 1) (undo-tree-id428 . 1) (undo-tree-id429 . 1) (undo-tree-id430 . 1) (undo-tree-id431 . 1) (undo-tree-id432 . 1) (undo-tree-id433 . 1) (undo-tree-id434 . 1) (undo-tree-id435 . 1) (undo-tree-id436 . 1) (undo-tree-id437 . 1) (undo-tree-id438 . 1) (undo-tree-id439 . 1) (undo-tree-id440 . 1) (undo-tree-id441 . 1) (undo-tree-id442 . 1) (undo-tree-id443 . 1) (undo-tree-id444 . 1) (undo-tree-id445 . 1) (undo-tree-id446 . 1) (undo-tree-id447 . 1) (undo-tree-id448 . 1) (undo-tree-id449 . 1) (undo-tree-id450 . 1) (undo-tree-id451 . 1) (undo-tree-id452 . 1) (undo-tree-id453 . 1) (undo-tree-id454 . 1) (undo-tree-id455 . -1)) nil (23393 59658 471839 0) 0 nil]) ((#("            <line id=\"str3\" y2$=\"[[_topFretY]]\" y1$=\"[[_bottomFretY]]\"" 0 12 (fontified t font-lock-face rjsx-text syntax-table #18#) 12 13 (fontified t font-lock-face rjsx-tag-bracket-face) 13 17 (fontified t font-lock-face rjsx-tag) 17 18 (fontified t) 18 20 (fontified t font-lock-face rjsx-attr) 20 21 (fontified t) 21 27 (fontified t font-lock-face font-lock-string-face) 27 28 (fontified t) 28 31 (fontified t font-lock-face rjsx-attr) 31 32 (fontified t) 32 47 (fontified t font-lock-face font-lock-string-face) 47 48 (fontified t) 48 51 (fontified t font-lock-face rjsx-attr) 51 52 (fontified t) 52 70 (fontified t font-lock-face font-lock-string-face)) . 1433) (undo-tree-id456 . 70) (undo-tree-id457 . 70) (undo-tree-id458 . 70) (undo-tree-id459 . 70) (undo-tree-id460 . 70) (undo-tree-id461 . 70) (undo-tree-id462 . 70) (undo-tree-id463 . 70) (undo-tree-id464 . 70) (undo-tree-id465 . 70) (undo-tree-id466 . 70) (undo-tree-id467 . 70) (undo-tree-id468 . 70) (undo-tree-id469 . 7) (undo-tree-id470 . 7) (undo-tree-id471 . -63) (undo-tree-id472 . -63) (undo-tree-id473 . 70) (undo-tree-id474 . 70) (undo-tree-id475 . 70) (undo-tree-id476 . 70) (undo-tree-id477 . 70) (undo-tree-id478 . 70) (undo-tree-id479 . 70) (undo-tree-id480 . 70) (undo-tree-id481 . 70) (undo-tree-id482 . 70) (undo-tree-id483 . 70) (undo-tree-id484 . 70) (undo-tree-id485 . 70) (undo-tree-id486 . 70) (undo-tree-id487 . 70) (undo-tree-id488 . 70) (undo-tree-id489 . 70) (undo-tree-id490 . 70) (undo-tree-id491 . 70) (undo-tree-id492 . 70) (undo-tree-id493 . 70) (undo-tree-id494 . 70) (undo-tree-id495 . 70) (undo-tree-id496 . 70) (undo-tree-id497 . 70) (undo-tree-id498 . 70) (undo-tree-id499 . 70) (undo-tree-id500 . 70) (undo-tree-id501 . 70) (undo-tree-id502 . 70) (undo-tree-id503 . 70) (undo-tree-id504 . 70) (undo-tree-id505 . 70) (undo-tree-id506 . 70) (undo-tree-id507 . 70) (undo-tree-id508 . 70) (undo-tree-id509 . 70) (undo-tree-id510 . -70)) nil (23393 59658 471929 0) 0 nil]) ((#("
" 0 1 (fontified t font-lock-face rjsx-text syntax-table #18#)) . 1433) (undo-tree-id511 . 1) (undo-tree-id512 . 1) (undo-tree-id513 . -1) (undo-tree-id514 . 1) (undo-tree-id515 . 1) (undo-tree-id516 . 1) (undo-tree-id517 . 1) (undo-tree-id518 . 1) (undo-tree-id519 . 1) (undo-tree-id520 . 1) (undo-tree-id521 . 1) (undo-tree-id522 . 1) (undo-tree-id523 . 1) (undo-tree-id524 . 1) (undo-tree-id525 . 1) (undo-tree-id526 . 1) (undo-tree-id527 . 1) (undo-tree-id528 . 1) (undo-tree-id529 . 1) (undo-tree-id530 . 1) (undo-tree-id531 . 1) (undo-tree-id532 . 1) (undo-tree-id533 . 1) (undo-tree-id534 . 1) (undo-tree-id535 . 1) (undo-tree-id536 . 1) (undo-tree-id537 . 1) (undo-tree-id538 . 1) (undo-tree-id539 . 1) (undo-tree-id540 . 1) (undo-tree-id541 . 1) (undo-tree-id542 . 1) (undo-tree-id543 . 1) (undo-tree-id544 . 1) (undo-tree-id545 . 1) (undo-tree-id546 . 1) (undo-tree-id547 . 1) (undo-tree-id548 . 1) (undo-tree-id549 . 1) (undo-tree-id550 . 1) (undo-tree-id551 . 1) (undo-tree-id552 . 1) (undo-tree-id553 . 1) (undo-tree-id554 . 1) (undo-tree-id555 . 1) (undo-tree-id556 . 1) (undo-tree-id557 . 1) (undo-tree-id558 . 1) (undo-tree-id559 . 1) (undo-tree-id560 . -1)) nil (23393 59658 471984 0) 0 nil]) ((#("                  strokeWidth=\"0.5%\" stroke=\"#000\" fill=\"none\"/>" 0 18 (fontified t help-echo #67="syntax error" cursor-sensor-functions #1#) 18 29 (fontified t help-echo #67# cursor-sensor-functions #1#) 29 30 (fontified t help-echo #67# cursor-sensor-functions #1#) 30 36 (fontified t help-echo #67# cursor-sensor-functions #1#) 36 37 (fontified t help-echo #67# cursor-sensor-functions #1#) 37 43 (fontified t help-echo #67# cursor-sensor-functions #1#) 43 44 (fontified t help-echo #67# cursor-sensor-functions #1#) 44 50 (fontified t help-echo #67# cursor-sensor-functions #1#) 50 51 (fontified t help-echo #67# cursor-sensor-functions #1#) 51 54 (fontified t help-echo #67# cursor-sensor-functions #1#) 54 55 (fontified t help-echo #67# cursor-sensor-functions #1#) 55 56 (fontified t help-echo #67# cursor-sensor-functions #1#) 56 62 (fontified t help-echo #67# cursor-sensor-functions #1#) 62 63 (rjsx-class self-closing-slash fontified t help-echo #67# cursor-sensor-functions #1#) 63 64 (fontified t help-echo #67# cursor-sensor-functions #1#)) . 1433) (undo-tree-id561 . 64) (undo-tree-id562 . 64) (undo-tree-id563 . 60) (undo-tree-id564 . 60) (undo-tree-id565 . -4) (undo-tree-id566 . -4) (undo-tree-id567 . 64) (undo-tree-id568 . 64) (undo-tree-id569 . 64) (undo-tree-id570 . 64) (undo-tree-id571 . 64) (undo-tree-id572 . 64) (undo-tree-id573 . 64) (undo-tree-id574 . 64) (undo-tree-id575 . 64) (undo-tree-id576 . 1) (undo-tree-id577 . 1) (undo-tree-id578 . -63) (undo-tree-id579 . -63) (undo-tree-id580 . 64) (undo-tree-id581 . 64) (undo-tree-id582 . 64) (undo-tree-id583 . 64) (undo-tree-id584 . -54) (undo-tree-id585 . 64) (undo-tree-id586 . 64) (undo-tree-id587 . 64) (undo-tree-id588 . 64) (undo-tree-id589 . 64) (undo-tree-id590 . 64) (undo-tree-id591 . 64) (undo-tree-id592 . 64) (undo-tree-id593 . 64) (undo-tree-id594 . 64) (undo-tree-id595 . 64) (undo-tree-id596 . 64) (undo-tree-id597 . 64) (undo-tree-id598 . 64) (undo-tree-id599 . 64) (undo-tree-id600 . 64) (undo-tree-id601 . 64) (undo-tree-id602 . 64) (undo-tree-id603 . 64) (undo-tree-id604 . 64) (undo-tree-id605 . 64) (undo-tree-id606 . 64) (undo-tree-id607 . 64) (undo-tree-id608 . 64) (undo-tree-id609 . 64) (undo-tree-id610 . -64) (undo-tree-id611 . 64) (undo-tree-id612 . 64) (undo-tree-id613 . -64)) nil (23393 59658 472043 0) 0 nil]) nil nil (23393 59658 472090 0) 0 nil] #68# 80040 704 nil]